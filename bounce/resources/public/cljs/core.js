// Compiled by ClojureScript 0.0-2665 {:static-fns true}
if(!goog.isProvided_('cljs.core')) {
goog.provide('cljs.core');
}
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__13293__delegate = function (args){
return console.log.apply(console,(function (){var G__13292 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__13292) : cljs.core.into_array.call(null,G__13292));
})());
};
var G__13293 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13294__i = 0, G__13294__a = new Array(arguments.length -  0);
while (G__13294__i < G__13294__a.length) {G__13294__a[G__13294__i] = arguments[G__13294__i + 0]; ++G__13294__i;}
  args = new cljs.core.IndexedSeq(G__13294__a,0);
} 
return G__13293__delegate.call(this,args);};
G__13293.cljs$lang$maxFixedArity = 0;
G__13293.cljs$lang$applyTo = (function (arglist__13295){
var args = cljs.core.seq(arglist__13295);
return G__13293__delegate(args);
});
G__13293.cljs$core$IFn$_invoke$arity$variadic = G__13293__delegate;
return G__13293;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__13297 = x;
return goog.isString(G__13297);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__13299 = x__$1;
return goog.typeOf(G__13299);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__11617__auto__ = ty;
if(cljs.core.truth_(and__11617__auto__)){
return ty.cljs$lang$type;
} else {
return and__11617__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__13301 = obj;
return goog.typeOf(G__13301);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__13303 = Symbol;
return goog.typeOf(G__13303);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__12516__auto___13305 = len;
var i_13306 = (0);
while(true){
if((i_13306 < n__12516__auto___13305)){
(new_arr[i_13306] = (arr[i_13306]));

var G__13307 = (i_13306 + (1));
i_13306 = G__13307;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__13308 = (i + (1));
i = G__13308;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__13317__delegate = function (array,i,idxs){
var G__13314 = aget;
var G__13315 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__13316 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__13314,G__13315,G__13316) : cljs.core.apply.call(null,G__13314,G__13315,G__13316));
};
var G__13317 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__13318__i = 0, G__13318__a = new Array(arguments.length -  2);
while (G__13318__i < G__13318__a.length) {G__13318__a[G__13318__i] = arguments[G__13318__i + 2]; ++G__13318__i;}
  idxs = new cljs.core.IndexedSeq(G__13318__a,0);
} 
return G__13317__delegate.call(this,array,i,idxs);};
G__13317.cljs$lang$maxFixedArity = 2;
G__13317.cljs$lang$applyTo = (function (arglist__13319){
var array = cljs.core.first(arglist__13319);
arglist__13319 = cljs.core.next(arglist__13319);
var i = cljs.core.first(arglist__13319);
var idxs = cljs.core.rest(arglist__13319);
return G__13317__delegate(array,i,idxs);
});
G__13317.cljs$core$IFn$_invoke$arity$variadic = G__13317__delegate;
return G__13317;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__13320 = null;
if (arguments.length > 2) {
var G__13321__i = 0, G__13321__a = new Array(arguments.length -  2);
while (G__13321__i < G__13321__a.length) {G__13321__a[G__13321__i] = arguments[G__13321__i + 2]; ++G__13321__i;}
G__13320 = new cljs.core.IndexedSeq(G__13321__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__13320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__13330__delegate = function (array,idx,idx2,idxv){
var G__13326 = aset;
var G__13327 = (array[idx]);
var G__13328 = idx2;
var G__13329 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__13326,G__13327,G__13328,G__13329) : cljs.core.apply.call(null,G__13326,G__13327,G__13328,G__13329));
};
var G__13330 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__13331__i = 0, G__13331__a = new Array(arguments.length -  3);
while (G__13331__i < G__13331__a.length) {G__13331__a[G__13331__i] = arguments[G__13331__i + 3]; ++G__13331__i;}
  idxv = new cljs.core.IndexedSeq(G__13331__a,0);
} 
return G__13330__delegate.call(this,array,idx,idx2,idxv);};
G__13330.cljs$lang$maxFixedArity = 3;
G__13330.cljs$lang$applyTo = (function (arglist__13332){
var array = cljs.core.first(arglist__13332);
arglist__13332 = cljs.core.next(arglist__13332);
var idx = cljs.core.first(arglist__13332);
arglist__13332 = cljs.core.next(arglist__13332);
var idx2 = cljs.core.first(arglist__13332);
var idxv = cljs.core.rest(arglist__13332);
return G__13330__delegate(array,idx,idx2,idxv);
});
G__13330.cljs$core$IFn$_invoke$arity$variadic = G__13330__delegate;
return G__13330;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__13333 = null;
if (arguments.length > 3) {
var G__13334__i = 0, G__13334__a = new Array(arguments.length -  3);
while (G__13334__i < G__13334__a.length) {G__13334__a[G__13334__i] = arguments[G__13334__i + 3]; ++G__13334__i;}
G__13333 = new cljs.core.IndexedSeq(G__13334__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__13333);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__13340 = (function (a,x){
a.push(x);

return a;
});
var G__13341 = [];
var G__13342 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__13340,G__13341,G__13342) : cljs.core.reduce.call(null,G__13340,G__13341,G__13342));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__13343__i = 0, G__13343__a = new Array(arguments.length -  2);
while (G__13343__i < G__13343__a.length) {G__13343__a[G__13343__i] = arguments[G__13343__i + 2]; ++G__13343__i;}
  args = new cljs.core.IndexedSeq(G__13343__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__13344){
var obj = cljs.core.first(arglist__13344);
arglist__13344 = cljs.core.next(arglist__13344);
var s = cljs.core.first(arglist__13344);
var args = cljs.core.rest(arglist__13344);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj13346 = {};
return obj13346;
})();


cljs.core.IFn = (function (){var obj13348 = {};
return obj13348;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13394 = x__12273__auto__;
return goog.typeOf(G__13394);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13396 = x__12273__auto__;
return goog.typeOf(G__13396);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13398 = x__12273__auto__;
return goog.typeOf(G__13398);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13400 = x__12273__auto__;
return goog.typeOf(G__13400);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13402 = x__12273__auto__;
return goog.typeOf(G__13402);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13404 = x__12273__auto__;
return goog.typeOf(G__13404);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13406 = x__12273__auto__;
return goog.typeOf(G__13406);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13408 = x__12273__auto__;
return goog.typeOf(G__13408);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13410 = x__12273__auto__;
return goog.typeOf(G__13410);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13412 = x__12273__auto__;
return goog.typeOf(G__13412);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13414 = x__12273__auto__;
return goog.typeOf(G__13414);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13416 = x__12273__auto__;
return goog.typeOf(G__13416);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13418 = x__12273__auto__;
return goog.typeOf(G__13418);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13420 = x__12273__auto__;
return goog.typeOf(G__13420);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13422 = x__12273__auto__;
return goog.typeOf(G__13422);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13424 = x__12273__auto__;
return goog.typeOf(G__13424);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13426 = x__12273__auto__;
return goog.typeOf(G__13426);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13428 = x__12273__auto__;
return goog.typeOf(G__13428);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13430 = x__12273__auto__;
return goog.typeOf(G__13430);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13432 = x__12273__auto__;
return goog.typeOf(G__13432);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13434 = x__12273__auto__;
return goog.typeOf(G__13434);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._invoke[(function (){var G__13436 = x__12273__auto__;
return goog.typeOf(G__13436);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._invoke["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj13438 = {};
return obj13438;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__11617__auto__ = value;
if(and__11617__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__11617__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__12273__auto__ = (((value == null))?null:value);
return (function (){var or__11629__auto__ = (cljs.core._clone[(function (){var G__13442 = x__12273__auto__;
return goog.typeOf(G__13442);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._clone["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj13444 = {};
return obj13444;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._count[(function (){var G__13448 = x__12273__auto__;
return goog.typeOf(G__13448);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._count["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj13450 = {};
return obj13450;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._empty[(function (){var G__13454 = x__12273__auto__;
return goog.typeOf(G__13454);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._empty["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj13456 = {};
return obj13456;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._conj[(function (){var G__13460 = x__12273__auto__;
return goog.typeOf(G__13460);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._conj["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj13462 = {};
return obj13462;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._nth[(function (){var G__13468 = x__12273__auto__;
return goog.typeOf(G__13468);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._nth["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._nth[(function (){var G__13470 = x__12273__auto__;
return goog.typeOf(G__13470);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._nth["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj13472 = {};
return obj13472;
})();


cljs.core.ISeq = (function (){var obj13474 = {};
return obj13474;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._first[(function (){var G__13478 = x__12273__auto__;
return goog.typeOf(G__13478);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._first["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._rest[(function (){var G__13482 = x__12273__auto__;
return goog.typeOf(G__13482);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._rest["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj13484 = {};
return obj13484;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._next[(function (){var G__13488 = x__12273__auto__;
return goog.typeOf(G__13488);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._next["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj13490 = {};
return obj13490;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._lookup[(function (){var G__13496 = x__12273__auto__;
return goog.typeOf(G__13496);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._lookup["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._lookup[(function (){var G__13498 = x__12273__auto__;
return goog.typeOf(G__13498);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._lookup["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj13500 = {};
return obj13500;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__13504 = x__12273__auto__;
return goog.typeOf(G__13504);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._assoc[(function (){var G__13508 = x__12273__auto__;
return goog.typeOf(G__13508);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._assoc["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj13510 = {};
return obj13510;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._dissoc[(function (){var G__13514 = x__12273__auto__;
return goog.typeOf(G__13514);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._dissoc["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj13516 = {};
return obj13516;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._key[(function (){var G__13520 = x__12273__auto__;
return goog.typeOf(G__13520);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._key["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._val[(function (){var G__13524 = x__12273__auto__;
return goog.typeOf(G__13524);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._val["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj13526 = {};
return obj13526;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._disjoin[(function (){var G__13530 = x__12273__auto__;
return goog.typeOf(G__13530);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._disjoin["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj13532 = {};
return obj13532;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._peek[(function (){var G__13536 = x__12273__auto__;
return goog.typeOf(G__13536);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._peek["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._pop[(function (){var G__13540 = x__12273__auto__;
return goog.typeOf(G__13540);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._pop["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj13542 = {};
return obj13542;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._assoc_n[(function (){var G__13546 = x__12273__auto__;
return goog.typeOf(G__13546);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj13548 = {};
return obj13548;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._deref[(function (){var G__13552 = x__12273__auto__;
return goog.typeOf(G__13552);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._deref["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj13554 = {};
return obj13554;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._deref_with_timeout[(function (){var G__13558 = x__12273__auto__;
return goog.typeOf(G__13558);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj13560 = {};
return obj13560;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._meta[(function (){var G__13564 = x__12273__auto__;
return goog.typeOf(G__13564);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._meta["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj13566 = {};
return obj13566;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._with_meta[(function (){var G__13570 = x__12273__auto__;
return goog.typeOf(G__13570);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._with_meta["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj13572 = {};
return obj13572;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._reduce[(function (){var G__13578 = x__12273__auto__;
return goog.typeOf(G__13578);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._reduce["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._reduce[(function (){var G__13580 = x__12273__auto__;
return goog.typeOf(G__13580);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._reduce["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj13582 = {};
return obj13582;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._kv_reduce[(function (){var G__13586 = x__12273__auto__;
return goog.typeOf(G__13586);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj13588 = {};
return obj13588;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._equiv[(function (){var G__13592 = x__12273__auto__;
return goog.typeOf(G__13592);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._equiv["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj13594 = {};
return obj13594;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._hash[(function (){var G__13598 = x__12273__auto__;
return goog.typeOf(G__13598);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._hash["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj13600 = {};
return obj13600;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._seq[(function (){var G__13604 = x__12273__auto__;
return goog.typeOf(G__13604);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._seq["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj13606 = {};
return obj13606;
})();


cljs.core.IList = (function (){var obj13608 = {};
return obj13608;
})();


cljs.core.IRecord = (function (){var obj13610 = {};
return obj13610;
})();


cljs.core.IReversible = (function (){var obj13612 = {};
return obj13612;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._rseq[(function (){var G__13616 = x__12273__auto__;
return goog.typeOf(G__13616);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._rseq["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj13618 = {};
return obj13618;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._sorted_seq[(function (){var G__13622 = x__12273__auto__;
return goog.typeOf(G__13622);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._sorted_seq_from[(function (){var G__13626 = x__12273__auto__;
return goog.typeOf(G__13626);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._entry_key[(function (){var G__13630 = x__12273__auto__;
return goog.typeOf(G__13630);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._entry_key["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._comparator[(function (){var G__13634 = x__12273__auto__;
return goog.typeOf(G__13634);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._comparator["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj13636 = {};
return obj13636;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__11617__auto__ = writer;
if(and__11617__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__11617__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__12273__auto__ = (((writer == null))?null:writer);
return (function (){var or__11629__auto__ = (cljs.core._write[(function (){var G__13640 = x__12273__auto__;
return goog.typeOf(G__13640);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._write["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__11617__auto__ = writer;
if(and__11617__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__11617__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__12273__auto__ = (((writer == null))?null:writer);
return (function (){var or__11629__auto__ = (cljs.core._flush[(function (){var G__13644 = x__12273__auto__;
return goog.typeOf(G__13644);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._flush["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj13646 = {};
return obj13646;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._pr_writer[(function (){var G__13650 = x__12273__auto__;
return goog.typeOf(G__13650);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj13652 = {};
return obj13652;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__11617__auto__ = d;
if(and__11617__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__11617__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__12273__auto__ = (((d == null))?null:d);
return (function (){var or__11629__auto__ = (cljs.core._realized_QMARK_[(function (){var G__13656 = x__12273__auto__;
return goog.typeOf(G__13656);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj13658 = {};
return obj13658;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._notify_watches[(function (){var G__13662 = x__12273__auto__;
return goog.typeOf(G__13662);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._add_watch[(function (){var G__13666 = x__12273__auto__;
return goog.typeOf(G__13666);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._add_watch["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__11617__auto__ = this$;
if(and__11617__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__11617__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__12273__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11629__auto__ = (cljs.core._remove_watch[(function (){var G__13670 = x__12273__auto__;
return goog.typeOf(G__13670);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj13672 = {};
return obj13672;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._as_transient[(function (){var G__13676 = x__12273__auto__;
return goog.typeOf(G__13676);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._as_transient["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj13678 = {};
return obj13678;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__11617__auto__ = tcoll;
if(and__11617__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__11617__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__12273__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__11629__auto__ = (cljs.core._conj_BANG_[(function (){var G__13682 = x__12273__auto__;
return goog.typeOf(G__13682);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__11617__auto__ = tcoll;
if(and__11617__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__11617__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__12273__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__11629__auto__ = (cljs.core._persistent_BANG_[(function (){var G__13686 = x__12273__auto__;
return goog.typeOf(G__13686);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj13688 = {};
return obj13688;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__11617__auto__ = tcoll;
if(and__11617__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__11617__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__12273__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__11629__auto__ = (cljs.core._assoc_BANG_[(function (){var G__13692 = x__12273__auto__;
return goog.typeOf(G__13692);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj13694 = {};
return obj13694;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__11617__auto__ = tcoll;
if(and__11617__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__11617__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__12273__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__11629__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__13698 = x__12273__auto__;
return goog.typeOf(G__13698);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj13700 = {};
return obj13700;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__11617__auto__ = tcoll;
if(and__11617__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__11617__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__12273__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__11629__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__13704 = x__12273__auto__;
return goog.typeOf(G__13704);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__11617__auto__ = tcoll;
if(and__11617__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__11617__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__12273__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__11629__auto__ = (cljs.core._pop_BANG_[(function (){var G__13708 = x__12273__auto__;
return goog.typeOf(G__13708);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj13710 = {};
return obj13710;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__11617__auto__ = tcoll;
if(and__11617__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__11617__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__12273__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__11629__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__13714 = x__12273__auto__;
return goog.typeOf(G__13714);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj13716 = {};
return obj13716;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__11617__auto__ = x;
if(and__11617__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__11617__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__12273__auto__ = (((x == null))?null:x);
return (function (){var or__11629__auto__ = (cljs.core._compare[(function (){var G__13720 = x__12273__auto__;
return goog.typeOf(G__13720);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._compare["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj13722 = {};
return obj13722;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._drop_first[(function (){var G__13726 = x__12273__auto__;
return goog.typeOf(G__13726);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._drop_first["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj13728 = {};
return obj13728;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._chunked_first[(function (){var G__13732 = x__12273__auto__;
return goog.typeOf(G__13732);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._chunked_rest[(function (){var G__13736 = x__12273__auto__;
return goog.typeOf(G__13736);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj13738 = {};
return obj13738;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._chunked_next[(function (){var G__13742 = x__12273__auto__;
return goog.typeOf(G__13742);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj13744 = {};
return obj13744;
})();

cljs.core._name = (function _name(x){
if((function (){var and__11617__auto__ = x;
if(and__11617__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__11617__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__12273__auto__ = (((x == null))?null:x);
return (function (){var or__11629__auto__ = (cljs.core._name[(function (){var G__13748 = x__12273__auto__;
return goog.typeOf(G__13748);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._name["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__11617__auto__ = x;
if(and__11617__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__11617__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__12273__auto__ = (((x == null))?null:x);
return (function (){var or__11629__auto__ = (cljs.core._namespace[(function (){var G__13752 = x__12273__auto__;
return goog.typeOf(G__13752);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._namespace["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj13754 = {};
return obj13754;
})();


cljs.core.IReset = (function (){var obj13756 = {};
return obj13756;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._reset_BANG_[(function (){var G__13760 = x__12273__auto__;
return goog.typeOf(G__13760);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj13762 = {};
return obj13762;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._swap_BANG_[(function (){var G__13772 = x__12273__auto__;
return goog.typeOf(G__13772);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._swap_BANG_[(function (){var G__13774 = x__12273__auto__;
return goog.typeOf(G__13774);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._swap_BANG_[(function (){var G__13776 = x__12273__auto__;
return goog.typeOf(G__13776);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._swap_BANG_[(function (){var G__13778 = x__12273__auto__;
return goog.typeOf(G__13778);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj13780 = {};
return obj13780;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__11617__auto__ = o;
if(and__11617__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__11617__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__12273__auto__ = (((o == null))?null:o);
return (function (){var or__11629__auto__ = (cljs.core._vreset_BANG_[(function (){var G__13784 = x__12273__auto__;
return goog.typeOf(G__13784);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj13786 = {};
return obj13786;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__11617__auto__ = coll;
if(and__11617__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__11617__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__12273__auto__ = (((coll == null))?null:coll);
return (function (){var or__11629__auto__ = (cljs.core._iterator[(function (){var G__13790 = x__12273__auto__;
return goog.typeOf(G__13790);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._iterator["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__13793 = (4294967295);
var G__13794 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__13793,G__13794) : Math.imul.call(null,G__13793,G__13794));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__13797 = a;
var G__13798 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__13797,G__13798) : Math.imul.call(null,G__13797,G__13798));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__13799 = (i + (2));
var G__13800 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__13799;
h1 = G__13800;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj13802 = {};
return obj13802;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__13803 = (i + (1));
var G__13804 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__13803;
hash = G__13804;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj13808 = {};
return obj13808;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__13811 = o;
if(G__13811){
var bit__12303__auto__ = (G__13811.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__12303__auto__) || (G__13811.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__13812 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__13812) : Math.floor.call(null,G__13812));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__11617__auto__ = cljs.core.not(a.ns);
if(and__11617__auto__){
return b.ns;
} else {
return and__11617__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__13819 = a.ns;
var G__13820 = b.ns;
return goog.array.defaultCompare(G__13819,G__13820);
})();
if(((0) === nsc)){
var G__13821 = a.name;
var G__13822 = b.name;
return goog.array.defaultCompare(G__13821,G__13822);
} else {
return nsc;
}
}
} else {
var G__13823 = a.name;
var G__13824 = b.name;
return goog.array.defaultCompare(G__13823,G__13824);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__12050__auto__ = self__._hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__13826 = null;
var G__13826__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__13826__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__13826 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__13826__2.call(this,self__,coll);
case 3:
return G__13826__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13826.cljs$core$IFn$_invoke$arity$2 = G__13826__2;
G__13826.cljs$core$IFn$_invoke$arity$3 = G__13826__3;
return G__13826;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args13825){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13825)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__13830 = x;
if(G__13830){
var bit__12310__auto__ = null;
if(cljs.core.truth_((function (){var or__11629__auto__ = bit__12310__auto__;
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return G__13830.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__13830.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__13830);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__13830);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__13832 = value;
if(G__13832){
var bit__12310__auto__ = (G__13832.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__12310__auto__) || (G__13832.cljs$core$ICloneable$)){
return true;
} else {
if((!G__13832.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__13832);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__13832);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__13834 = coll;
if(G__13834){
var bit__12303__auto__ = (G__13834.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__12303__auto__) || (G__13834.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__13836 = coll;
if(G__13836){
var bit__12303__auto__ = (G__13836.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12303__auto__) || (G__13836.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__13838 = coll;
if(G__13838){
var bit__12303__auto__ = (G__13838.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12303__auto__) || (G__13838.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__13840 = coll;
if(G__13840){
var bit__12303__auto__ = (G__13840.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12303__auto__) || (G__13840.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__13845__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__13846 = y;
var G__13847 = cljs.core.first(more);
var G__13848 = cljs.core.next(more);
x = G__13846;
y = G__13847;
more = G__13848;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13845 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13849__i = 0, G__13849__a = new Array(arguments.length -  2);
while (G__13849__i < G__13849__a.length) {G__13849__a[G__13849__i] = arguments[G__13849__i + 2]; ++G__13849__i;}
  more = new cljs.core.IndexedSeq(G__13849__a,0);
} 
return G__13845__delegate.call(this,x,y,more);};
G__13845.cljs$lang$maxFixedArity = 2;
G__13845.cljs$lang$applyTo = (function (arglist__13850){
var x = cljs.core.first(arglist__13850);
arglist__13850 = cljs.core.next(arglist__13850);
var y = cljs.core.first(arglist__13850);
var more = cljs.core.rest(arglist__13850);
return G__13845__delegate(x,y,more);
});
G__13845.cljs$core$IFn$_invoke$arity$variadic = G__13845__delegate;
return G__13845;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__13851 = null;
if (arguments.length > 2) {
var G__13852__i = 0, G__13852__a = new Array(arguments.length -  2);
while (G__13852__i < G__13852__a.length) {G__13852__a[G__13852__i] = arguments[G__13852__i + 2]; ++G__13852__i;}
G__13851 = new cljs.core.IndexedSeq(G__13852__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13851);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__13853 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__13853) : cljs.core.es6_iterator_seq.call(null,G__13853));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__13854 = (n + (1));
var G__13855 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__13856 = cljs.core.next(coll__$1);
n = G__13854;
hash_code = G__13855;
coll__$1 = G__13856;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__13857 = (n + (1));
var G__13858 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__13859 = cljs.core.next(coll__$1);
n = G__13857;
hash_code = G__13858;
coll__$1 = G__13859;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__13860 = o;
return goog.getUid(G__13860);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__13862 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13862) : cljs.core.deref.call(null,G__13862));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__13869 = val;
var G__13870 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13869,G__13870) : f.call(null,G__13869,G__13870));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13875 = nval;
var G__13876 = (n + (1));
val = G__13875;
n = G__13876;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__13871 = val__$1;
var G__13872 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13871,G__13872) : f.call(null,G__13871,G__13872));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13877 = nval;
var G__13878 = (n + (1));
val__$1 = G__13877;
n = G__13878;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__13873 = val__$1;
var G__13874 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13873,G__13874) : f.call(null,G__13873,G__13874));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13879 = nval;
var G__13880 = (n + (1));
val__$1 = G__13879;
n = G__13880;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__13887 = val;
var G__13888 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13887,G__13888) : f.call(null,G__13887,G__13888));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13893 = nval;
var G__13894 = (n + (1));
val = G__13893;
n = G__13894;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__13889 = val__$1;
var G__13890 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13889,G__13890) : f.call(null,G__13889,G__13890));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13895 = nval;
var G__13896 = (n + (1));
val__$1 = G__13895;
n = G__13896;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__13891 = val__$1;
var G__13892 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13891,G__13892) : f.call(null,G__13891,G__13892));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13897 = nval;
var G__13898 = (n + (1));
val__$1 = G__13897;
n = G__13898;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__13900 = x;
if(G__13900){
var bit__12310__auto__ = (G__13900.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__12310__auto__) || (G__13900.cljs$core$ICounted$)){
return true;
} else {
if((!G__13900.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__13900);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__13900);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__13902 = x;
if(G__13902){
var bit__12310__auto__ = (G__13902.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__12310__auto__) || (G__13902.cljs$core$IIndexed$)){
return true;
} else {
if((!G__13902.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__13902);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__13902);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__13903 = coll__$1;
var G__13904 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__13903,G__13904) : cljs.core.equiv_sequential.call(null,G__13903,G__13904));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__13905 = o;
var G__13906 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__13905,G__13906) : cljs.core.cons.call(null,G__13905,G__13906));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__13909 = coll__$1;
var G__13910 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__13909,G__13910) : cljs.core.equiv_sequential.call(null,G__13909,G__13910));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__13911 = cljs.core.List.EMPTY;
var G__13912 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__13911,G__13912) : cljs.core.with_meta.call(null,G__13911,G__13912));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__13913 = f;
var G__13914 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__13913,G__13914) : cljs.core.seq_reduce.call(null,G__13913,G__13914));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__13915 = f;
var G__13916 = start;
var G__13917 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__13915,G__13916,G__13917) : cljs.core.seq_reduce.call(null,G__13915,G__13916,G__13917));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__13918 = o;
var G__13919 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__13918,G__13919) : cljs.core.cons.call(null,G__13918,G__13919));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__13920 = sn;
s = G__13920;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__13925__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__13926 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__13927 = cljs.core.first(xs);
var G__13928 = cljs.core.next(xs);
coll = G__13926;
x = G__13927;
xs = G__13928;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__13925 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__13929__i = 0, G__13929__a = new Array(arguments.length -  2);
while (G__13929__i < G__13929__a.length) {G__13929__a[G__13929__i] = arguments[G__13929__i + 2]; ++G__13929__i;}
  xs = new cljs.core.IndexedSeq(G__13929__a,0);
} 
return G__13925__delegate.call(this,coll,x,xs);};
G__13925.cljs$lang$maxFixedArity = 2;
G__13925.cljs$lang$applyTo = (function (arglist__13930){
var coll = cljs.core.first(arglist__13930);
arglist__13930 = cljs.core.next(arglist__13930);
var x = cljs.core.first(arglist__13930);
var xs = cljs.core.rest(arglist__13930);
return G__13925__delegate(coll,x,xs);
});
G__13925.cljs$core$IFn$_invoke$arity$variadic = G__13925__delegate;
return G__13925;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__13931 = null;
if (arguments.length > 2) {
var G__13932__i = 0, G__13932__a = new Array(arguments.length -  2);
while (G__13932__i < G__13932__a.length) {G__13932__a[G__13932__i] = arguments[G__13932__i + 2]; ++G__13932__i;}
G__13931 = new cljs.core.IndexedSeq(G__13932__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__13931);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__13933 = cljs.core.next(s);
var G__13934 = (acc + (1));
s = G__13933;
acc = G__13934;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__13936 = coll;
if(G__13936){
var bit__12303__auto__ = (G__13936.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__12303__auto__) || (G__13936.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__13937 = cljs.core.next(coll);
var G__13938 = (n - (1));
coll = G__13937;
n = G__13938;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__13939 = cljs.core.next(coll);
var G__13940 = (n - (1));
var G__13941 = not_found;
coll = G__13939;
n = G__13940;
not_found = G__13941;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__13946 = coll;
if(G__13946){
var bit__12303__auto__ = (G__13946.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__12303__auto__) || (G__13946.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__13947 = coll;
if(G__13947){
var bit__12310__auto__ = (G__13947.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12310__auto__) || (G__13947.cljs$core$ISeq$)){
return true;
} else {
if((!G__13947.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13947);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13947);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__13948 = coll;
if(G__13948){
var bit__12303__auto__ = (G__13948.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__12303__auto__) || (G__13948.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__13949 = coll;
if(G__13949){
var bit__12310__auto__ = (G__13949.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12310__auto__) || (G__13949.cljs$core$ISeq$)){
return true;
} else {
if((!G__13949.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13949);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13949);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__13950 = (n__$1 - (1));
var G__13951 = cljs.core.rest(xs);
n__$1 = G__13950;
xs = G__13951;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__13954 = o;
if(G__13954){
var bit__12303__auto__ = (G__13954.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__12303__auto__) || (G__13954.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__13955 = o;
if(G__13955){
var bit__12303__auto__ = (G__13955.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__12303__auto__) || (G__13955.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__13959__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__13960 = ret;
var G__13961 = cljs.core.first(kvs);
var G__13962 = cljs.core.second(kvs);
var G__13963 = cljs.core.nnext(kvs);
coll = G__13960;
k = G__13961;
v = G__13962;
kvs = G__13963;
continue;
} else {
return ret;
}
break;
}
};
var G__13959 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__13964__i = 0, G__13964__a = new Array(arguments.length -  3);
while (G__13964__i < G__13964__a.length) {G__13964__a[G__13964__i] = arguments[G__13964__i + 3]; ++G__13964__i;}
  kvs = new cljs.core.IndexedSeq(G__13964__a,0);
} 
return G__13959__delegate.call(this,coll,k,v,kvs);};
G__13959.cljs$lang$maxFixedArity = 3;
G__13959.cljs$lang$applyTo = (function (arglist__13965){
var coll = cljs.core.first(arglist__13965);
arglist__13965 = cljs.core.next(arglist__13965);
var k = cljs.core.first(arglist__13965);
arglist__13965 = cljs.core.next(arglist__13965);
var v = cljs.core.first(arglist__13965);
var kvs = cljs.core.rest(arglist__13965);
return G__13959__delegate(coll,k,v,kvs);
});
G__13959.cljs$core$IFn$_invoke$arity$variadic = G__13959__delegate;
return G__13959;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__13966 = null;
if (arguments.length > 3) {
var G__13967__i = 0, G__13967__a = new Array(arguments.length -  3);
while (G__13967__i < G__13967__a.length) {G__13967__a[G__13967__i] = arguments[G__13967__i + 3]; ++G__13967__i;}
G__13966 = new cljs.core.IndexedSeq(G__13967__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__13966);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__13970__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__13971 = ret;
var G__13972 = cljs.core.first(ks);
var G__13973 = cljs.core.next(ks);
coll = G__13971;
k = G__13972;
ks = G__13973;
continue;
} else {
return ret;
}
}
break;
}
};
var G__13970 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13974__i = 0, G__13974__a = new Array(arguments.length -  2);
while (G__13974__i < G__13974__a.length) {G__13974__a[G__13974__i] = arguments[G__13974__i + 2]; ++G__13974__i;}
  ks = new cljs.core.IndexedSeq(G__13974__a,0);
} 
return G__13970__delegate.call(this,coll,k,ks);};
G__13970.cljs$lang$maxFixedArity = 2;
G__13970.cljs$lang$applyTo = (function (arglist__13975){
var coll = cljs.core.first(arglist__13975);
arglist__13975 = cljs.core.next(arglist__13975);
var k = cljs.core.first(arglist__13975);
var ks = cljs.core.rest(arglist__13975);
return G__13970__delegate(coll,k,ks);
});
G__13970.cljs$core$IFn$_invoke$arity$variadic = G__13970__delegate;
return G__13970;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__13976 = null;
if (arguments.length > 2) {
var G__13977__i = 0, G__13977__a = new Array(arguments.length -  2);
while (G__13977__i < G__13977__a.length) {G__13977__a[G__13977__i] = arguments[G__13977__i + 2]; ++G__13977__i;}
G__13976 = new cljs.core.IndexedSeq(G__13977__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__13976);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__11629__auto__ = (function (){var G__13982 = f;
return goog.isFunction(G__13982);
})();
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
var G__13983 = f;
if(G__13983){
var bit__12310__auto__ = null;
if(cljs.core.truth_((function (){var or__11629__auto____$1 = bit__12310__auto__;
if(cljs.core.truth_(or__11629__auto____$1)){
return or__11629__auto____$1;
} else {
return G__13983.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__13983.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__13983);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__13983);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__14449 = null;
var G__14449__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__14449__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13985 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__13985) : self__.afn.call(null,G__13985));
});
var G__14449__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13986 = a;
var G__13987 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__13986,G__13987) : self__.afn.call(null,G__13986,G__13987));
});
var G__14449__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13988 = a;
var G__13989 = b;
var G__13990 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__13988,G__13989,G__13990) : self__.afn.call(null,G__13988,G__13989,G__13990));
});
var G__14449__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13991 = a;
var G__13992 = b;
var G__13993 = c;
var G__13994 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__13991,G__13992,G__13993,G__13994) : self__.afn.call(null,G__13991,G__13992,G__13993,G__13994));
});
var G__14449__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13995 = a;
var G__13996 = b;
var G__13997 = c;
var G__13998 = d;
var G__13999 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__13995,G__13996,G__13997,G__13998,G__13999) : self__.afn.call(null,G__13995,G__13996,G__13997,G__13998,G__13999));
});
var G__14449__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14000 = a;
var G__14001 = b;
var G__14002 = c;
var G__14003 = d;
var G__14004 = e;
var G__14005 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__14000,G__14001,G__14002,G__14003,G__14004,G__14005) : self__.afn.call(null,G__14000,G__14001,G__14002,G__14003,G__14004,G__14005));
});
var G__14449__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14006 = a;
var G__14007 = b;
var G__14008 = c;
var G__14009 = d;
var G__14010 = e;
var G__14011 = f;
var G__14012 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__14006,G__14007,G__14008,G__14009,G__14010,G__14011,G__14012) : self__.afn.call(null,G__14006,G__14007,G__14008,G__14009,G__14010,G__14011,G__14012));
});
var G__14449__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14013 = a;
var G__14014 = b;
var G__14015 = c;
var G__14016 = d;
var G__14017 = e;
var G__14018 = f;
var G__14019 = g;
var G__14020 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__14013,G__14014,G__14015,G__14016,G__14017,G__14018,G__14019,G__14020) : self__.afn.call(null,G__14013,G__14014,G__14015,G__14016,G__14017,G__14018,G__14019,G__14020));
});
var G__14449__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14021 = a;
var G__14022 = b;
var G__14023 = c;
var G__14024 = d;
var G__14025 = e;
var G__14026 = f;
var G__14027 = g;
var G__14028 = h;
var G__14029 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__14021,G__14022,G__14023,G__14024,G__14025,G__14026,G__14027,G__14028,G__14029) : self__.afn.call(null,G__14021,G__14022,G__14023,G__14024,G__14025,G__14026,G__14027,G__14028,G__14029));
});
var G__14449__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14030 = a;
var G__14031 = b;
var G__14032 = c;
var G__14033 = d;
var G__14034 = e;
var G__14035 = f;
var G__14036 = g;
var G__14037 = h;
var G__14038 = i;
var G__14039 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__14030,G__14031,G__14032,G__14033,G__14034,G__14035,G__14036,G__14037,G__14038,G__14039) : self__.afn.call(null,G__14030,G__14031,G__14032,G__14033,G__14034,G__14035,G__14036,G__14037,G__14038,G__14039));
});
var G__14449__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14040 = a;
var G__14041 = b;
var G__14042 = c;
var G__14043 = d;
var G__14044 = e;
var G__14045 = f;
var G__14046 = g;
var G__14047 = h;
var G__14048 = i;
var G__14049 = j;
var G__14050 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__14040,G__14041,G__14042,G__14043,G__14044,G__14045,G__14046,G__14047,G__14048,G__14049,G__14050) : self__.afn.call(null,G__14040,G__14041,G__14042,G__14043,G__14044,G__14045,G__14046,G__14047,G__14048,G__14049,G__14050));
});
var G__14449__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14051 = a;
var G__14052 = b;
var G__14053 = c;
var G__14054 = d;
var G__14055 = e;
var G__14056 = f;
var G__14057 = g;
var G__14058 = h;
var G__14059 = i;
var G__14060 = j;
var G__14061 = k;
var G__14062 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__14051,G__14052,G__14053,G__14054,G__14055,G__14056,G__14057,G__14058,G__14059,G__14060,G__14061,G__14062) : self__.afn.call(null,G__14051,G__14052,G__14053,G__14054,G__14055,G__14056,G__14057,G__14058,G__14059,G__14060,G__14061,G__14062));
});
var G__14449__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14063 = a;
var G__14064 = b;
var G__14065 = c;
var G__14066 = d;
var G__14067 = e;
var G__14068 = f;
var G__14069 = g;
var G__14070 = h;
var G__14071 = i;
var G__14072 = j;
var G__14073 = k;
var G__14074 = l;
var G__14075 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__14063,G__14064,G__14065,G__14066,G__14067,G__14068,G__14069,G__14070,G__14071,G__14072,G__14073,G__14074,G__14075) : self__.afn.call(null,G__14063,G__14064,G__14065,G__14066,G__14067,G__14068,G__14069,G__14070,G__14071,G__14072,G__14073,G__14074,G__14075));
});
var G__14449__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14076 = a;
var G__14077 = b;
var G__14078 = c;
var G__14079 = d;
var G__14080 = e;
var G__14081 = f;
var G__14082 = g;
var G__14083 = h;
var G__14084 = i;
var G__14085 = j;
var G__14086 = k;
var G__14087 = l;
var G__14088 = m;
var G__14089 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__14076,G__14077,G__14078,G__14079,G__14080,G__14081,G__14082,G__14083,G__14084,G__14085,G__14086,G__14087,G__14088,G__14089) : self__.afn.call(null,G__14076,G__14077,G__14078,G__14079,G__14080,G__14081,G__14082,G__14083,G__14084,G__14085,G__14086,G__14087,G__14088,G__14089));
});
var G__14449__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14090 = a;
var G__14091 = b;
var G__14092 = c;
var G__14093 = d;
var G__14094 = e;
var G__14095 = f;
var G__14096 = g;
var G__14097 = h;
var G__14098 = i;
var G__14099 = j;
var G__14100 = k;
var G__14101 = l;
var G__14102 = m;
var G__14103 = n;
var G__14104 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__14090,G__14091,G__14092,G__14093,G__14094,G__14095,G__14096,G__14097,G__14098,G__14099,G__14100,G__14101,G__14102,G__14103,G__14104) : self__.afn.call(null,G__14090,G__14091,G__14092,G__14093,G__14094,G__14095,G__14096,G__14097,G__14098,G__14099,G__14100,G__14101,G__14102,G__14103,G__14104));
});
var G__14449__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14105 = a;
var G__14106 = b;
var G__14107 = c;
var G__14108 = d;
var G__14109 = e;
var G__14110 = f;
var G__14111 = g;
var G__14112 = h;
var G__14113 = i;
var G__14114 = j;
var G__14115 = k;
var G__14116 = l;
var G__14117 = m;
var G__14118 = n;
var G__14119 = o;
var G__14120 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__14105,G__14106,G__14107,G__14108,G__14109,G__14110,G__14111,G__14112,G__14113,G__14114,G__14115,G__14116,G__14117,G__14118,G__14119,G__14120) : self__.afn.call(null,G__14105,G__14106,G__14107,G__14108,G__14109,G__14110,G__14111,G__14112,G__14113,G__14114,G__14115,G__14116,G__14117,G__14118,G__14119,G__14120));
});
var G__14449__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14121 = a;
var G__14122 = b;
var G__14123 = c;
var G__14124 = d;
var G__14125 = e;
var G__14126 = f;
var G__14127 = g;
var G__14128 = h;
var G__14129 = i;
var G__14130 = j;
var G__14131 = k;
var G__14132 = l;
var G__14133 = m;
var G__14134 = n;
var G__14135 = o;
var G__14136 = p;
var G__14137 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__14121,G__14122,G__14123,G__14124,G__14125,G__14126,G__14127,G__14128,G__14129,G__14130,G__14131,G__14132,G__14133,G__14134,G__14135,G__14136,G__14137) : self__.afn.call(null,G__14121,G__14122,G__14123,G__14124,G__14125,G__14126,G__14127,G__14128,G__14129,G__14130,G__14131,G__14132,G__14133,G__14134,G__14135,G__14136,G__14137));
});
var G__14449__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14138 = a;
var G__14139 = b;
var G__14140 = c;
var G__14141 = d;
var G__14142 = e;
var G__14143 = f;
var G__14144 = g;
var G__14145 = h;
var G__14146 = i;
var G__14147 = j;
var G__14148 = k;
var G__14149 = l;
var G__14150 = m;
var G__14151 = n;
var G__14152 = o;
var G__14153 = p;
var G__14154 = q;
var G__14155 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__14138,G__14139,G__14140,G__14141,G__14142,G__14143,G__14144,G__14145,G__14146,G__14147,G__14148,G__14149,G__14150,G__14151,G__14152,G__14153,G__14154,G__14155) : self__.afn.call(null,G__14138,G__14139,G__14140,G__14141,G__14142,G__14143,G__14144,G__14145,G__14146,G__14147,G__14148,G__14149,G__14150,G__14151,G__14152,G__14153,G__14154,G__14155));
});
var G__14449__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14156 = a;
var G__14157 = b;
var G__14158 = c;
var G__14159 = d;
var G__14160 = e;
var G__14161 = f;
var G__14162 = g;
var G__14163 = h;
var G__14164 = i;
var G__14165 = j;
var G__14166 = k;
var G__14167 = l;
var G__14168 = m;
var G__14169 = n;
var G__14170 = o;
var G__14171 = p;
var G__14172 = q;
var G__14173 = r;
var G__14174 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__14156,G__14157,G__14158,G__14159,G__14160,G__14161,G__14162,G__14163,G__14164,G__14165,G__14166,G__14167,G__14168,G__14169,G__14170,G__14171,G__14172,G__14173,G__14174) : self__.afn.call(null,G__14156,G__14157,G__14158,G__14159,G__14160,G__14161,G__14162,G__14163,G__14164,G__14165,G__14166,G__14167,G__14168,G__14169,G__14170,G__14171,G__14172,G__14173,G__14174));
});
var G__14449__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14175 = a;
var G__14176 = b;
var G__14177 = c;
var G__14178 = d;
var G__14179 = e;
var G__14180 = f;
var G__14181 = g;
var G__14182 = h;
var G__14183 = i;
var G__14184 = j;
var G__14185 = k;
var G__14186 = l;
var G__14187 = m;
var G__14188 = n;
var G__14189 = o;
var G__14190 = p;
var G__14191 = q;
var G__14192 = r;
var G__14193 = s;
var G__14194 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__14175,G__14176,G__14177,G__14178,G__14179,G__14180,G__14181,G__14182,G__14183,G__14184,G__14185,G__14186,G__14187,G__14188,G__14189,G__14190,G__14191,G__14192,G__14193,G__14194) : self__.afn.call(null,G__14175,G__14176,G__14177,G__14178,G__14179,G__14180,G__14181,G__14182,G__14183,G__14184,G__14185,G__14186,G__14187,G__14188,G__14189,G__14190,G__14191,G__14192,G__14193,G__14194));
});
var G__14449__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14195 = self__.afn;
var G__14196 = a;
var G__14197 = b;
var G__14198 = c;
var G__14199 = d;
var G__14200 = e;
var G__14201 = f;
var G__14202 = g;
var G__14203 = h;
var G__14204 = i;
var G__14205 = j;
var G__14206 = k;
var G__14207 = l;
var G__14208 = m;
var G__14209 = n;
var G__14210 = o;
var G__14211 = p;
var G__14212 = q;
var G__14213 = r;
var G__14214 = s;
var G__14215 = t;
var G__14216 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__14195,G__14196,G__14197,G__14198,G__14199,G__14200,G__14201,G__14202,G__14203,G__14204,G__14205,G__14206,G__14207,G__14208,G__14209,G__14210,G__14211,G__14212,G__14213,G__14214,G__14215,G__14216) : cljs.core.apply.call(null,G__14195,G__14196,G__14197,G__14198,G__14199,G__14200,G__14201,G__14202,G__14203,G__14204,G__14205,G__14206,G__14207,G__14208,G__14209,G__14210,G__14211,G__14212,G__14213,G__14214,G__14215,G__14216));
});
G__14449 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__14449__1.call(this,self__);
case 2:
return G__14449__2.call(this,self__,a);
case 3:
return G__14449__3.call(this,self__,a,b);
case 4:
return G__14449__4.call(this,self__,a,b,c);
case 5:
return G__14449__5.call(this,self__,a,b,c,d);
case 6:
return G__14449__6.call(this,self__,a,b,c,d,e);
case 7:
return G__14449__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__14449__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__14449__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__14449__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__14449__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__14449__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__14449__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__14449__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__14449__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__14449__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__14449__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__14449__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__14449__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__14449__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__14449__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__14449__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14449.cljs$core$IFn$_invoke$arity$1 = G__14449__1;
G__14449.cljs$core$IFn$_invoke$arity$2 = G__14449__2;
G__14449.cljs$core$IFn$_invoke$arity$3 = G__14449__3;
G__14449.cljs$core$IFn$_invoke$arity$4 = G__14449__4;
G__14449.cljs$core$IFn$_invoke$arity$5 = G__14449__5;
G__14449.cljs$core$IFn$_invoke$arity$6 = G__14449__6;
G__14449.cljs$core$IFn$_invoke$arity$7 = G__14449__7;
G__14449.cljs$core$IFn$_invoke$arity$8 = G__14449__8;
G__14449.cljs$core$IFn$_invoke$arity$9 = G__14449__9;
G__14449.cljs$core$IFn$_invoke$arity$10 = G__14449__10;
G__14449.cljs$core$IFn$_invoke$arity$11 = G__14449__11;
G__14449.cljs$core$IFn$_invoke$arity$12 = G__14449__12;
G__14449.cljs$core$IFn$_invoke$arity$13 = G__14449__13;
G__14449.cljs$core$IFn$_invoke$arity$14 = G__14449__14;
G__14449.cljs$core$IFn$_invoke$arity$15 = G__14449__15;
G__14449.cljs$core$IFn$_invoke$arity$16 = G__14449__16;
G__14449.cljs$core$IFn$_invoke$arity$17 = G__14449__17;
G__14449.cljs$core$IFn$_invoke$arity$18 = G__14449__18;
G__14449.cljs$core$IFn$_invoke$arity$19 = G__14449__19;
G__14449.cljs$core$IFn$_invoke$arity$20 = G__14449__20;
G__14449.cljs$core$IFn$_invoke$arity$21 = G__14449__21;
G__14449.cljs$core$IFn$_invoke$arity$22 = G__14449__22;
return G__14449;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args13984){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13984)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__14217 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__14217) : self__.afn.call(null,G__14217));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__14218 = a;
var G__14219 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__14218,G__14219) : self__.afn.call(null,G__14218,G__14219));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__14220 = a;
var G__14221 = b;
var G__14222 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__14220,G__14221,G__14222) : self__.afn.call(null,G__14220,G__14221,G__14222));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__14223 = a;
var G__14224 = b;
var G__14225 = c;
var G__14226 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__14223,G__14224,G__14225,G__14226) : self__.afn.call(null,G__14223,G__14224,G__14225,G__14226));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__14227 = a;
var G__14228 = b;
var G__14229 = c;
var G__14230 = d;
var G__14231 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__14227,G__14228,G__14229,G__14230,G__14231) : self__.afn.call(null,G__14227,G__14228,G__14229,G__14230,G__14231));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__14232 = a;
var G__14233 = b;
var G__14234 = c;
var G__14235 = d;
var G__14236 = e;
var G__14237 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__14232,G__14233,G__14234,G__14235,G__14236,G__14237) : self__.afn.call(null,G__14232,G__14233,G__14234,G__14235,G__14236,G__14237));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__14238 = a;
var G__14239 = b;
var G__14240 = c;
var G__14241 = d;
var G__14242 = e;
var G__14243 = f;
var G__14244 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__14238,G__14239,G__14240,G__14241,G__14242,G__14243,G__14244) : self__.afn.call(null,G__14238,G__14239,G__14240,G__14241,G__14242,G__14243,G__14244));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__14245 = a;
var G__14246 = b;
var G__14247 = c;
var G__14248 = d;
var G__14249 = e;
var G__14250 = f;
var G__14251 = g;
var G__14252 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__14245,G__14246,G__14247,G__14248,G__14249,G__14250,G__14251,G__14252) : self__.afn.call(null,G__14245,G__14246,G__14247,G__14248,G__14249,G__14250,G__14251,G__14252));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__14253 = a;
var G__14254 = b;
var G__14255 = c;
var G__14256 = d;
var G__14257 = e;
var G__14258 = f;
var G__14259 = g;
var G__14260 = h;
var G__14261 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__14253,G__14254,G__14255,G__14256,G__14257,G__14258,G__14259,G__14260,G__14261) : self__.afn.call(null,G__14253,G__14254,G__14255,G__14256,G__14257,G__14258,G__14259,G__14260,G__14261));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__14262 = a;
var G__14263 = b;
var G__14264 = c;
var G__14265 = d;
var G__14266 = e;
var G__14267 = f;
var G__14268 = g;
var G__14269 = h;
var G__14270 = i;
var G__14271 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__14262,G__14263,G__14264,G__14265,G__14266,G__14267,G__14268,G__14269,G__14270,G__14271) : self__.afn.call(null,G__14262,G__14263,G__14264,G__14265,G__14266,G__14267,G__14268,G__14269,G__14270,G__14271));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__14272 = a;
var G__14273 = b;
var G__14274 = c;
var G__14275 = d;
var G__14276 = e;
var G__14277 = f;
var G__14278 = g;
var G__14279 = h;
var G__14280 = i;
var G__14281 = j;
var G__14282 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__14272,G__14273,G__14274,G__14275,G__14276,G__14277,G__14278,G__14279,G__14280,G__14281,G__14282) : self__.afn.call(null,G__14272,G__14273,G__14274,G__14275,G__14276,G__14277,G__14278,G__14279,G__14280,G__14281,G__14282));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__14283 = a;
var G__14284 = b;
var G__14285 = c;
var G__14286 = d;
var G__14287 = e;
var G__14288 = f;
var G__14289 = g;
var G__14290 = h;
var G__14291 = i;
var G__14292 = j;
var G__14293 = k;
var G__14294 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__14283,G__14284,G__14285,G__14286,G__14287,G__14288,G__14289,G__14290,G__14291,G__14292,G__14293,G__14294) : self__.afn.call(null,G__14283,G__14284,G__14285,G__14286,G__14287,G__14288,G__14289,G__14290,G__14291,G__14292,G__14293,G__14294));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__14295 = a;
var G__14296 = b;
var G__14297 = c;
var G__14298 = d;
var G__14299 = e;
var G__14300 = f;
var G__14301 = g;
var G__14302 = h;
var G__14303 = i;
var G__14304 = j;
var G__14305 = k;
var G__14306 = l;
var G__14307 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__14295,G__14296,G__14297,G__14298,G__14299,G__14300,G__14301,G__14302,G__14303,G__14304,G__14305,G__14306,G__14307) : self__.afn.call(null,G__14295,G__14296,G__14297,G__14298,G__14299,G__14300,G__14301,G__14302,G__14303,G__14304,G__14305,G__14306,G__14307));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__14308 = a;
var G__14309 = b;
var G__14310 = c;
var G__14311 = d;
var G__14312 = e;
var G__14313 = f;
var G__14314 = g;
var G__14315 = h;
var G__14316 = i;
var G__14317 = j;
var G__14318 = k;
var G__14319 = l;
var G__14320 = m;
var G__14321 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__14308,G__14309,G__14310,G__14311,G__14312,G__14313,G__14314,G__14315,G__14316,G__14317,G__14318,G__14319,G__14320,G__14321) : self__.afn.call(null,G__14308,G__14309,G__14310,G__14311,G__14312,G__14313,G__14314,G__14315,G__14316,G__14317,G__14318,G__14319,G__14320,G__14321));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__14322 = a;
var G__14323 = b;
var G__14324 = c;
var G__14325 = d;
var G__14326 = e;
var G__14327 = f;
var G__14328 = g;
var G__14329 = h;
var G__14330 = i;
var G__14331 = j;
var G__14332 = k;
var G__14333 = l;
var G__14334 = m;
var G__14335 = n;
var G__14336 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__14322,G__14323,G__14324,G__14325,G__14326,G__14327,G__14328,G__14329,G__14330,G__14331,G__14332,G__14333,G__14334,G__14335,G__14336) : self__.afn.call(null,G__14322,G__14323,G__14324,G__14325,G__14326,G__14327,G__14328,G__14329,G__14330,G__14331,G__14332,G__14333,G__14334,G__14335,G__14336));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__14337 = a;
var G__14338 = b;
var G__14339 = c;
var G__14340 = d;
var G__14341 = e;
var G__14342 = f;
var G__14343 = g;
var G__14344 = h;
var G__14345 = i;
var G__14346 = j;
var G__14347 = k;
var G__14348 = l;
var G__14349 = m;
var G__14350 = n;
var G__14351 = o;
var G__14352 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__14337,G__14338,G__14339,G__14340,G__14341,G__14342,G__14343,G__14344,G__14345,G__14346,G__14347,G__14348,G__14349,G__14350,G__14351,G__14352) : self__.afn.call(null,G__14337,G__14338,G__14339,G__14340,G__14341,G__14342,G__14343,G__14344,G__14345,G__14346,G__14347,G__14348,G__14349,G__14350,G__14351,G__14352));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__14353 = a;
var G__14354 = b;
var G__14355 = c;
var G__14356 = d;
var G__14357 = e;
var G__14358 = f;
var G__14359 = g;
var G__14360 = h;
var G__14361 = i;
var G__14362 = j;
var G__14363 = k;
var G__14364 = l;
var G__14365 = m;
var G__14366 = n;
var G__14367 = o;
var G__14368 = p;
var G__14369 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__14353,G__14354,G__14355,G__14356,G__14357,G__14358,G__14359,G__14360,G__14361,G__14362,G__14363,G__14364,G__14365,G__14366,G__14367,G__14368,G__14369) : self__.afn.call(null,G__14353,G__14354,G__14355,G__14356,G__14357,G__14358,G__14359,G__14360,G__14361,G__14362,G__14363,G__14364,G__14365,G__14366,G__14367,G__14368,G__14369));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__14370 = a;
var G__14371 = b;
var G__14372 = c;
var G__14373 = d;
var G__14374 = e;
var G__14375 = f;
var G__14376 = g;
var G__14377 = h;
var G__14378 = i;
var G__14379 = j;
var G__14380 = k;
var G__14381 = l;
var G__14382 = m;
var G__14383 = n;
var G__14384 = o;
var G__14385 = p;
var G__14386 = q;
var G__14387 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__14370,G__14371,G__14372,G__14373,G__14374,G__14375,G__14376,G__14377,G__14378,G__14379,G__14380,G__14381,G__14382,G__14383,G__14384,G__14385,G__14386,G__14387) : self__.afn.call(null,G__14370,G__14371,G__14372,G__14373,G__14374,G__14375,G__14376,G__14377,G__14378,G__14379,G__14380,G__14381,G__14382,G__14383,G__14384,G__14385,G__14386,G__14387));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__14388 = a;
var G__14389 = b;
var G__14390 = c;
var G__14391 = d;
var G__14392 = e;
var G__14393 = f;
var G__14394 = g;
var G__14395 = h;
var G__14396 = i;
var G__14397 = j;
var G__14398 = k;
var G__14399 = l;
var G__14400 = m;
var G__14401 = n;
var G__14402 = o;
var G__14403 = p;
var G__14404 = q;
var G__14405 = r;
var G__14406 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__14388,G__14389,G__14390,G__14391,G__14392,G__14393,G__14394,G__14395,G__14396,G__14397,G__14398,G__14399,G__14400,G__14401,G__14402,G__14403,G__14404,G__14405,G__14406) : self__.afn.call(null,G__14388,G__14389,G__14390,G__14391,G__14392,G__14393,G__14394,G__14395,G__14396,G__14397,G__14398,G__14399,G__14400,G__14401,G__14402,G__14403,G__14404,G__14405,G__14406));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__14407 = a;
var G__14408 = b;
var G__14409 = c;
var G__14410 = d;
var G__14411 = e;
var G__14412 = f;
var G__14413 = g;
var G__14414 = h;
var G__14415 = i;
var G__14416 = j;
var G__14417 = k;
var G__14418 = l;
var G__14419 = m;
var G__14420 = n;
var G__14421 = o;
var G__14422 = p;
var G__14423 = q;
var G__14424 = r;
var G__14425 = s;
var G__14426 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__14407,G__14408,G__14409,G__14410,G__14411,G__14412,G__14413,G__14414,G__14415,G__14416,G__14417,G__14418,G__14419,G__14420,G__14421,G__14422,G__14423,G__14424,G__14425,G__14426) : self__.afn.call(null,G__14407,G__14408,G__14409,G__14410,G__14411,G__14412,G__14413,G__14414,G__14415,G__14416,G__14417,G__14418,G__14419,G__14420,G__14421,G__14422,G__14423,G__14424,G__14425,G__14426));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__14427 = self__.afn;
var G__14428 = a;
var G__14429 = b;
var G__14430 = c;
var G__14431 = d;
var G__14432 = e;
var G__14433 = f;
var G__14434 = g;
var G__14435 = h;
var G__14436 = i;
var G__14437 = j;
var G__14438 = k;
var G__14439 = l;
var G__14440 = m;
var G__14441 = n;
var G__14442 = o;
var G__14443 = p;
var G__14444 = q;
var G__14445 = r;
var G__14446 = s;
var G__14447 = t;
var G__14448 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__14427,G__14428,G__14429,G__14430,G__14431,G__14432,G__14433,G__14434,G__14435,G__14436,G__14437,G__14438,G__14439,G__14440,G__14441,G__14442,G__14443,G__14444,G__14445,G__14446,G__14447,G__14448) : cljs.core.apply.call(null,G__14427,G__14428,G__14429,G__14430,G__14431,G__14432,G__14433,G__14434,G__14435,G__14436,G__14437,G__14438,G__14439,G__14440,G__14441,G__14442,G__14443,G__14444,G__14445,G__14446,G__14447,G__14448));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__14453 = o;
if(G__14453){
var bit__12310__auto__ = (G__14453.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__12310__auto__) || (G__14453.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__14453.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__14453);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__14453);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__11617__auto__ = !((o == null));
if(and__11617__auto__){
var G__14457 = o;
if(G__14457){
var bit__12310__auto__ = (G__14457.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__12310__auto__) || (G__14457.cljs$core$IMeta$)){
return true;
} else {
if((!G__14457.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__14457);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__14457);
}
} else {
return and__11617__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__14460__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__14461 = ret;
var G__14462 = cljs.core.first(ks);
var G__14463 = cljs.core.next(ks);
coll = G__14461;
k = G__14462;
ks = G__14463;
continue;
} else {
return ret;
}
}
break;
}
};
var G__14460 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__14464__i = 0, G__14464__a = new Array(arguments.length -  2);
while (G__14464__i < G__14464__a.length) {G__14464__a[G__14464__i] = arguments[G__14464__i + 2]; ++G__14464__i;}
  ks = new cljs.core.IndexedSeq(G__14464__a,0);
} 
return G__14460__delegate.call(this,coll,k,ks);};
G__14460.cljs$lang$maxFixedArity = 2;
G__14460.cljs$lang$applyTo = (function (arglist__14465){
var coll = cljs.core.first(arglist__14465);
arglist__14465 = cljs.core.next(arglist__14465);
var k = cljs.core.first(arglist__14465);
var ks = cljs.core.rest(arglist__14465);
return G__14460__delegate(coll,k,ks);
});
G__14460.cljs$core$IFn$_invoke$arity$variadic = G__14460__delegate;
return G__14460;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__14466 = null;
if (arguments.length > 2) {
var G__14467__i = 0, G__14467__a = new Array(arguments.length -  2);
while (G__14467__i < G__14467__a.length) {G__14467__a[G__14467__i] = arguments[G__14467__i + 2]; ++G__14467__i;}
G__14466 = new cljs.core.IndexedSeq(G__14467__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__14466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__14469 = x;
if(G__14469){
var bit__12310__auto__ = (G__14469.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__12310__auto__) || (G__14469.cljs$core$ICollection$)){
return true;
} else {
if((!G__14469.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__14469);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__14469);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__14471 = x;
if(G__14471){
var bit__12310__auto__ = (G__14471.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__12310__auto__) || (G__14471.cljs$core$ISet$)){
return true;
} else {
if((!G__14471.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__14471);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__14471);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__14473 = x;
if(G__14473){
var bit__12310__auto__ = (G__14473.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__12310__auto__) || (G__14473.cljs$core$IAssociative$)){
return true;
} else {
if((!G__14473.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__14473);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__14473);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__14475 = x;
if(G__14475){
var bit__12310__auto__ = (G__14475.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__12310__auto__) || (G__14475.cljs$core$ISequential$)){
return true;
} else {
if((!G__14475.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__14475);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__14475);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__14477 = x;
if(G__14477){
var bit__12310__auto__ = (G__14477.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__12310__auto__) || (G__14477.cljs$core$ISorted$)){
return true;
} else {
if((!G__14477.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__14477);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__14477);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__14479 = x;
if(G__14479){
var bit__12310__auto__ = (G__14479.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__12310__auto__) || (G__14479.cljs$core$IReduce$)){
return true;
} else {
if((!G__14479.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__14479);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__14479);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__14481 = x;
if(G__14481){
var bit__12310__auto__ = (G__14481.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__12310__auto__) || (G__14481.cljs$core$IMap$)){
return true;
} else {
if((!G__14481.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__14481);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__14481);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__14483 = x;
if(G__14483){
var bit__12310__auto__ = (G__14483.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__12310__auto__) || (G__14483.cljs$core$IVector$)){
return true;
} else {
if((!G__14483.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__14483);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__14483);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__14485 = x;
if(G__14485){
var bit__12303__auto__ = (G__14485.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__12303__auto__) || (G__14485.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj14491 = {};
return obj14491;
});
var js_obj__1 = (function() { 
var G__14494__delegate = function (keyvals){
var G__14492 = goog.object.create;
var G__14493 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__14492,G__14493) : cljs.core.apply.call(null,G__14492,G__14493));
};
var G__14494 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14495__i = 0, G__14495__a = new Array(arguments.length -  0);
while (G__14495__i < G__14495__a.length) {G__14495__a[G__14495__i] = arguments[G__14495__i + 0]; ++G__14495__i;}
  keyvals = new cljs.core.IndexedSeq(G__14495__a,0);
} 
return G__14494__delegate.call(this,keyvals);};
G__14494.cljs$lang$maxFixedArity = 0;
G__14494.cljs$lang$applyTo = (function (arglist__14496){
var keyvals = cljs.core.seq(arglist__14496);
return G__14494__delegate(keyvals);
});
G__14494.cljs$core$IFn$_invoke$arity$variadic = G__14494__delegate;
return G__14494;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__14497 = null;
if (arguments.length > 0) {
var G__14498__i = 0, G__14498__a = new Array(arguments.length -  0);
while (G__14498__i < G__14498__a.length) {G__14498__a[G__14498__i] = arguments[G__14498__i + 0]; ++G__14498__i;}
G__14497 = new cljs.core.IndexedSeq(G__14498__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__14497);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__14501_14503 = obj;
var G__14502_14504 = ((function (G__14501_14503,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__14501_14503,keys))
;
goog.object.forEach(G__14501_14503,G__14502_14504);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__14505 = (i__$1 + (1));
var G__14506 = (j__$1 + (1));
var G__14507 = (len__$1 - (1));
i__$1 = G__14505;
j__$1 = G__14506;
len__$1 = G__14507;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__14508 = (i__$1 - (1));
var G__14509 = (j__$1 - (1));
var G__14510 = (len__$1 - (1));
i__$1 = G__14508;
j__$1 = G__14509;
len__$1 = G__14510;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj14512 = {};
return obj14512;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__14514 = s;
if(G__14514){
var bit__12310__auto__ = (G__14514.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12310__auto__) || (G__14514.cljs$core$ISeq$)){
return true;
} else {
if((!G__14514.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__14514);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__14514);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__14516 = s;
if(G__14516){
var bit__12310__auto__ = (G__14516.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__12310__auto__) || (G__14516.cljs$core$ISeqable$)){
return true;
} else {
if((!G__14516.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__14516);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__14516);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__11629__auto__ = cljs.core.fn_QMARK_(f);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var G__14520 = f;
if(G__14520){
var bit__12310__auto__ = (G__14520.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__12310__auto__) || (G__14520.cljs$core$IFn$)){
return true;
} else {
if((!G__14520.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__14520);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__14520);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__14533 = n;
return isNaN(G__14533);
})())) && (!((n === Infinity))) && (((function (){var G__14534 = n;
return parseFloat(G__14534);
})() === (function (){var G__14535 = n;
var G__14536 = (10);
return parseInt(G__14535,G__14536);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__14537__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__14538 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__14539 = etc;
s = G__14538;
xs = G__14539;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__14537 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14540__i = 0, G__14540__a = new Array(arguments.length -  2);
while (G__14540__i < G__14540__a.length) {G__14540__a[G__14540__i] = arguments[G__14540__i + 2]; ++G__14540__i;}
  more = new cljs.core.IndexedSeq(G__14540__a,0);
} 
return G__14537__delegate.call(this,x,y,more);};
G__14537.cljs$lang$maxFixedArity = 2;
G__14537.cljs$lang$applyTo = (function (arglist__14541){
var x = cljs.core.first(arglist__14541);
arglist__14541 = cljs.core.next(arglist__14541);
var y = cljs.core.first(arglist__14541);
var more = cljs.core.rest(arglist__14541);
return G__14537__delegate(x,y,more);
});
G__14537.cljs$core$IFn$_invoke$arity$variadic = G__14537__delegate;
return G__14537;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__14542 = null;
if (arguments.length > 2) {
var G__14543__i = 0, G__14543__a = new Array(arguments.length -  2);
while (G__14543__i < G__14543__a.length) {G__14543__a[G__14543__i] = arguments[G__14543__i + 2]; ++G__14543__i;}
G__14542 = new cljs.core.IndexedSeq(G__14543__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14542);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__14547 = x;
if(G__14547){
var bit__12303__auto__ = (G__14547.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__12303__auto__) || (G__14547.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__14548 = x;
var G__14549 = y;
return goog.array.defaultCompare(G__14548,G__14549);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__14554 = xs;
var G__14555 = ys;
var G__14556 = len;
var G__14557 = (n + (1));
xs = G__14554;
ys = G__14555;
len = G__14556;
n = G__14557;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__14562 = x;
var G__14563 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14562,G__14563) : f.call(null,G__14562,G__14563));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__14564 = y;
var G__14565 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14564,G__14565) : f.call(null,G__14564,G__14565));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__14571 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__14571) : cljs.core.to_array.call(null,G__14571));
})();
var G__14572_14574 = a;
var G__14573_14575 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__14572_14574,G__14573_14575);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__14581 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14581) : keyfn.call(null,G__14581));
})(),(function (){var G__14582 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14582) : keyfn.call(null,G__14582));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__14588 = f;
var G__14589 = cljs.core.first(s);
var G__14590 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__14588,G__14589,G__14590) : cljs.core.reduce.call(null,G__14588,G__14589,G__14590));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__14591 = val__$1;
var G__14592 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14591,G__14592) : f.call(null,G__14591,G__14592));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__14593 = nval;
var G__14594 = cljs.core.next(coll__$1);
val__$1 = G__14593;
coll__$1 = G__14594;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__14598 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__14598) : cljs.core.to_array.call(null,G__14598));
})();
var G__14599_14601 = a;
goog.array.shuffle(G__14599_14601);

var G__14600 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__14600) : cljs.core.vec.call(null,G__14600));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__14604 = coll;
if(G__14604){
var bit__12303__auto__ = (G__14604.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__12303__auto__) || (G__14604.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__14605 = coll;
if(G__14605){
var bit__12303__auto__ = (G__14605.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__12303__auto__) || (G__14605.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__14614 = null;
var G__14614__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__14614__1 = (function (x){
var G__14611 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__14611) : cf.call(null,G__14611));
});
var G__14614__2 = (function (x,y){
var G__14612 = x;
var G__14613 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14612,G__14613) : f.call(null,G__14612,G__14613));
});
G__14614 = function(x,y){
switch(arguments.length){
case 0:
return G__14614__0.call(this);
case 1:
return G__14614__1.call(this,x);
case 2:
return G__14614__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14614.cljs$core$IFn$_invoke$arity$0 = G__14614__0;
G__14614.cljs$core$IFn$_invoke$arity$1 = G__14614__1;
G__14614.cljs$core$IFn$_invoke$arity$2 = G__14614__2;
return G__14614;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__14621 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14621) : xform.call(null,G__14621));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__14622 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__14622) : f__$1.call(null,G__14622));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__14623__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__14623 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14624__i = 0, G__14624__a = new Array(arguments.length -  2);
while (G__14624__i < G__14624__a.length) {G__14624__a[G__14624__i] = arguments[G__14624__i + 2]; ++G__14624__i;}
  more = new cljs.core.IndexedSeq(G__14624__a,0);
} 
return G__14623__delegate.call(this,x,y,more);};
G__14623.cljs$lang$maxFixedArity = 2;
G__14623.cljs$lang$applyTo = (function (arglist__14625){
var x = cljs.core.first(arglist__14625);
arglist__14625 = cljs.core.next(arglist__14625);
var y = cljs.core.first(arglist__14625);
var more = cljs.core.rest(arglist__14625);
return G__14623__delegate(x,y,more);
});
G__14623.cljs$core$IFn$_invoke$arity$variadic = G__14623__delegate;
return G__14623;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__14626 = null;
if (arguments.length > 2) {
var G__14627__i = 0, G__14627__a = new Array(arguments.length -  2);
while (G__14627__i < G__14627__a.length) {G__14627__a[G__14627__i] = arguments[G__14627__i + 2]; ++G__14627__i;}
G__14626 = new cljs.core.IndexedSeq(G__14627__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14626);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__14628__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__14628 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14629__i = 0, G__14629__a = new Array(arguments.length -  2);
while (G__14629__i < G__14629__a.length) {G__14629__a[G__14629__i] = arguments[G__14629__i + 2]; ++G__14629__i;}
  more = new cljs.core.IndexedSeq(G__14629__a,0);
} 
return G__14628__delegate.call(this,x,y,more);};
G__14628.cljs$lang$maxFixedArity = 2;
G__14628.cljs$lang$applyTo = (function (arglist__14630){
var x = cljs.core.first(arglist__14630);
arglist__14630 = cljs.core.next(arglist__14630);
var y = cljs.core.first(arglist__14630);
var more = cljs.core.rest(arglist__14630);
return G__14628__delegate(x,y,more);
});
G__14628.cljs$core$IFn$_invoke$arity$variadic = G__14628__delegate;
return G__14628;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__14631 = null;
if (arguments.length > 2) {
var G__14632__i = 0, G__14632__a = new Array(arguments.length -  2);
while (G__14632__i < G__14632__a.length) {G__14632__a[G__14632__i] = arguments[G__14632__i + 2]; ++G__14632__i;}
G__14631 = new cljs.core.IndexedSeq(G__14632__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14631);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__14633__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__14633 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14634__i = 0, G__14634__a = new Array(arguments.length -  2);
while (G__14634__i < G__14634__a.length) {G__14634__a[G__14634__i] = arguments[G__14634__i + 2]; ++G__14634__i;}
  more = new cljs.core.IndexedSeq(G__14634__a,0);
} 
return G__14633__delegate.call(this,x,y,more);};
G__14633.cljs$lang$maxFixedArity = 2;
G__14633.cljs$lang$applyTo = (function (arglist__14635){
var x = cljs.core.first(arglist__14635);
arglist__14635 = cljs.core.next(arglist__14635);
var y = cljs.core.first(arglist__14635);
var more = cljs.core.rest(arglist__14635);
return G__14633__delegate(x,y,more);
});
G__14633.cljs$core$IFn$_invoke$arity$variadic = G__14633__delegate;
return G__14633;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__14636 = null;
if (arguments.length > 2) {
var G__14637__i = 0, G__14637__a = new Array(arguments.length -  2);
while (G__14637__i < G__14637__a.length) {G__14637__a[G__14637__i] = arguments[G__14637__i + 2]; ++G__14637__i;}
G__14636 = new cljs.core.IndexedSeq(G__14637__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14636);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__14642__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__14642 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14643__i = 0, G__14643__a = new Array(arguments.length -  2);
while (G__14643__i < G__14643__a.length) {G__14643__a[G__14643__i] = arguments[G__14643__i + 2]; ++G__14643__i;}
  more = new cljs.core.IndexedSeq(G__14643__a,0);
} 
return G__14642__delegate.call(this,x,y,more);};
G__14642.cljs$lang$maxFixedArity = 2;
G__14642.cljs$lang$applyTo = (function (arglist__14644){
var x = cljs.core.first(arglist__14644);
arglist__14644 = cljs.core.next(arglist__14644);
var y = cljs.core.first(arglist__14644);
var more = cljs.core.rest(arglist__14644);
return G__14642__delegate(x,y,more);
});
G__14642.cljs$core$IFn$_invoke$arity$variadic = G__14642__delegate;
return G__14642;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__14645 = null;
if (arguments.length > 2) {
var G__14646__i = 0, G__14646__a = new Array(arguments.length -  2);
while (G__14646__i < G__14646__a.length) {G__14646__a[G__14646__i] = arguments[G__14646__i + 2]; ++G__14646__i;}
G__14645 = new cljs.core.IndexedSeq(G__14646__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14645);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__14647__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__14648 = y;
var G__14649 = cljs.core.first(more);
var G__14650 = cljs.core.next(more);
x = G__14648;
y = G__14649;
more = G__14650;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14647 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14651__i = 0, G__14651__a = new Array(arguments.length -  2);
while (G__14651__i < G__14651__a.length) {G__14651__a[G__14651__i] = arguments[G__14651__i + 2]; ++G__14651__i;}
  more = new cljs.core.IndexedSeq(G__14651__a,0);
} 
return G__14647__delegate.call(this,x,y,more);};
G__14647.cljs$lang$maxFixedArity = 2;
G__14647.cljs$lang$applyTo = (function (arglist__14652){
var x = cljs.core.first(arglist__14652);
arglist__14652 = cljs.core.next(arglist__14652);
var y = cljs.core.first(arglist__14652);
var more = cljs.core.rest(arglist__14652);
return G__14647__delegate(x,y,more);
});
G__14647.cljs$core$IFn$_invoke$arity$variadic = G__14647__delegate;
return G__14647;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__14653 = null;
if (arguments.length > 2) {
var G__14654__i = 0, G__14654__a = new Array(arguments.length -  2);
while (G__14654__i < G__14654__a.length) {G__14654__a[G__14654__i] = arguments[G__14654__i + 2]; ++G__14654__i;}
G__14653 = new cljs.core.IndexedSeq(G__14654__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14653);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__14655__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__14656 = y;
var G__14657 = cljs.core.first(more);
var G__14658 = cljs.core.next(more);
x = G__14656;
y = G__14657;
more = G__14658;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14655 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14659__i = 0, G__14659__a = new Array(arguments.length -  2);
while (G__14659__i < G__14659__a.length) {G__14659__a[G__14659__i] = arguments[G__14659__i + 2]; ++G__14659__i;}
  more = new cljs.core.IndexedSeq(G__14659__a,0);
} 
return G__14655__delegate.call(this,x,y,more);};
G__14655.cljs$lang$maxFixedArity = 2;
G__14655.cljs$lang$applyTo = (function (arglist__14660){
var x = cljs.core.first(arglist__14660);
arglist__14660 = cljs.core.next(arglist__14660);
var y = cljs.core.first(arglist__14660);
var more = cljs.core.rest(arglist__14660);
return G__14655__delegate(x,y,more);
});
G__14655.cljs$core$IFn$_invoke$arity$variadic = G__14655__delegate;
return G__14655;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__14661 = null;
if (arguments.length > 2) {
var G__14662__i = 0, G__14662__a = new Array(arguments.length -  2);
while (G__14662__i < G__14662__a.length) {G__14662__a[G__14662__i] = arguments[G__14662__i + 2]; ++G__14662__i;}
G__14661 = new cljs.core.IndexedSeq(G__14662__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14661);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__14663__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__14664 = y;
var G__14665 = cljs.core.first(more);
var G__14666 = cljs.core.next(more);
x = G__14664;
y = G__14665;
more = G__14666;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14663 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14667__i = 0, G__14667__a = new Array(arguments.length -  2);
while (G__14667__i < G__14667__a.length) {G__14667__a[G__14667__i] = arguments[G__14667__i + 2]; ++G__14667__i;}
  more = new cljs.core.IndexedSeq(G__14667__a,0);
} 
return G__14663__delegate.call(this,x,y,more);};
G__14663.cljs$lang$maxFixedArity = 2;
G__14663.cljs$lang$applyTo = (function (arglist__14668){
var x = cljs.core.first(arglist__14668);
arglist__14668 = cljs.core.next(arglist__14668);
var y = cljs.core.first(arglist__14668);
var more = cljs.core.rest(arglist__14668);
return G__14663__delegate(x,y,more);
});
G__14663.cljs$core$IFn$_invoke$arity$variadic = G__14663__delegate;
return G__14663;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__14669 = null;
if (arguments.length > 2) {
var G__14670__i = 0, G__14670__a = new Array(arguments.length -  2);
while (G__14670__i < G__14670__a.length) {G__14670__a[G__14670__i] = arguments[G__14670__i + 2]; ++G__14670__i;}
G__14669 = new cljs.core.IndexedSeq(G__14670__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14669);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__14671__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__14672 = y;
var G__14673 = cljs.core.first(more);
var G__14674 = cljs.core.next(more);
x = G__14672;
y = G__14673;
more = G__14674;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14671 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14675__i = 0, G__14675__a = new Array(arguments.length -  2);
while (G__14675__i < G__14675__a.length) {G__14675__a[G__14675__i] = arguments[G__14675__i + 2]; ++G__14675__i;}
  more = new cljs.core.IndexedSeq(G__14675__a,0);
} 
return G__14671__delegate.call(this,x,y,more);};
G__14671.cljs$lang$maxFixedArity = 2;
G__14671.cljs$lang$applyTo = (function (arglist__14676){
var x = cljs.core.first(arglist__14676);
arglist__14676 = cljs.core.next(arglist__14676);
var y = cljs.core.first(arglist__14676);
var more = cljs.core.rest(arglist__14676);
return G__14671__delegate(x,y,more);
});
G__14671.cljs$core$IFn$_invoke$arity$variadic = G__14671__delegate;
return G__14671;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__14677 = null;
if (arguments.length > 2) {
var G__14678__i = 0, G__14678__a = new Array(arguments.length -  2);
while (G__14678__i < G__14678__a.length) {G__14678__a[G__14678__i] = arguments[G__14678__i + 2]; ++G__14678__i;}
G__14677 = new cljs.core.IndexedSeq(G__14678__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14677);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__11946__auto__ = x;
var y__11947__auto__ = y;
return ((x__11946__auto__ > y__11947__auto__) ? x__11946__auto__ : y__11947__auto__);
});
var max__3 = (function() { 
var G__14679__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__11946__auto__ = x;
var y__11947__auto__ = y;
return ((x__11946__auto__ > y__11947__auto__) ? x__11946__auto__ : y__11947__auto__);
})(),more);
};
var G__14679 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14680__i = 0, G__14680__a = new Array(arguments.length -  2);
while (G__14680__i < G__14680__a.length) {G__14680__a[G__14680__i] = arguments[G__14680__i + 2]; ++G__14680__i;}
  more = new cljs.core.IndexedSeq(G__14680__a,0);
} 
return G__14679__delegate.call(this,x,y,more);};
G__14679.cljs$lang$maxFixedArity = 2;
G__14679.cljs$lang$applyTo = (function (arglist__14681){
var x = cljs.core.first(arglist__14681);
arglist__14681 = cljs.core.next(arglist__14681);
var y = cljs.core.first(arglist__14681);
var more = cljs.core.rest(arglist__14681);
return G__14679__delegate(x,y,more);
});
G__14679.cljs$core$IFn$_invoke$arity$variadic = G__14679__delegate;
return G__14679;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__14682 = null;
if (arguments.length > 2) {
var G__14683__i = 0, G__14683__a = new Array(arguments.length -  2);
while (G__14683__i < G__14683__a.length) {G__14683__a[G__14683__i] = arguments[G__14683__i + 2]; ++G__14683__i;}
G__14682 = new cljs.core.IndexedSeq(G__14683__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14682);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__11953__auto__ = x;
var y__11954__auto__ = y;
return ((x__11953__auto__ < y__11954__auto__) ? x__11953__auto__ : y__11954__auto__);
});
var min__3 = (function() { 
var G__14684__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__11953__auto__ = x;
var y__11954__auto__ = y;
return ((x__11953__auto__ < y__11954__auto__) ? x__11953__auto__ : y__11954__auto__);
})(),more);
};
var G__14684 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14685__i = 0, G__14685__a = new Array(arguments.length -  2);
while (G__14685__i < G__14685__a.length) {G__14685__a[G__14685__i] = arguments[G__14685__i + 2]; ++G__14685__i;}
  more = new cljs.core.IndexedSeq(G__14685__a,0);
} 
return G__14684__delegate.call(this,x,y,more);};
G__14684.cljs$lang$maxFixedArity = 2;
G__14684.cljs$lang$applyTo = (function (arglist__14686){
var x = cljs.core.first(arglist__14686);
arglist__14686 = cljs.core.next(arglist__14686);
var y = cljs.core.first(arglist__14686);
var more = cljs.core.rest(arglist__14686);
return G__14684__delegate(x,y,more);
});
G__14684.cljs$core$IFn$_invoke$arity$variadic = G__14684__delegate;
return G__14684;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__14687 = null;
if (arguments.length > 2) {
var G__14688__i = 0, G__14688__a = new Array(arguments.length -  2);
while (G__14688__i < G__14688__a.length) {G__14688__a[G__14688__i] = arguments[G__14688__i + 2]; ++G__14688__i;}
G__14687 = new cljs.core.IndexedSeq(G__14688__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14687);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__14689__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__14689 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14690__i = 0, G__14690__a = new Array(arguments.length -  2);
while (G__14690__i < G__14690__a.length) {G__14690__a[G__14690__i] = arguments[G__14690__i + 2]; ++G__14690__i;}
  more = new cljs.core.IndexedSeq(G__14690__a,0);
} 
return G__14689__delegate.call(this,x,y,more);};
G__14689.cljs$lang$maxFixedArity = 2;
G__14689.cljs$lang$applyTo = (function (arglist__14691){
var x = cljs.core.first(arglist__14691);
arglist__14691 = cljs.core.next(arglist__14691);
var y = cljs.core.first(arglist__14691);
var more = cljs.core.rest(arglist__14691);
return G__14689__delegate(x,y,more);
});
G__14689.cljs$core$IFn$_invoke$arity$variadic = G__14689__delegate;
return G__14689;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__14692 = null;
if (arguments.length > 2) {
var G__14693__i = 0, G__14693__a = new Array(arguments.length -  2);
while (G__14693__i < G__14693__a.length) {G__14693__a[G__14693__i] = arguments[G__14693__i + 2]; ++G__14693__i;}
G__14692 = new cljs.core.IndexedSeq(G__14693__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14692);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__14694__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__14694 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14695__i = 0, G__14695__a = new Array(arguments.length -  2);
while (G__14695__i < G__14695__a.length) {G__14695__a[G__14695__i] = arguments[G__14695__i + 2]; ++G__14695__i;}
  more = new cljs.core.IndexedSeq(G__14695__a,0);
} 
return G__14694__delegate.call(this,x,y,more);};
G__14694.cljs$lang$maxFixedArity = 2;
G__14694.cljs$lang$applyTo = (function (arglist__14696){
var x = cljs.core.first(arglist__14696);
arglist__14696 = cljs.core.next(arglist__14696);
var y = cljs.core.first(arglist__14696);
var more = cljs.core.rest(arglist__14696);
return G__14694__delegate(x,y,more);
});
G__14694.cljs$core$IFn$_invoke$arity$variadic = G__14694__delegate;
return G__14694;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__14697 = null;
if (arguments.length > 2) {
var G__14698__i = 0, G__14698__a = new Array(arguments.length -  2);
while (G__14698__i < G__14698__a.length) {G__14698__a[G__14698__i] = arguments[G__14698__i + 2]; ++G__14698__i;}
G__14697 = new cljs.core.IndexedSeq(G__14698__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14697);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__14703__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__14703 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14704__i = 0, G__14704__a = new Array(arguments.length -  2);
while (G__14704__i < G__14704__a.length) {G__14704__a[G__14704__i] = arguments[G__14704__i + 2]; ++G__14704__i;}
  more = new cljs.core.IndexedSeq(G__14704__a,0);
} 
return G__14703__delegate.call(this,x,y,more);};
G__14703.cljs$lang$maxFixedArity = 2;
G__14703.cljs$lang$applyTo = (function (arglist__14705){
var x = cljs.core.first(arglist__14705);
arglist__14705 = cljs.core.next(arglist__14705);
var y = cljs.core.first(arglist__14705);
var more = cljs.core.rest(arglist__14705);
return G__14703__delegate(x,y,more);
});
G__14703.cljs$core$IFn$_invoke$arity$variadic = G__14703__delegate;
return G__14703;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__14706 = null;
if (arguments.length > 2) {
var G__14707__i = 0, G__14707__a = new Array(arguments.length -  2);
while (G__14707__i < G__14707__a.length) {G__14707__a[G__14707__i] = arguments[G__14707__i + 2]; ++G__14707__i;}
G__14706 = new cljs.core.IndexedSeq(G__14707__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14706);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__14708__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__14708 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14709__i = 0, G__14709__a = new Array(arguments.length -  2);
while (G__14709__i < G__14709__a.length) {G__14709__a[G__14709__i] = arguments[G__14709__i + 2]; ++G__14709__i;}
  more = new cljs.core.IndexedSeq(G__14709__a,0);
} 
return G__14708__delegate.call(this,x,y,more);};
G__14708.cljs$lang$maxFixedArity = 2;
G__14708.cljs$lang$applyTo = (function (arglist__14710){
var x = cljs.core.first(arglist__14710);
arglist__14710 = cljs.core.next(arglist__14710);
var y = cljs.core.first(arglist__14710);
var more = cljs.core.rest(arglist__14710);
return G__14708__delegate(x,y,more);
});
G__14708.cljs$core$IFn$_invoke$arity$variadic = G__14708__delegate;
return G__14708;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__14711 = null;
if (arguments.length > 2) {
var G__14712__i = 0, G__14712__a = new Array(arguments.length -  2);
while (G__14712__i < G__14712__a.length) {G__14712__a[G__14712__i] = arguments[G__14712__i + 2]; ++G__14712__i;}
G__14711 = new cljs.core.IndexedSeq(G__14712__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14711);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__14713__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__14713 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14714__i = 0, G__14714__a = new Array(arguments.length -  2);
while (G__14714__i < G__14714__a.length) {G__14714__a[G__14714__i] = arguments[G__14714__i + 2]; ++G__14714__i;}
  more = new cljs.core.IndexedSeq(G__14714__a,0);
} 
return G__14713__delegate.call(this,x,y,more);};
G__14713.cljs$lang$maxFixedArity = 2;
G__14713.cljs$lang$applyTo = (function (arglist__14715){
var x = cljs.core.first(arglist__14715);
arglist__14715 = cljs.core.next(arglist__14715);
var y = cljs.core.first(arglist__14715);
var more = cljs.core.rest(arglist__14715);
return G__14713__delegate(x,y,more);
});
G__14713.cljs$core$IFn$_invoke$arity$variadic = G__14713__delegate;
return G__14713;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__14716 = null;
if (arguments.length > 2) {
var G__14717__i = 0, G__14717__a = new Array(arguments.length -  2);
while (G__14717__i < G__14717__a.length) {G__14717__a[G__14717__i] = arguments[G__14717__i + 2]; ++G__14717__i;}
G__14716 = new cljs.core.IndexedSeq(G__14717__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14716);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__14720 = x;
var G__14721 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__14720,G__14721) : cljs.core.mod.call(null,G__14720,G__14721));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__14722__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__14722 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14723__i = 0, G__14723__a = new Array(arguments.length -  2);
while (G__14723__i < G__14723__a.length) {G__14723__a[G__14723__i] = arguments[G__14723__i + 2]; ++G__14723__i;}
  more = new cljs.core.IndexedSeq(G__14723__a,0);
} 
return G__14722__delegate.call(this,x,y,more);};
G__14722.cljs$lang$maxFixedArity = 2;
G__14722.cljs$lang$applyTo = (function (arglist__14724){
var x = cljs.core.first(arglist__14724);
arglist__14724 = cljs.core.next(arglist__14724);
var y = cljs.core.first(arglist__14724);
var more = cljs.core.rest(arglist__14724);
return G__14722__delegate(x,y,more);
});
G__14722.cljs$core$IFn$_invoke$arity$variadic = G__14722__delegate;
return G__14722;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__14725 = null;
if (arguments.length > 2) {
var G__14726__i = 0, G__14726__a = new Array(arguments.length -  2);
while (G__14726__i < G__14726__a.length) {G__14726__a[G__14726__i] = arguments[G__14726__i + 2]; ++G__14726__i;}
G__14725 = new cljs.core.IndexedSeq(G__14726__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14725);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__14727__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__14727 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14728__i = 0, G__14728__a = new Array(arguments.length -  2);
while (G__14728__i < G__14728__a.length) {G__14728__a[G__14728__i] = arguments[G__14728__i + 2]; ++G__14728__i;}
  more = new cljs.core.IndexedSeq(G__14728__a,0);
} 
return G__14727__delegate.call(this,x,y,more);};
G__14727.cljs$lang$maxFixedArity = 2;
G__14727.cljs$lang$applyTo = (function (arglist__14729){
var x = cljs.core.first(arglist__14729);
arglist__14729 = cljs.core.next(arglist__14729);
var y = cljs.core.first(arglist__14729);
var more = cljs.core.rest(arglist__14729);
return G__14727__delegate(x,y,more);
});
G__14727.cljs$core$IFn$_invoke$arity$variadic = G__14727__delegate;
return G__14727;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__14730 = null;
if (arguments.length > 2) {
var G__14731__i = 0, G__14731__a = new Array(arguments.length -  2);
while (G__14731__i < G__14731__a.length) {G__14731__a[G__14731__i] = arguments[G__14731__i + 2]; ++G__14731__i;}
G__14730 = new cljs.core.IndexedSeq(G__14731__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__14734 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__14734) : Math.floor.call(null,G__14734));
} else {
var G__14735 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__14735) : Math.ceil.call(null,G__14735));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__14740__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__14741 = y;
var G__14742 = cljs.core.first(more);
var G__14743 = cljs.core.next(more);
x = G__14741;
y = G__14742;
more = G__14743;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14740 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14744__i = 0, G__14744__a = new Array(arguments.length -  2);
while (G__14744__i < G__14744__a.length) {G__14744__a[G__14744__i] = arguments[G__14744__i + 2]; ++G__14744__i;}
  more = new cljs.core.IndexedSeq(G__14744__a,0);
} 
return G__14740__delegate.call(this,x,y,more);};
G__14740.cljs$lang$maxFixedArity = 2;
G__14740.cljs$lang$applyTo = (function (arglist__14745){
var x = cljs.core.first(arglist__14745);
arglist__14745 = cljs.core.next(arglist__14745);
var y = cljs.core.first(arglist__14745);
var more = cljs.core.rest(arglist__14745);
return G__14740__delegate(x,y,more);
});
G__14740.cljs$core$IFn$_invoke$arity$variadic = G__14740__delegate;
return G__14740;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__14746 = null;
if (arguments.length > 2) {
var G__14747__i = 0, G__14747__a = new Array(arguments.length -  2);
while (G__14747__i < G__14747__a.length) {G__14747__a[G__14747__i] = arguments[G__14747__i + 2]; ++G__14747__i;}
G__14746 = new cljs.core.IndexedSeq(G__14747__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14746);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__14748 = (n__$1 - (1));
var G__14749 = cljs.core.next(xs);
n__$1 = G__14748;
xs = G__14749;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__14753 = x;
return goog.string.buildString(G__14753);
}
});
var str__2 = (function() { 
var G__14754__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__14755 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__14756 = cljs.core.next(more);
sb = G__14755;
more = G__14756;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__14754 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__14757__i = 0, G__14757__a = new Array(arguments.length -  1);
while (G__14757__i < G__14757__a.length) {G__14757__a[G__14757__i] = arguments[G__14757__i + 1]; ++G__14757__i;}
  ys = new cljs.core.IndexedSeq(G__14757__a,0);
} 
return G__14754__delegate.call(this,x,ys);};
G__14754.cljs$lang$maxFixedArity = 1;
G__14754.cljs$lang$applyTo = (function (arglist__14758){
var x = cljs.core.first(arglist__14758);
var ys = cljs.core.rest(arglist__14758);
return G__14754__delegate(x,ys);
});
G__14754.cljs$core$IFn$_invoke$arity$variadic = G__14754__delegate;
return G__14754;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__14759 = null;
if (arguments.length > 1) {
var G__14760__i = 0, G__14760__a = new Array(arguments.length -  1);
while (G__14760__i < G__14760__a.length) {G__14760__a[G__14760__i] = arguments[G__14760__i + 1]; ++G__14760__i;}
G__14759 = new cljs.core.IndexedSeq(G__14760__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14759);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__14761 = cljs.core.next(xs);
var G__14762 = cljs.core.next(ys);
xs = G__14761;
ys = G__14762;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__14763 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__14764 = cljs.core.next(s);
res = G__14763;
s = G__14764;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__14769 = ((h + (cljs.core.hash((function (){var G__14767 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14767) : cljs.core.key.call(null,G__14767));
})()) ^ cljs.core.hash((function (){var G__14768 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14768) : cljs.core.val.call(null,G__14768));
})()))) % (4503599627370496));
var G__14770 = cljs.core.next(s);
h = G__14769;
s = G__14770;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__14771 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__14772 = cljs.core.next(s__$1);
h = G__14771;
s__$1 = G__14772;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__14783_14793 = cljs.core.seq(fn_map);
var chunk__14784_14794 = null;
var count__14785_14795 = (0);
var i__14786_14796 = (0);
while(true){
if((i__14786_14796 < count__14785_14795)){
var vec__14787_14797 = chunk__14784_14794.cljs$core$IIndexed$_nth$arity$2(null,i__14786_14796);
var key_name_14798 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14787_14797,(0),null);
var f_14799 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14787_14797,(1),null);
var str_name_14800 = (function (){var G__14788 = key_name_14798;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14788) : cljs.core.name.call(null,G__14788));
})();
(obj[str_name_14800] = f_14799);

var G__14801 = seq__14783_14793;
var G__14802 = chunk__14784_14794;
var G__14803 = count__14785_14795;
var G__14804 = (i__14786_14796 + (1));
seq__14783_14793 = G__14801;
chunk__14784_14794 = G__14802;
count__14785_14795 = G__14803;
i__14786_14796 = G__14804;
continue;
} else {
var temp__4126__auto___14805 = cljs.core.seq(seq__14783_14793);
if(temp__4126__auto___14805){
var seq__14783_14806__$1 = temp__4126__auto___14805;
if(cljs.core.chunked_seq_QMARK_(seq__14783_14806__$1)){
var c__12416__auto___14807 = (function (){var G__14789 = seq__14783_14806__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__14789) : cljs.core.chunk_first.call(null,G__14789));
})();
var G__14808 = (function (){var G__14790 = seq__14783_14806__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__14790) : cljs.core.chunk_rest.call(null,G__14790));
})();
var G__14809 = c__12416__auto___14807;
var G__14810 = cljs.core.count(c__12416__auto___14807);
var G__14811 = (0);
seq__14783_14793 = G__14808;
chunk__14784_14794 = G__14809;
count__14785_14795 = G__14810;
i__14786_14796 = G__14811;
continue;
} else {
var vec__14791_14812 = cljs.core.first(seq__14783_14806__$1);
var key_name_14813 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14791_14812,(0),null);
var f_14814 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14791_14812,(1),null);
var str_name_14815 = (function (){var G__14792 = key_name_14813;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14792) : cljs.core.name.call(null,G__14792));
})();
(obj[str_name_14815] = f_14814);

var G__14816 = cljs.core.next(seq__14783_14806__$1);
var G__14817 = null;
var G__14818 = (0);
var G__14819 = (0);
seq__14783_14793 = G__14816;
chunk__14784_14794 = G__14817;
count__14785_14795 = G__14818;
i__14786_14796 = G__14819;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__14821 = coll;
if(G__14821){
var bit__12310__auto__ = (G__14821.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__12310__auto__) || (G__14821.cljs$core$IReversible$)){
return true;
} else {
if((!G__14821.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__14821);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__14821);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__14822 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__14822;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__14823 = (i - (1));
var G__14824 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__14823;
r = G__14824;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__14825__i = 0, G__14825__a = new Array(arguments.length -  0);
while (G__14825__i < G__14825__a.length) {G__14825__a[G__14825__i] = arguments[G__14825__i + 0]; ++G__14825__i;}
  xs = new cljs.core.IndexedSeq(G__14825__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__14826){
var xs = cljs.core.seq(arglist__14826);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__11629__auto__ = (coll == null);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var G__14830 = coll;
if(G__14830){
var bit__12303__auto__ = (G__14830.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12303__auto__) || (G__14830.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__14832 = x;
if(G__14832){
var bit__12310__auto__ = (G__14832.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__12310__auto__) || (G__14832.cljs$core$IList$)){
return true;
} else {
if((!G__14832.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__14832);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__14832);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__11617__auto__ = cljs.core.not(a.ns);
if(and__11617__auto__){
return b.ns;
} else {
return and__11617__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__14839 = a.ns;
var G__14840 = b.ns;
return goog.array.defaultCompare(G__14839,G__14840);
})();
if(((0) === nsc)){
var G__14841 = a.name;
var G__14842 = b.name;
return goog.array.defaultCompare(G__14841,G__14842);
} else {
return nsc;
}
}
} else {
var G__14843 = a.name;
var G__14844 = b.name;
return goog.array.defaultCompare(G__14843,G__14844);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__12050__auto__ = self__._hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__14846 = null;
var G__14846__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__14846__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__14846 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__14846__2.call(this,self__,coll);
case 3:
return G__14846__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14846.cljs$core$IFn$_invoke$arity$2 = G__14846__2;
G__14846.cljs$core$IFn$_invoke$arity$3 = G__14846__3;
return G__14846;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args14845){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14845)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__14848 = x;
if(G__14848){
var bit__12303__auto__ = (G__14848.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__12303__auto__) || (G__14848.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__14850 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14850) : cljs.core.name.call(null,G__14850));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__14851 = ls.sval();
ls = G__14851;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__14853 = s;
if(G__14853){
var bit__12303__auto__ = (G__14853.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__12303__auto__) || (G__14853.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__14854 = cljs.core.next(s__$1);
s__$1 = G__14854;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_14855 = (0);
var xs_14856 = cljs.core.seq(coll);
while(true){
if(xs_14856){
(ret[i_14855] = cljs.core.to_array(cljs.core.first(xs_14856)));

var G__14857 = (i_14855 + (1));
var G__14858 = cljs.core.next(xs_14856);
i_14855 = G__14857;
xs_14856 = G__14858;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14861 = (i + (1));
var G__14862 = cljs.core.next(s__$1);
i = G__14861;
s__$1 = G__14862;
continue;
} else {
return a;
}
break;
}
} else {
var n__12516__auto___14863 = size;
var i_14864 = (0);
while(true){
if((i_14864 < n__12516__auto___14863)){
(a[i_14864] = init_val_or_seq);

var G__14865 = (i_14864 + (1));
i_14864 = G__14865;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14868 = (i + (1));
var G__14869 = cljs.core.next(s__$1);
i = G__14868;
s__$1 = G__14869;
continue;
} else {
return a;
}
break;
}
} else {
var n__12516__auto___14870 = size;
var i_14871 = (0);
while(true){
if((i_14871 < n__12516__auto___14870)){
(a[i_14871] = init_val_or_seq);

var G__14872 = (i_14871 + (1));
i_14871 = G__14872;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14875 = (i + (1));
var G__14876 = cljs.core.next(s__$1);
i = G__14875;
s__$1 = G__14876;
continue;
} else {
return a;
}
break;
}
} else {
var n__12516__auto___14877 = size;
var i_14878 = (0);
while(true){
if((i_14878 < n__12516__auto___14877)){
(a[i_14878] = init_val_or_seq);

var G__14879 = (i_14878 + (1));
i_14878 = G__14879;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14882 = (i + (1));
var G__14883 = cljs.core.next(s__$1);
i = G__14882;
s__$1 = G__14883;
continue;
} else {
return a;
}
break;
}
} else {
var n__12516__auto___14884 = size;
var i_14885 = (0);
while(true){
if((i_14885 < n__12516__auto___14884)){
(a[i_14885] = init_val_or_seq);

var G__14886 = (i_14885 + (1));
i_14885 = G__14886;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__14887 = cljs.core.next(s__$1);
var G__14888 = (i - (1));
var G__14889 = (sum + (1));
s__$1 = G__14887;
i = G__14888;
sum = G__14889;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__14909__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__14909 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__14910__i = 0, G__14910__a = new Array(arguments.length -  2);
while (G__14910__i < G__14910__a.length) {G__14910__a[G__14910__i] = arguments[G__14910__i + 2]; ++G__14910__i;}
  zs = new cljs.core.IndexedSeq(G__14910__a,0);
} 
return G__14909__delegate.call(this,x,y,zs);};
G__14909.cljs$lang$maxFixedArity = 2;
G__14909.cljs$lang$applyTo = (function (arglist__14911){
var x = cljs.core.first(arglist__14911);
arglist__14911 = cljs.core.next(arglist__14911);
var y = cljs.core.first(arglist__14911);
var zs = cljs.core.rest(arglist__14911);
return G__14909__delegate(x,y,zs);
});
G__14909.cljs$core$IFn$_invoke$arity$variadic = G__14909__delegate;
return G__14909;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__14912 = null;
if (arguments.length > 2) {
var G__14913__i = 0, G__14913__a = new Array(arguments.length -  2);
while (G__14913__i < G__14913__a.length) {G__14913__a[G__14913__i] = arguments[G__14913__i + 2]; ++G__14913__i;}
G__14912 = new cljs.core.IndexedSeq(G__14913__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14912);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__14914__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__14914 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__14915__i = 0, G__14915__a = new Array(arguments.length -  4);
while (G__14915__i < G__14915__a.length) {G__14915__a[G__14915__i] = arguments[G__14915__i + 4]; ++G__14915__i;}
  more = new cljs.core.IndexedSeq(G__14915__a,0);
} 
return G__14914__delegate.call(this,a,b,c,d,more);};
G__14914.cljs$lang$maxFixedArity = 4;
G__14914.cljs$lang$applyTo = (function (arglist__14916){
var a = cljs.core.first(arglist__14916);
arglist__14916 = cljs.core.next(arglist__14916);
var b = cljs.core.first(arglist__14916);
arglist__14916 = cljs.core.next(arglist__14916);
var c = cljs.core.first(arglist__14916);
arglist__14916 = cljs.core.next(arglist__14916);
var d = cljs.core.first(arglist__14916);
var more = cljs.core.rest(arglist__14916);
return G__14914__delegate(a,b,c,d,more);
});
G__14914.cljs$core$IFn$_invoke$arity$variadic = G__14914__delegate;
return G__14914;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__14917 = null;
if (arguments.length > 4) {
var G__14918__i = 0, G__14918__a = new Array(arguments.length -  4);
while (G__14918__i < G__14918__a.length) {G__14918__a[G__14918__i] = arguments[G__14918__i + 4]; ++G__14918__i;}
G__14917 = new cljs.core.IndexedSeq(G__14918__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__14917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__14919__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__14920 = ntcoll;
var G__14921 = cljs.core.first(vals);
var G__14922 = cljs.core.next(vals);
tcoll = G__14920;
val = G__14921;
vals = G__14922;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14919 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__14923__i = 0, G__14923__a = new Array(arguments.length -  2);
while (G__14923__i < G__14923__a.length) {G__14923__a[G__14923__i] = arguments[G__14923__i + 2]; ++G__14923__i;}
  vals = new cljs.core.IndexedSeq(G__14923__a,0);
} 
return G__14919__delegate.call(this,tcoll,val,vals);};
G__14919.cljs$lang$maxFixedArity = 2;
G__14919.cljs$lang$applyTo = (function (arglist__14924){
var tcoll = cljs.core.first(arglist__14924);
arglist__14924 = cljs.core.next(arglist__14924);
var val = cljs.core.first(arglist__14924);
var vals = cljs.core.rest(arglist__14924);
return G__14919__delegate(tcoll,val,vals);
});
G__14919.cljs$core$IFn$_invoke$arity$variadic = G__14919__delegate;
return G__14919;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__14925 = null;
if (arguments.length > 2) {
var G__14926__i = 0, G__14926__a = new Array(arguments.length -  2);
while (G__14926__i < G__14926__a.length) {G__14926__a[G__14926__i] = arguments[G__14926__i + 2]; ++G__14926__i;}
G__14925 = new cljs.core.IndexedSeq(G__14926__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__14925);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__14927__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__14928 = ntcoll;
var G__14929 = cljs.core.first(kvs);
var G__14930 = cljs.core.second(kvs);
var G__14931 = cljs.core.nnext(kvs);
tcoll = G__14928;
key = G__14929;
val = G__14930;
kvs = G__14931;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14927 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__14932__i = 0, G__14932__a = new Array(arguments.length -  3);
while (G__14932__i < G__14932__a.length) {G__14932__a[G__14932__i] = arguments[G__14932__i + 3]; ++G__14932__i;}
  kvs = new cljs.core.IndexedSeq(G__14932__a,0);
} 
return G__14927__delegate.call(this,tcoll,key,val,kvs);};
G__14927.cljs$lang$maxFixedArity = 3;
G__14927.cljs$lang$applyTo = (function (arglist__14933){
var tcoll = cljs.core.first(arglist__14933);
arglist__14933 = cljs.core.next(arglist__14933);
var key = cljs.core.first(arglist__14933);
arglist__14933 = cljs.core.next(arglist__14933);
var val = cljs.core.first(arglist__14933);
var kvs = cljs.core.rest(arglist__14933);
return G__14927__delegate(tcoll,key,val,kvs);
});
G__14927.cljs$core$IFn$_invoke$arity$variadic = G__14927__delegate;
return G__14927;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__14934 = null;
if (arguments.length > 3) {
var G__14935__i = 0, G__14935__a = new Array(arguments.length -  3);
while (G__14935__i < G__14935__a.length) {G__14935__a[G__14935__i] = arguments[G__14935__i + 3]; ++G__14935__i;}
G__14934 = new cljs.core.IndexedSeq(G__14935__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__14934);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__14936__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__14937 = ntcoll;
var G__14938 = cljs.core.first(ks);
var G__14939 = cljs.core.next(ks);
tcoll = G__14937;
key = G__14938;
ks = G__14939;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14936 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__14940__i = 0, G__14940__a = new Array(arguments.length -  2);
while (G__14940__i < G__14940__a.length) {G__14940__a[G__14940__i] = arguments[G__14940__i + 2]; ++G__14940__i;}
  ks = new cljs.core.IndexedSeq(G__14940__a,0);
} 
return G__14936__delegate.call(this,tcoll,key,ks);};
G__14936.cljs$lang$maxFixedArity = 2;
G__14936.cljs$lang$applyTo = (function (arglist__14941){
var tcoll = cljs.core.first(arglist__14941);
arglist__14941 = cljs.core.next(arglist__14941);
var key = cljs.core.first(arglist__14941);
var ks = cljs.core.rest(arglist__14941);
return G__14936__delegate(tcoll,key,ks);
});
G__14936.cljs$core$IFn$_invoke$arity$variadic = G__14936__delegate;
return G__14936;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__14942 = null;
if (arguments.length > 2) {
var G__14943__i = 0, G__14943__a = new Array(arguments.length -  2);
while (G__14943__i < G__14943__a.length) {G__14943__a[G__14943__i] = arguments[G__14943__i + 2]; ++G__14943__i;}
G__14942 = new cljs.core.IndexedSeq(G__14943__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__14942);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__14944__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__14945 = ntcoll;
var G__14946 = cljs.core.first(vals);
var G__14947 = cljs.core.next(vals);
tcoll = G__14945;
val = G__14946;
vals = G__14947;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14944 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__14948__i = 0, G__14948__a = new Array(arguments.length -  2);
while (G__14948__i < G__14948__a.length) {G__14948__a[G__14948__i] = arguments[G__14948__i + 2]; ++G__14948__i;}
  vals = new cljs.core.IndexedSeq(G__14948__a,0);
} 
return G__14944__delegate.call(this,tcoll,val,vals);};
G__14944.cljs$lang$maxFixedArity = 2;
G__14944.cljs$lang$applyTo = (function (arglist__14949){
var tcoll = cljs.core.first(arglist__14949);
arglist__14949 = cljs.core.next(arglist__14949);
var val = cljs.core.first(arglist__14949);
var vals = cljs.core.rest(arglist__14949);
return G__14944__delegate(tcoll,val,vals);
});
G__14944.cljs$core$IFn$_invoke$arity$variadic = G__14944__delegate;
return G__14944;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__14950 = null;
if (arguments.length > 2) {
var G__14951__i = 0, G__14951__a = new Array(arguments.length -  2);
while (G__14951__i < G__14951__a.length) {G__14951__a[G__14951__i] = arguments[G__14951__i + 2]; ++G__14951__i;}
G__14950 = new cljs.core.IndexedSeq(G__14951__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__14950);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a12560 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a12560);
} else {
var G__15162 = a12560;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15162) : f.call(null,G__15162));
}
} else {
var b12561 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a12560,b12561);
} else {
var G__15163 = a12560;
var G__15164 = b12561;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15163,G__15164) : f.call(null,G__15163,G__15164));
}
} else {
var c12562 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a12560,b12561,c12562);
} else {
var G__15165 = a12560;
var G__15166 = b12561;
var G__15167 = c12562;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15165,G__15166,G__15167) : f.call(null,G__15165,G__15166,G__15167));
}
} else {
var d12563 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a12560,b12561,c12562,d12563);
} else {
var G__15168 = a12560;
var G__15169 = b12561;
var G__15170 = c12562;
var G__15171 = d12563;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15168,G__15169,G__15170,G__15171) : f.call(null,G__15168,G__15169,G__15170,G__15171));
}
} else {
var e12564 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a12560,b12561,c12562,d12563,e12564);
} else {
var G__15172 = a12560;
var G__15173 = b12561;
var G__15174 = c12562;
var G__15175 = d12563;
var G__15176 = e12564;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15172,G__15173,G__15174,G__15175,G__15176) : f.call(null,G__15172,G__15173,G__15174,G__15175,G__15176));
}
} else {
var f12565 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a12560,b12561,c12562,d12563,e12564,f12565);
} else {
var G__15177 = a12560;
var G__15178 = b12561;
var G__15179 = c12562;
var G__15180 = d12563;
var G__15181 = e12564;
var G__15182 = f12565;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__15177,G__15178,G__15179,G__15180,G__15181,G__15182) : f.call(null,G__15177,G__15178,G__15179,G__15180,G__15181,G__15182));
}
} else {
var g12566 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a12560,b12561,c12562,d12563,e12564,f12565,g12566);
} else {
var G__15183 = a12560;
var G__15184 = b12561;
var G__15185 = c12562;
var G__15186 = d12563;
var G__15187 = e12564;
var G__15188 = f12565;
var G__15189 = g12566;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__15183,G__15184,G__15185,G__15186,G__15187,G__15188,G__15189) : f.call(null,G__15183,G__15184,G__15185,G__15186,G__15187,G__15188,G__15189));
}
} else {
var h12567 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a12560,b12561,c12562,d12563,e12564,f12565,g12566,h12567);
} else {
var G__15190 = a12560;
var G__15191 = b12561;
var G__15192 = c12562;
var G__15193 = d12563;
var G__15194 = e12564;
var G__15195 = f12565;
var G__15196 = g12566;
var G__15197 = h12567;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__15190,G__15191,G__15192,G__15193,G__15194,G__15195,G__15196,G__15197) : f.call(null,G__15190,G__15191,G__15192,G__15193,G__15194,G__15195,G__15196,G__15197));
}
} else {
var i12568 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a12560,b12561,c12562,d12563,e12564,f12565,g12566,h12567,i12568);
} else {
var G__15198 = a12560;
var G__15199 = b12561;
var G__15200 = c12562;
var G__15201 = d12563;
var G__15202 = e12564;
var G__15203 = f12565;
var G__15204 = g12566;
var G__15205 = h12567;
var G__15206 = i12568;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__15198,G__15199,G__15200,G__15201,G__15202,G__15203,G__15204,G__15205,G__15206) : f.call(null,G__15198,G__15199,G__15200,G__15201,G__15202,G__15203,G__15204,G__15205,G__15206));
}
} else {
var j12569 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a12560,b12561,c12562,d12563,e12564,f12565,g12566,h12567,i12568,j12569);
} else {
var G__15207 = a12560;
var G__15208 = b12561;
var G__15209 = c12562;
var G__15210 = d12563;
var G__15211 = e12564;
var G__15212 = f12565;
var G__15213 = g12566;
var G__15214 = h12567;
var G__15215 = i12568;
var G__15216 = j12569;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__15207,G__15208,G__15209,G__15210,G__15211,G__15212,G__15213,G__15214,G__15215,G__15216) : f.call(null,G__15207,G__15208,G__15209,G__15210,G__15211,G__15212,G__15213,G__15214,G__15215,G__15216));
}
} else {
var k12570 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a12560,b12561,c12562,d12563,e12564,f12565,g12566,h12567,i12568,j12569,k12570);
} else {
var G__15217 = a12560;
var G__15218 = b12561;
var G__15219 = c12562;
var G__15220 = d12563;
var G__15221 = e12564;
var G__15222 = f12565;
var G__15223 = g12566;
var G__15224 = h12567;
var G__15225 = i12568;
var G__15226 = j12569;
var G__15227 = k12570;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__15217,G__15218,G__15219,G__15220,G__15221,G__15222,G__15223,G__15224,G__15225,G__15226,G__15227) : f.call(null,G__15217,G__15218,G__15219,G__15220,G__15221,G__15222,G__15223,G__15224,G__15225,G__15226,G__15227));
}
} else {
var l12571 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a12560,b12561,c12562,d12563,e12564,f12565,g12566,h12567,i12568,j12569,k12570,l12571);
} else {
var G__15228 = a12560;
var G__15229 = b12561;
var G__15230 = c12562;
var G__15231 = d12563;
var G__15232 = e12564;
var G__15233 = f12565;
var G__15234 = g12566;
var G__15235 = h12567;
var G__15236 = i12568;
var G__15237 = j12569;
var G__15238 = k12570;
var G__15239 = l12571;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__15228,G__15229,G__15230,G__15231,G__15232,G__15233,G__15234,G__15235,G__15236,G__15237,G__15238,G__15239) : f.call(null,G__15228,G__15229,G__15230,G__15231,G__15232,G__15233,G__15234,G__15235,G__15236,G__15237,G__15238,G__15239));
}
} else {
var m12572 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a12560,b12561,c12562,d12563,e12564,f12565,g12566,h12567,i12568,j12569,k12570,l12571,m12572);
} else {
var G__15240 = a12560;
var G__15241 = b12561;
var G__15242 = c12562;
var G__15243 = d12563;
var G__15244 = e12564;
var G__15245 = f12565;
var G__15246 = g12566;
var G__15247 = h12567;
var G__15248 = i12568;
var G__15249 = j12569;
var G__15250 = k12570;
var G__15251 = l12571;
var G__15252 = m12572;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__15240,G__15241,G__15242,G__15243,G__15244,G__15245,G__15246,G__15247,G__15248,G__15249,G__15250,G__15251,G__15252) : f.call(null,G__15240,G__15241,G__15242,G__15243,G__15244,G__15245,G__15246,G__15247,G__15248,G__15249,G__15250,G__15251,G__15252));
}
} else {
var n12573 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a12560,b12561,c12562,d12563,e12564,f12565,g12566,h12567,i12568,j12569,k12570,l12571,m12572,n12573);
} else {
var G__15253 = a12560;
var G__15254 = b12561;
var G__15255 = c12562;
var G__15256 = d12563;
var G__15257 = e12564;
var G__15258 = f12565;
var G__15259 = g12566;
var G__15260 = h12567;
var G__15261 = i12568;
var G__15262 = j12569;
var G__15263 = k12570;
var G__15264 = l12571;
var G__15265 = m12572;
var G__15266 = n12573;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__15253,G__15254,G__15255,G__15256,G__15257,G__15258,G__15259,G__15260,G__15261,G__15262,G__15263,G__15264,G__15265,G__15266) : f.call(null,G__15253,G__15254,G__15255,G__15256,G__15257,G__15258,G__15259,G__15260,G__15261,G__15262,G__15263,G__15264,G__15265,G__15266));
}
} else {
var o12574 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a12560,b12561,c12562,d12563,e12564,f12565,g12566,h12567,i12568,j12569,k12570,l12571,m12572,n12573,o12574);
} else {
var G__15267 = a12560;
var G__15268 = b12561;
var G__15269 = c12562;
var G__15270 = d12563;
var G__15271 = e12564;
var G__15272 = f12565;
var G__15273 = g12566;
var G__15274 = h12567;
var G__15275 = i12568;
var G__15276 = j12569;
var G__15277 = k12570;
var G__15278 = l12571;
var G__15279 = m12572;
var G__15280 = n12573;
var G__15281 = o12574;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__15267,G__15268,G__15269,G__15270,G__15271,G__15272,G__15273,G__15274,G__15275,G__15276,G__15277,G__15278,G__15279,G__15280,G__15281) : f.call(null,G__15267,G__15268,G__15269,G__15270,G__15271,G__15272,G__15273,G__15274,G__15275,G__15276,G__15277,G__15278,G__15279,G__15280,G__15281));
}
} else {
var p12575 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a12560,b12561,c12562,d12563,e12564,f12565,g12566,h12567,i12568,j12569,k12570,l12571,m12572,n12573,o12574,p12575);
} else {
var G__15282 = a12560;
var G__15283 = b12561;
var G__15284 = c12562;
var G__15285 = d12563;
var G__15286 = e12564;
var G__15287 = f12565;
var G__15288 = g12566;
var G__15289 = h12567;
var G__15290 = i12568;
var G__15291 = j12569;
var G__15292 = k12570;
var G__15293 = l12571;
var G__15294 = m12572;
var G__15295 = n12573;
var G__15296 = o12574;
var G__15297 = p12575;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__15282,G__15283,G__15284,G__15285,G__15286,G__15287,G__15288,G__15289,G__15290,G__15291,G__15292,G__15293,G__15294,G__15295,G__15296,G__15297) : f.call(null,G__15282,G__15283,G__15284,G__15285,G__15286,G__15287,G__15288,G__15289,G__15290,G__15291,G__15292,G__15293,G__15294,G__15295,G__15296,G__15297));
}
} else {
var q12576 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a12560,b12561,c12562,d12563,e12564,f12565,g12566,h12567,i12568,j12569,k12570,l12571,m12572,n12573,o12574,p12575,q12576);
} else {
var G__15298 = a12560;
var G__15299 = b12561;
var G__15300 = c12562;
var G__15301 = d12563;
var G__15302 = e12564;
var G__15303 = f12565;
var G__15304 = g12566;
var G__15305 = h12567;
var G__15306 = i12568;
var G__15307 = j12569;
var G__15308 = k12570;
var G__15309 = l12571;
var G__15310 = m12572;
var G__15311 = n12573;
var G__15312 = o12574;
var G__15313 = p12575;
var G__15314 = q12576;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__15298,G__15299,G__15300,G__15301,G__15302,G__15303,G__15304,G__15305,G__15306,G__15307,G__15308,G__15309,G__15310,G__15311,G__15312,G__15313,G__15314) : f.call(null,G__15298,G__15299,G__15300,G__15301,G__15302,G__15303,G__15304,G__15305,G__15306,G__15307,G__15308,G__15309,G__15310,G__15311,G__15312,G__15313,G__15314));
}
} else {
var r12577 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a12560,b12561,c12562,d12563,e12564,f12565,g12566,h12567,i12568,j12569,k12570,l12571,m12572,n12573,o12574,p12575,q12576,r12577);
} else {
var G__15315 = a12560;
var G__15316 = b12561;
var G__15317 = c12562;
var G__15318 = d12563;
var G__15319 = e12564;
var G__15320 = f12565;
var G__15321 = g12566;
var G__15322 = h12567;
var G__15323 = i12568;
var G__15324 = j12569;
var G__15325 = k12570;
var G__15326 = l12571;
var G__15327 = m12572;
var G__15328 = n12573;
var G__15329 = o12574;
var G__15330 = p12575;
var G__15331 = q12576;
var G__15332 = r12577;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__15315,G__15316,G__15317,G__15318,G__15319,G__15320,G__15321,G__15322,G__15323,G__15324,G__15325,G__15326,G__15327,G__15328,G__15329,G__15330,G__15331,G__15332) : f.call(null,G__15315,G__15316,G__15317,G__15318,G__15319,G__15320,G__15321,G__15322,G__15323,G__15324,G__15325,G__15326,G__15327,G__15328,G__15329,G__15330,G__15331,G__15332));
}
} else {
var s12578 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a12560,b12561,c12562,d12563,e12564,f12565,g12566,h12567,i12568,j12569,k12570,l12571,m12572,n12573,o12574,p12575,q12576,r12577,s12578);
} else {
var G__15333 = a12560;
var G__15334 = b12561;
var G__15335 = c12562;
var G__15336 = d12563;
var G__15337 = e12564;
var G__15338 = f12565;
var G__15339 = g12566;
var G__15340 = h12567;
var G__15341 = i12568;
var G__15342 = j12569;
var G__15343 = k12570;
var G__15344 = l12571;
var G__15345 = m12572;
var G__15346 = n12573;
var G__15347 = o12574;
var G__15348 = p12575;
var G__15349 = q12576;
var G__15350 = r12577;
var G__15351 = s12578;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__15333,G__15334,G__15335,G__15336,G__15337,G__15338,G__15339,G__15340,G__15341,G__15342,G__15343,G__15344,G__15345,G__15346,G__15347,G__15348,G__15349,G__15350,G__15351) : f.call(null,G__15333,G__15334,G__15335,G__15336,G__15337,G__15338,G__15339,G__15340,G__15341,G__15342,G__15343,G__15344,G__15345,G__15346,G__15347,G__15348,G__15349,G__15350,G__15351));
}
} else {
var t12579 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a12560,b12561,c12562,d12563,e12564,f12565,g12566,h12567,i12568,j12569,k12570,l12571,m12572,n12573,o12574,p12575,q12576,r12577,s12578,t12579);
} else {
var G__15352 = a12560;
var G__15353 = b12561;
var G__15354 = c12562;
var G__15355 = d12563;
var G__15356 = e12564;
var G__15357 = f12565;
var G__15358 = g12566;
var G__15359 = h12567;
var G__15360 = i12568;
var G__15361 = j12569;
var G__15362 = k12570;
var G__15363 = l12571;
var G__15364 = m12572;
var G__15365 = n12573;
var G__15366 = o12574;
var G__15367 = p12575;
var G__15368 = q12576;
var G__15369 = r12577;
var G__15370 = s12578;
var G__15371 = t12579;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__15352,G__15353,G__15354,G__15355,G__15356,G__15357,G__15358,G__15359,G__15360,G__15361,G__15362,G__15363,G__15364,G__15365,G__15366,G__15367,G__15368,G__15369,G__15370,G__15371) : f.call(null,G__15352,G__15353,G__15354,G__15355,G__15356,G__15357,G__15358,G__15359,G__15360,G__15361,G__15362,G__15363,G__15364,G__15365,G__15366,G__15367,G__15368,G__15369,G__15370,G__15371));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__15372__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__15372 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__15373__i = 0, G__15373__a = new Array(arguments.length -  5);
while (G__15373__i < G__15373__a.length) {G__15373__a[G__15373__i] = arguments[G__15373__i + 5]; ++G__15373__i;}
  args = new cljs.core.IndexedSeq(G__15373__a,0);
} 
return G__15372__delegate.call(this,f,a,b,c,d,args);};
G__15372.cljs$lang$maxFixedArity = 5;
G__15372.cljs$lang$applyTo = (function (arglist__15374){
var f = cljs.core.first(arglist__15374);
arglist__15374 = cljs.core.next(arglist__15374);
var a = cljs.core.first(arglist__15374);
arglist__15374 = cljs.core.next(arglist__15374);
var b = cljs.core.first(arglist__15374);
arglist__15374 = cljs.core.next(arglist__15374);
var c = cljs.core.first(arglist__15374);
arglist__15374 = cljs.core.next(arglist__15374);
var d = cljs.core.first(arglist__15374);
var args = cljs.core.rest(arglist__15374);
return G__15372__delegate(f,a,b,c,d,args);
});
G__15372.cljs$core$IFn$_invoke$arity$variadic = G__15372__delegate;
return G__15372;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__15375 = null;
if (arguments.length > 5) {
var G__15376__i = 0, G__15376__a = new Array(arguments.length -  5);
while (G__15376__i < G__15376__a.length) {G__15376__a[G__15376__i] = arguments[G__15376__i + 5]; ++G__15376__i;}
G__15375 = new cljs.core.IndexedSeq(G__15376__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__15375);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__15392 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15392) : f.call(null,G__15392));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__15393 = cljs.core.meta(obj);
var G__15394 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15393,G__15394) : f.call(null,G__15393,G__15394));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__15395 = cljs.core.meta(obj);
var G__15396 = a;
var G__15397 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15395,G__15396,G__15397) : f.call(null,G__15395,G__15396,G__15397));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__15398 = cljs.core.meta(obj);
var G__15399 = a;
var G__15400 = b;
var G__15401 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15398,G__15399,G__15400,G__15401) : f.call(null,G__15398,G__15399,G__15400,G__15401));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__15402 = cljs.core.meta(obj);
var G__15403 = a;
var G__15404 = b;
var G__15405 = c;
var G__15406 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15402,G__15403,G__15404,G__15405,G__15406) : f.call(null,G__15402,G__15403,G__15404,G__15405,G__15406));
})());
});
var vary_meta__7 = (function() { 
var G__15407__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__15407 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__15408__i = 0, G__15408__a = new Array(arguments.length -  6);
while (G__15408__i < G__15408__a.length) {G__15408__a[G__15408__i] = arguments[G__15408__i + 6]; ++G__15408__i;}
  args = new cljs.core.IndexedSeq(G__15408__a,0);
} 
return G__15407__delegate.call(this,obj,f,a,b,c,d,args);};
G__15407.cljs$lang$maxFixedArity = 6;
G__15407.cljs$lang$applyTo = (function (arglist__15409){
var obj = cljs.core.first(arglist__15409);
arglist__15409 = cljs.core.next(arglist__15409);
var f = cljs.core.first(arglist__15409);
arglist__15409 = cljs.core.next(arglist__15409);
var a = cljs.core.first(arglist__15409);
arglist__15409 = cljs.core.next(arglist__15409);
var b = cljs.core.first(arglist__15409);
arglist__15409 = cljs.core.next(arglist__15409);
var c = cljs.core.first(arglist__15409);
arglist__15409 = cljs.core.next(arglist__15409);
var d = cljs.core.first(arglist__15409);
var args = cljs.core.rest(arglist__15409);
return G__15407__delegate(obj,f,a,b,c,d,args);
});
G__15407.cljs$core$IFn$_invoke$arity$variadic = G__15407__delegate;
return G__15407;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__15410 = null;
if (arguments.length > 6) {
var G__15411__i = 0, G__15411__a = new Array(arguments.length -  6);
while (G__15411__i < G__15411__a.length) {G__15411__a[G__15411__i] = arguments[G__15411__i + 6]; ++G__15411__i;}
G__15410 = new cljs.core.IndexedSeq(G__15411__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__15410);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__15412__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__15412 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__15413__i = 0, G__15413__a = new Array(arguments.length -  2);
while (G__15413__i < G__15413__a.length) {G__15413__a[G__15413__i] = arguments[G__15413__i + 2]; ++G__15413__i;}
  more = new cljs.core.IndexedSeq(G__15413__a,0);
} 
return G__15412__delegate.call(this,x,y,more);};
G__15412.cljs$lang$maxFixedArity = 2;
G__15412.cljs$lang$applyTo = (function (arglist__15414){
var x = cljs.core.first(arglist__15414);
arglist__15414 = cljs.core.next(arglist__15414);
var y = cljs.core.first(arglist__15414);
var more = cljs.core.rest(arglist__15414);
return G__15412__delegate(x,y,more);
});
G__15412.cljs$core$IFn$_invoke$arity$variadic = G__15412__delegate;
return G__15412;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__15415 = null;
if (arguments.length > 2) {
var G__15416__i = 0, G__15416__a = new Array(arguments.length -  2);
while (G__15416__i < G__15416__a.length) {G__15416__a[G__15416__i] = arguments[G__15416__i + 2]; ++G__15416__i;}
G__15415 = new cljs.core.IndexedSeq(G__15416__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__15415);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t15420 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t15420 = (function (nil_iter,meta15421){
this.nil_iter = nil_iter;
this.meta15421 = meta15421;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t15420.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t15420.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t15420.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t15420.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_15422){
var self__ = this;
var _15422__$1 = this;
return self__.meta15421;
});

cljs.core.t15420.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_15422,meta15421__$1){
var self__ = this;
var _15422__$1 = this;
return (new cljs.core.t15420(self__.nil_iter,meta15421__$1));
});

cljs.core.t15420.cljs$lang$type = true;

cljs.core.t15420.cljs$lang$ctorStr = "cljs.core/t15420";

cljs.core.t15420.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/t15420");
});

cljs.core.__GT_t15420 = (function __GT_t15420(nil_iter__$1,meta15421){
return (new cljs.core.t15420(nil_iter__$1,meta15421));
});

}

return (new cljs.core.t15420(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),2998,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),2994,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/odinholestandal/git/odin/canvas-fn/resources/public/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__11617__auto__ = !((lt.stepper == null));
if(and__11617__auto__){
return self__.iter.hasNext();
} else {
return and__11617__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__15423 = lt;
var G__15424 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__15423,G__15424) : self__.xform.call(null,G__15423,G__15424));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__15425 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__15425) : self__.xform.call(null,G__15425));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__15427 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__15427) : xform.call(null,G__15427));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__15429 = cljs.core.next(iters__$1);
iters__$1 = G__15429;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__12516__auto___15430 = self__.iters.length;
var i_15431 = (0);
while(true){
if((i_15431 < n__12516__auto___15430)){
(self__.nexts[i_15431] = (self__.iters[i_15431]).next());

var G__15432 = (i_15431 + (1));
i_15431 = G__15432;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__11617__auto__ = !((lt.stepper == null));
if(and__11617__auto__){
return this$.hasNext();
} else {
return and__11617__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__15428 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__15428) : self__.xform.call(null,G__15428));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__15437 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__15437) : xform.call(null,G__15437));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__15438_15442 = cljs.core.seq(colls);
var chunk__15439_15443 = null;
var count__15440_15444 = (0);
var i__15441_15445 = (0);
while(true){
if((i__15441_15445 < count__15440_15444)){
var coll_15446 = chunk__15439_15443.cljs$core$IIndexed$_nth$arity$2(null,i__15441_15445);
iters.push(cljs.core.iter(coll_15446));

var G__15447 = seq__15438_15442;
var G__15448 = chunk__15439_15443;
var G__15449 = count__15440_15444;
var G__15450 = (i__15441_15445 + (1));
seq__15438_15442 = G__15447;
chunk__15439_15443 = G__15448;
count__15440_15444 = G__15449;
i__15441_15445 = G__15450;
continue;
} else {
var temp__4126__auto___15451 = cljs.core.seq(seq__15438_15442);
if(temp__4126__auto___15451){
var seq__15438_15452__$1 = temp__4126__auto___15451;
if(cljs.core.chunked_seq_QMARK_(seq__15438_15452__$1)){
var c__12416__auto___15453 = cljs.core.chunk_first(seq__15438_15452__$1);
var G__15454 = cljs.core.chunk_rest(seq__15438_15452__$1);
var G__15455 = c__12416__auto___15453;
var G__15456 = cljs.core.count(c__12416__auto___15453);
var G__15457 = (0);
seq__15438_15442 = G__15454;
chunk__15439_15443 = G__15455;
count__15440_15444 = G__15456;
i__15441_15445 = G__15457;
continue;
} else {
var coll_15458 = cljs.core.first(seq__15438_15452__$1);
iters.push(cljs.core.iter(coll_15458));

var G__15459 = cljs.core.next(seq__15438_15452__$1);
var G__15460 = null;
var G__15461 = (0);
var G__15462 = (0);
seq__15438_15442 = G__15459;
chunk__15439_15443 = G__15460;
count__15440_15444 = G__15461;
i__15441_15445 = G__15462;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__11629__auto__ = cljs.core.seq(coll);
if(or__11629__auto__){
return or__11629__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__15463__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__15463 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__15464__i = 0, G__15464__a = new Array(arguments.length -  2);
while (G__15464__i < G__15464__a.length) {G__15464__a[G__15464__i] = arguments[G__15464__i + 2]; ++G__15464__i;}
  colls = new cljs.core.IndexedSeq(G__15464__a,0);
} 
return G__15463__delegate.call(this,xform,coll,colls);};
G__15463.cljs$lang$maxFixedArity = 2;
G__15463.cljs$lang$applyTo = (function (arglist__15465){
var xform = cljs.core.first(arglist__15465);
arglist__15465 = cljs.core.next(arglist__15465);
var coll = cljs.core.first(arglist__15465);
var colls = cljs.core.rest(arglist__15465);
return G__15463__delegate(xform,coll,colls);
});
G__15463.cljs$core$IFn$_invoke$arity$variadic = G__15463__delegate;
return G__15463;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__15466 = null;
if (arguments.length > 2) {
var G__15467__i = 0, G__15467__a = new Array(arguments.length -  2);
while (G__15467__i < G__15467__a.length) {G__15467__a[G__15467__i] = arguments[G__15467__i + 2]; ++G__15467__i;}
G__15466 = new cljs.core.IndexedSeq(G__15467__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__15466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__15469 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15469) : pred.call(null,G__15469));
})())){
var G__15470 = pred;
var G__15471 = cljs.core.next(coll);
pred = G__15470;
coll = G__15471;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__11629__auto__ = (function (){var G__15475 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15475) : pred.call(null,G__15475));
})();
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
var G__15476 = pred;
var G__15477 = cljs.core.next(coll);
pred = G__15476;
coll = G__15477;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__15484 = null;
var G__15484__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__15484__1 = (function (x){
return cljs.core.not((function (){var G__15481 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15481) : f.call(null,G__15481));
})());
});
var G__15484__2 = (function (x,y){
return cljs.core.not((function (){var G__15482 = x;
var G__15483 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15482,G__15483) : f.call(null,G__15482,G__15483));
})());
});
var G__15484__3 = (function() { 
var G__15485__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__15485 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__15486__i = 0, G__15486__a = new Array(arguments.length -  2);
while (G__15486__i < G__15486__a.length) {G__15486__a[G__15486__i] = arguments[G__15486__i + 2]; ++G__15486__i;}
  zs = new cljs.core.IndexedSeq(G__15486__a,0);
} 
return G__15485__delegate.call(this,x,y,zs);};
G__15485.cljs$lang$maxFixedArity = 2;
G__15485.cljs$lang$applyTo = (function (arglist__15487){
var x = cljs.core.first(arglist__15487);
arglist__15487 = cljs.core.next(arglist__15487);
var y = cljs.core.first(arglist__15487);
var zs = cljs.core.rest(arglist__15487);
return G__15485__delegate(x,y,zs);
});
G__15485.cljs$core$IFn$_invoke$arity$variadic = G__15485__delegate;
return G__15485;
})()
;
G__15484 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__15484__0.call(this);
case 1:
return G__15484__1.call(this,x);
case 2:
return G__15484__2.call(this,x,y);
default:
var G__15488 = null;
if (arguments.length > 2) {
var G__15489__i = 0, G__15489__a = new Array(arguments.length -  2);
while (G__15489__i < G__15489__a.length) {G__15489__a[G__15489__i] = arguments[G__15489__i + 2]; ++G__15489__i;}
G__15488 = new cljs.core.IndexedSeq(G__15489__a,0);
}
return G__15484__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__15488);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15484.cljs$lang$maxFixedArity = 2;
G__15484.cljs$lang$applyTo = G__15484__3.cljs$lang$applyTo;
G__15484.cljs$core$IFn$_invoke$arity$0 = G__15484__0;
G__15484.cljs$core$IFn$_invoke$arity$1 = G__15484__1;
G__15484.cljs$core$IFn$_invoke$arity$2 = G__15484__2;
G__15484.cljs$core$IFn$_invoke$arity$variadic = G__15484__3.cljs$core$IFn$_invoke$arity$variadic;
return G__15484;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__15490__delegate = function (args){
return x;
};
var G__15490 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15491__i = 0, G__15491__a = new Array(arguments.length -  0);
while (G__15491__i < G__15491__a.length) {G__15491__a[G__15491__i] = arguments[G__15491__i + 0]; ++G__15491__i;}
  args = new cljs.core.IndexedSeq(G__15491__a,0);
} 
return G__15490__delegate.call(this,args);};
G__15490.cljs$lang$maxFixedArity = 0;
G__15490.cljs$lang$applyTo = (function (arglist__15492){
var args = cljs.core.seq(arglist__15492);
return G__15490__delegate(args);
});
G__15490.cljs$core$IFn$_invoke$arity$variadic = G__15490__delegate;
return G__15490;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__15547 = null;
var G__15547__0 = (function (){
var G__15520 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15520) : f.call(null,G__15520));
});
var G__15547__1 = (function (x){
var G__15521 = (function (){var G__15522 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15522) : g.call(null,G__15522));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15521) : f.call(null,G__15521));
});
var G__15547__2 = (function (x,y){
var G__15523 = (function (){var G__15524 = x;
var G__15525 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15524,G__15525) : g.call(null,G__15524,G__15525));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15523) : f.call(null,G__15523));
});
var G__15547__3 = (function (x,y,z){
var G__15526 = (function (){var G__15527 = x;
var G__15528 = y;
var G__15529 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15527,G__15528,G__15529) : g.call(null,G__15527,G__15528,G__15529));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15526) : f.call(null,G__15526));
});
var G__15547__4 = (function() { 
var G__15548__delegate = function (x,y,z,args){
var G__15530 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15530) : f.call(null,G__15530));
};
var G__15548 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15549__i = 0, G__15549__a = new Array(arguments.length -  3);
while (G__15549__i < G__15549__a.length) {G__15549__a[G__15549__i] = arguments[G__15549__i + 3]; ++G__15549__i;}
  args = new cljs.core.IndexedSeq(G__15549__a,0);
} 
return G__15548__delegate.call(this,x,y,z,args);};
G__15548.cljs$lang$maxFixedArity = 3;
G__15548.cljs$lang$applyTo = (function (arglist__15550){
var x = cljs.core.first(arglist__15550);
arglist__15550 = cljs.core.next(arglist__15550);
var y = cljs.core.first(arglist__15550);
arglist__15550 = cljs.core.next(arglist__15550);
var z = cljs.core.first(arglist__15550);
var args = cljs.core.rest(arglist__15550);
return G__15548__delegate(x,y,z,args);
});
G__15548.cljs$core$IFn$_invoke$arity$variadic = G__15548__delegate;
return G__15548;
})()
;
G__15547 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15547__0.call(this);
case 1:
return G__15547__1.call(this,x);
case 2:
return G__15547__2.call(this,x,y);
case 3:
return G__15547__3.call(this,x,y,z);
default:
var G__15551 = null;
if (arguments.length > 3) {
var G__15552__i = 0, G__15552__a = new Array(arguments.length -  3);
while (G__15552__i < G__15552__a.length) {G__15552__a[G__15552__i] = arguments[G__15552__i + 3]; ++G__15552__i;}
G__15551 = new cljs.core.IndexedSeq(G__15552__a,0);
}
return G__15547__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15551);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15547.cljs$lang$maxFixedArity = 3;
G__15547.cljs$lang$applyTo = G__15547__4.cljs$lang$applyTo;
G__15547.cljs$core$IFn$_invoke$arity$0 = G__15547__0;
G__15547.cljs$core$IFn$_invoke$arity$1 = G__15547__1;
G__15547.cljs$core$IFn$_invoke$arity$2 = G__15547__2;
G__15547.cljs$core$IFn$_invoke$arity$3 = G__15547__3;
G__15547.cljs$core$IFn$_invoke$arity$variadic = G__15547__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15547;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__15553 = null;
var G__15553__0 = (function (){
var G__15531 = (function (){var G__15532 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15532) : g.call(null,G__15532));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15531) : f.call(null,G__15531));
});
var G__15553__1 = (function (x){
var G__15533 = (function (){var G__15534 = (function (){var G__15535 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15535) : h.call(null,G__15535));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15534) : g.call(null,G__15534));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15533) : f.call(null,G__15533));
});
var G__15553__2 = (function (x,y){
var G__15536 = (function (){var G__15537 = (function (){var G__15538 = x;
var G__15539 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15538,G__15539) : h.call(null,G__15538,G__15539));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15537) : g.call(null,G__15537));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15536) : f.call(null,G__15536));
});
var G__15553__3 = (function (x,y,z){
var G__15540 = (function (){var G__15541 = (function (){var G__15542 = x;
var G__15543 = y;
var G__15544 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15542,G__15543,G__15544) : h.call(null,G__15542,G__15543,G__15544));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15541) : g.call(null,G__15541));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15540) : f.call(null,G__15540));
});
var G__15553__4 = (function() { 
var G__15554__delegate = function (x,y,z,args){
var G__15545 = (function (){var G__15546 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15546) : g.call(null,G__15546));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15545) : f.call(null,G__15545));
};
var G__15554 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15555__i = 0, G__15555__a = new Array(arguments.length -  3);
while (G__15555__i < G__15555__a.length) {G__15555__a[G__15555__i] = arguments[G__15555__i + 3]; ++G__15555__i;}
  args = new cljs.core.IndexedSeq(G__15555__a,0);
} 
return G__15554__delegate.call(this,x,y,z,args);};
G__15554.cljs$lang$maxFixedArity = 3;
G__15554.cljs$lang$applyTo = (function (arglist__15556){
var x = cljs.core.first(arglist__15556);
arglist__15556 = cljs.core.next(arglist__15556);
var y = cljs.core.first(arglist__15556);
arglist__15556 = cljs.core.next(arglist__15556);
var z = cljs.core.first(arglist__15556);
var args = cljs.core.rest(arglist__15556);
return G__15554__delegate(x,y,z,args);
});
G__15554.cljs$core$IFn$_invoke$arity$variadic = G__15554__delegate;
return G__15554;
})()
;
G__15553 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15553__0.call(this);
case 1:
return G__15553__1.call(this,x);
case 2:
return G__15553__2.call(this,x,y);
case 3:
return G__15553__3.call(this,x,y,z);
default:
var G__15557 = null;
if (arguments.length > 3) {
var G__15558__i = 0, G__15558__a = new Array(arguments.length -  3);
while (G__15558__i < G__15558__a.length) {G__15558__a[G__15558__i] = arguments[G__15558__i + 3]; ++G__15558__i;}
G__15557 = new cljs.core.IndexedSeq(G__15558__a,0);
}
return G__15553__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15557);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15553.cljs$lang$maxFixedArity = 3;
G__15553.cljs$lang$applyTo = G__15553__4.cljs$lang$applyTo;
G__15553.cljs$core$IFn$_invoke$arity$0 = G__15553__0;
G__15553.cljs$core$IFn$_invoke$arity$1 = G__15553__1;
G__15553.cljs$core$IFn$_invoke$arity$2 = G__15553__2;
G__15553.cljs$core$IFn$_invoke$arity$3 = G__15553__3;
G__15553.cljs$core$IFn$_invoke$arity$variadic = G__15553__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15553;
})()
});
var comp__4 = (function() { 
var G__15559__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__15560__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__15561 = cljs.core.first(fs__$2).call(null,ret);
var G__15562 = cljs.core.next(fs__$2);
ret = G__15561;
fs__$2 = G__15562;
continue;
} else {
return ret;
}
break;
}
};
var G__15560 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15563__i = 0, G__15563__a = new Array(arguments.length -  0);
while (G__15563__i < G__15563__a.length) {G__15563__a[G__15563__i] = arguments[G__15563__i + 0]; ++G__15563__i;}
  args = new cljs.core.IndexedSeq(G__15563__a,0);
} 
return G__15560__delegate.call(this,args);};
G__15560.cljs$lang$maxFixedArity = 0;
G__15560.cljs$lang$applyTo = (function (arglist__15564){
var args = cljs.core.seq(arglist__15564);
return G__15560__delegate(args);
});
G__15560.cljs$core$IFn$_invoke$arity$variadic = G__15560__delegate;
return G__15560;
})()
;
;})(fs__$1))
};
var G__15559 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__15565__i = 0, G__15565__a = new Array(arguments.length -  3);
while (G__15565__i < G__15565__a.length) {G__15565__a[G__15565__i] = arguments[G__15565__i + 3]; ++G__15565__i;}
  fs = new cljs.core.IndexedSeq(G__15565__a,0);
} 
return G__15559__delegate.call(this,f1,f2,f3,fs);};
G__15559.cljs$lang$maxFixedArity = 3;
G__15559.cljs$lang$applyTo = (function (arglist__15566){
var f1 = cljs.core.first(arglist__15566);
arglist__15566 = cljs.core.next(arglist__15566);
var f2 = cljs.core.first(arglist__15566);
arglist__15566 = cljs.core.next(arglist__15566);
var f3 = cljs.core.first(arglist__15566);
var fs = cljs.core.rest(arglist__15566);
return G__15559__delegate(f1,f2,f3,fs);
});
G__15559.cljs$core$IFn$_invoke$arity$variadic = G__15559__delegate;
return G__15559;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__15567 = null;
if (arguments.length > 3) {
var G__15568__i = 0, G__15568__a = new Array(arguments.length -  3);
while (G__15568__i < G__15568__a.length) {G__15568__a[G__15568__i] = arguments[G__15568__i + 3]; ++G__15568__i;}
G__15567 = new cljs.core.IndexedSeq(G__15568__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__15567);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__15653 = null;
var G__15653__0 = (function (){
var G__15611 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15611) : f.call(null,G__15611));
});
var G__15653__1 = (function (x){
var G__15612 = arg1;
var G__15613 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15612,G__15613) : f.call(null,G__15612,G__15613));
});
var G__15653__2 = (function (x,y){
var G__15614 = arg1;
var G__15615 = x;
var G__15616 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15614,G__15615,G__15616) : f.call(null,G__15614,G__15615,G__15616));
});
var G__15653__3 = (function (x,y,z){
var G__15617 = arg1;
var G__15618 = x;
var G__15619 = y;
var G__15620 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15617,G__15618,G__15619,G__15620) : f.call(null,G__15617,G__15618,G__15619,G__15620));
});
var G__15653__4 = (function() { 
var G__15654__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__15654 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15655__i = 0, G__15655__a = new Array(arguments.length -  3);
while (G__15655__i < G__15655__a.length) {G__15655__a[G__15655__i] = arguments[G__15655__i + 3]; ++G__15655__i;}
  args = new cljs.core.IndexedSeq(G__15655__a,0);
} 
return G__15654__delegate.call(this,x,y,z,args);};
G__15654.cljs$lang$maxFixedArity = 3;
G__15654.cljs$lang$applyTo = (function (arglist__15656){
var x = cljs.core.first(arglist__15656);
arglist__15656 = cljs.core.next(arglist__15656);
var y = cljs.core.first(arglist__15656);
arglist__15656 = cljs.core.next(arglist__15656);
var z = cljs.core.first(arglist__15656);
var args = cljs.core.rest(arglist__15656);
return G__15654__delegate(x,y,z,args);
});
G__15654.cljs$core$IFn$_invoke$arity$variadic = G__15654__delegate;
return G__15654;
})()
;
G__15653 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15653__0.call(this);
case 1:
return G__15653__1.call(this,x);
case 2:
return G__15653__2.call(this,x,y);
case 3:
return G__15653__3.call(this,x,y,z);
default:
var G__15657 = null;
if (arguments.length > 3) {
var G__15658__i = 0, G__15658__a = new Array(arguments.length -  3);
while (G__15658__i < G__15658__a.length) {G__15658__a[G__15658__i] = arguments[G__15658__i + 3]; ++G__15658__i;}
G__15657 = new cljs.core.IndexedSeq(G__15658__a,0);
}
return G__15653__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15657);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15653.cljs$lang$maxFixedArity = 3;
G__15653.cljs$lang$applyTo = G__15653__4.cljs$lang$applyTo;
G__15653.cljs$core$IFn$_invoke$arity$0 = G__15653__0;
G__15653.cljs$core$IFn$_invoke$arity$1 = G__15653__1;
G__15653.cljs$core$IFn$_invoke$arity$2 = G__15653__2;
G__15653.cljs$core$IFn$_invoke$arity$3 = G__15653__3;
G__15653.cljs$core$IFn$_invoke$arity$variadic = G__15653__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15653;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__15659 = null;
var G__15659__0 = (function (){
var G__15621 = arg1;
var G__15622 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15621,G__15622) : f.call(null,G__15621,G__15622));
});
var G__15659__1 = (function (x){
var G__15623 = arg1;
var G__15624 = arg2;
var G__15625 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15623,G__15624,G__15625) : f.call(null,G__15623,G__15624,G__15625));
});
var G__15659__2 = (function (x,y){
var G__15626 = arg1;
var G__15627 = arg2;
var G__15628 = x;
var G__15629 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15626,G__15627,G__15628,G__15629) : f.call(null,G__15626,G__15627,G__15628,G__15629));
});
var G__15659__3 = (function (x,y,z){
var G__15630 = arg1;
var G__15631 = arg2;
var G__15632 = x;
var G__15633 = y;
var G__15634 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15630,G__15631,G__15632,G__15633,G__15634) : f.call(null,G__15630,G__15631,G__15632,G__15633,G__15634));
});
var G__15659__4 = (function() { 
var G__15660__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__15660 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15661__i = 0, G__15661__a = new Array(arguments.length -  3);
while (G__15661__i < G__15661__a.length) {G__15661__a[G__15661__i] = arguments[G__15661__i + 3]; ++G__15661__i;}
  args = new cljs.core.IndexedSeq(G__15661__a,0);
} 
return G__15660__delegate.call(this,x,y,z,args);};
G__15660.cljs$lang$maxFixedArity = 3;
G__15660.cljs$lang$applyTo = (function (arglist__15662){
var x = cljs.core.first(arglist__15662);
arglist__15662 = cljs.core.next(arglist__15662);
var y = cljs.core.first(arglist__15662);
arglist__15662 = cljs.core.next(arglist__15662);
var z = cljs.core.first(arglist__15662);
var args = cljs.core.rest(arglist__15662);
return G__15660__delegate(x,y,z,args);
});
G__15660.cljs$core$IFn$_invoke$arity$variadic = G__15660__delegate;
return G__15660;
})()
;
G__15659 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15659__0.call(this);
case 1:
return G__15659__1.call(this,x);
case 2:
return G__15659__2.call(this,x,y);
case 3:
return G__15659__3.call(this,x,y,z);
default:
var G__15663 = null;
if (arguments.length > 3) {
var G__15664__i = 0, G__15664__a = new Array(arguments.length -  3);
while (G__15664__i < G__15664__a.length) {G__15664__a[G__15664__i] = arguments[G__15664__i + 3]; ++G__15664__i;}
G__15663 = new cljs.core.IndexedSeq(G__15664__a,0);
}
return G__15659__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15659.cljs$lang$maxFixedArity = 3;
G__15659.cljs$lang$applyTo = G__15659__4.cljs$lang$applyTo;
G__15659.cljs$core$IFn$_invoke$arity$0 = G__15659__0;
G__15659.cljs$core$IFn$_invoke$arity$1 = G__15659__1;
G__15659.cljs$core$IFn$_invoke$arity$2 = G__15659__2;
G__15659.cljs$core$IFn$_invoke$arity$3 = G__15659__3;
G__15659.cljs$core$IFn$_invoke$arity$variadic = G__15659__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15659;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__15665 = null;
var G__15665__0 = (function (){
var G__15635 = arg1;
var G__15636 = arg2;
var G__15637 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15635,G__15636,G__15637) : f.call(null,G__15635,G__15636,G__15637));
});
var G__15665__1 = (function (x){
var G__15638 = arg1;
var G__15639 = arg2;
var G__15640 = arg3;
var G__15641 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15638,G__15639,G__15640,G__15641) : f.call(null,G__15638,G__15639,G__15640,G__15641));
});
var G__15665__2 = (function (x,y){
var G__15642 = arg1;
var G__15643 = arg2;
var G__15644 = arg3;
var G__15645 = x;
var G__15646 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15642,G__15643,G__15644,G__15645,G__15646) : f.call(null,G__15642,G__15643,G__15644,G__15645,G__15646));
});
var G__15665__3 = (function (x,y,z){
var G__15647 = arg1;
var G__15648 = arg2;
var G__15649 = arg3;
var G__15650 = x;
var G__15651 = y;
var G__15652 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__15647,G__15648,G__15649,G__15650,G__15651,G__15652) : f.call(null,G__15647,G__15648,G__15649,G__15650,G__15651,G__15652));
});
var G__15665__4 = (function() { 
var G__15666__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__15666 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15667__i = 0, G__15667__a = new Array(arguments.length -  3);
while (G__15667__i < G__15667__a.length) {G__15667__a[G__15667__i] = arguments[G__15667__i + 3]; ++G__15667__i;}
  args = new cljs.core.IndexedSeq(G__15667__a,0);
} 
return G__15666__delegate.call(this,x,y,z,args);};
G__15666.cljs$lang$maxFixedArity = 3;
G__15666.cljs$lang$applyTo = (function (arglist__15668){
var x = cljs.core.first(arglist__15668);
arglist__15668 = cljs.core.next(arglist__15668);
var y = cljs.core.first(arglist__15668);
arglist__15668 = cljs.core.next(arglist__15668);
var z = cljs.core.first(arglist__15668);
var args = cljs.core.rest(arglist__15668);
return G__15666__delegate(x,y,z,args);
});
G__15666.cljs$core$IFn$_invoke$arity$variadic = G__15666__delegate;
return G__15666;
})()
;
G__15665 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15665__0.call(this);
case 1:
return G__15665__1.call(this,x);
case 2:
return G__15665__2.call(this,x,y);
case 3:
return G__15665__3.call(this,x,y,z);
default:
var G__15669 = null;
if (arguments.length > 3) {
var G__15670__i = 0, G__15670__a = new Array(arguments.length -  3);
while (G__15670__i < G__15670__a.length) {G__15670__a[G__15670__i] = arguments[G__15670__i + 3]; ++G__15670__i;}
G__15669 = new cljs.core.IndexedSeq(G__15670__a,0);
}
return G__15665__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15669);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15665.cljs$lang$maxFixedArity = 3;
G__15665.cljs$lang$applyTo = G__15665__4.cljs$lang$applyTo;
G__15665.cljs$core$IFn$_invoke$arity$0 = G__15665__0;
G__15665.cljs$core$IFn$_invoke$arity$1 = G__15665__1;
G__15665.cljs$core$IFn$_invoke$arity$2 = G__15665__2;
G__15665.cljs$core$IFn$_invoke$arity$3 = G__15665__3;
G__15665.cljs$core$IFn$_invoke$arity$variadic = G__15665__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15665;
})()
});
var partial__5 = (function() { 
var G__15671__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__15672__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__15672 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15673__i = 0, G__15673__a = new Array(arguments.length -  0);
while (G__15673__i < G__15673__a.length) {G__15673__a[G__15673__i] = arguments[G__15673__i + 0]; ++G__15673__i;}
  args = new cljs.core.IndexedSeq(G__15673__a,0);
} 
return G__15672__delegate.call(this,args);};
G__15672.cljs$lang$maxFixedArity = 0;
G__15672.cljs$lang$applyTo = (function (arglist__15674){
var args = cljs.core.seq(arglist__15674);
return G__15672__delegate(args);
});
G__15672.cljs$core$IFn$_invoke$arity$variadic = G__15672__delegate;
return G__15672;
})()
;
};
var G__15671 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__15675__i = 0, G__15675__a = new Array(arguments.length -  4);
while (G__15675__i < G__15675__a.length) {G__15675__a[G__15675__i] = arguments[G__15675__i + 4]; ++G__15675__i;}
  more = new cljs.core.IndexedSeq(G__15675__a,0);
} 
return G__15671__delegate.call(this,f,arg1,arg2,arg3,more);};
G__15671.cljs$lang$maxFixedArity = 4;
G__15671.cljs$lang$applyTo = (function (arglist__15676){
var f = cljs.core.first(arglist__15676);
arglist__15676 = cljs.core.next(arglist__15676);
var arg1 = cljs.core.first(arglist__15676);
arglist__15676 = cljs.core.next(arglist__15676);
var arg2 = cljs.core.first(arglist__15676);
arglist__15676 = cljs.core.next(arglist__15676);
var arg3 = cljs.core.first(arglist__15676);
var more = cljs.core.rest(arglist__15676);
return G__15671__delegate(f,arg1,arg2,arg3,more);
});
G__15671.cljs$core$IFn$_invoke$arity$variadic = G__15671__delegate;
return G__15671;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__15677 = null;
if (arguments.length > 4) {
var G__15678__i = 0, G__15678__a = new Array(arguments.length -  4);
while (G__15678__i < G__15678__a.length) {G__15678__a[G__15678__i] = arguments[G__15678__i + 4]; ++G__15678__i;}
G__15677 = new cljs.core.IndexedSeq(G__15678__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__15677);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__15711 = null;
var G__15711__1 = (function (a){
var G__15695 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15695) : f.call(null,G__15695));
});
var G__15711__2 = (function (a,b){
var G__15696 = (((a == null))?x:a);
var G__15697 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15696,G__15697) : f.call(null,G__15696,G__15697));
});
var G__15711__3 = (function (a,b,c){
var G__15698 = (((a == null))?x:a);
var G__15699 = b;
var G__15700 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15698,G__15699,G__15700) : f.call(null,G__15698,G__15699,G__15700));
});
var G__15711__4 = (function() { 
var G__15712__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__15712 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__15713__i = 0, G__15713__a = new Array(arguments.length -  3);
while (G__15713__i < G__15713__a.length) {G__15713__a[G__15713__i] = arguments[G__15713__i + 3]; ++G__15713__i;}
  ds = new cljs.core.IndexedSeq(G__15713__a,0);
} 
return G__15712__delegate.call(this,a,b,c,ds);};
G__15712.cljs$lang$maxFixedArity = 3;
G__15712.cljs$lang$applyTo = (function (arglist__15714){
var a = cljs.core.first(arglist__15714);
arglist__15714 = cljs.core.next(arglist__15714);
var b = cljs.core.first(arglist__15714);
arglist__15714 = cljs.core.next(arglist__15714);
var c = cljs.core.first(arglist__15714);
var ds = cljs.core.rest(arglist__15714);
return G__15712__delegate(a,b,c,ds);
});
G__15712.cljs$core$IFn$_invoke$arity$variadic = G__15712__delegate;
return G__15712;
})()
;
G__15711 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__15711__1.call(this,a);
case 2:
return G__15711__2.call(this,a,b);
case 3:
return G__15711__3.call(this,a,b,c);
default:
var G__15715 = null;
if (arguments.length > 3) {
var G__15716__i = 0, G__15716__a = new Array(arguments.length -  3);
while (G__15716__i < G__15716__a.length) {G__15716__a[G__15716__i] = arguments[G__15716__i + 3]; ++G__15716__i;}
G__15715 = new cljs.core.IndexedSeq(G__15716__a,0);
}
return G__15711__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__15715);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15711.cljs$lang$maxFixedArity = 3;
G__15711.cljs$lang$applyTo = G__15711__4.cljs$lang$applyTo;
G__15711.cljs$core$IFn$_invoke$arity$1 = G__15711__1;
G__15711.cljs$core$IFn$_invoke$arity$2 = G__15711__2;
G__15711.cljs$core$IFn$_invoke$arity$3 = G__15711__3;
G__15711.cljs$core$IFn$_invoke$arity$variadic = G__15711__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15711;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__15717 = null;
var G__15717__2 = (function (a,b){
var G__15701 = (((a == null))?x:a);
var G__15702 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15701,G__15702) : f.call(null,G__15701,G__15702));
});
var G__15717__3 = (function (a,b,c){
var G__15703 = (((a == null))?x:a);
var G__15704 = (((b == null))?y:b);
var G__15705 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15703,G__15704,G__15705) : f.call(null,G__15703,G__15704,G__15705));
});
var G__15717__4 = (function() { 
var G__15718__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__15718 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__15719__i = 0, G__15719__a = new Array(arguments.length -  3);
while (G__15719__i < G__15719__a.length) {G__15719__a[G__15719__i] = arguments[G__15719__i + 3]; ++G__15719__i;}
  ds = new cljs.core.IndexedSeq(G__15719__a,0);
} 
return G__15718__delegate.call(this,a,b,c,ds);};
G__15718.cljs$lang$maxFixedArity = 3;
G__15718.cljs$lang$applyTo = (function (arglist__15720){
var a = cljs.core.first(arglist__15720);
arglist__15720 = cljs.core.next(arglist__15720);
var b = cljs.core.first(arglist__15720);
arglist__15720 = cljs.core.next(arglist__15720);
var c = cljs.core.first(arglist__15720);
var ds = cljs.core.rest(arglist__15720);
return G__15718__delegate(a,b,c,ds);
});
G__15718.cljs$core$IFn$_invoke$arity$variadic = G__15718__delegate;
return G__15718;
})()
;
G__15717 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__15717__2.call(this,a,b);
case 3:
return G__15717__3.call(this,a,b,c);
default:
var G__15721 = null;
if (arguments.length > 3) {
var G__15722__i = 0, G__15722__a = new Array(arguments.length -  3);
while (G__15722__i < G__15722__a.length) {G__15722__a[G__15722__i] = arguments[G__15722__i + 3]; ++G__15722__i;}
G__15721 = new cljs.core.IndexedSeq(G__15722__a,0);
}
return G__15717__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__15721);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15717.cljs$lang$maxFixedArity = 3;
G__15717.cljs$lang$applyTo = G__15717__4.cljs$lang$applyTo;
G__15717.cljs$core$IFn$_invoke$arity$2 = G__15717__2;
G__15717.cljs$core$IFn$_invoke$arity$3 = G__15717__3;
G__15717.cljs$core$IFn$_invoke$arity$variadic = G__15717__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15717;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__15723 = null;
var G__15723__2 = (function (a,b){
var G__15706 = (((a == null))?x:a);
var G__15707 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15706,G__15707) : f.call(null,G__15706,G__15707));
});
var G__15723__3 = (function (a,b,c){
var G__15708 = (((a == null))?x:a);
var G__15709 = (((b == null))?y:b);
var G__15710 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15708,G__15709,G__15710) : f.call(null,G__15708,G__15709,G__15710));
});
var G__15723__4 = (function() { 
var G__15724__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__15724 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__15725__i = 0, G__15725__a = new Array(arguments.length -  3);
while (G__15725__i < G__15725__a.length) {G__15725__a[G__15725__i] = arguments[G__15725__i + 3]; ++G__15725__i;}
  ds = new cljs.core.IndexedSeq(G__15725__a,0);
} 
return G__15724__delegate.call(this,a,b,c,ds);};
G__15724.cljs$lang$maxFixedArity = 3;
G__15724.cljs$lang$applyTo = (function (arglist__15726){
var a = cljs.core.first(arglist__15726);
arglist__15726 = cljs.core.next(arglist__15726);
var b = cljs.core.first(arglist__15726);
arglist__15726 = cljs.core.next(arglist__15726);
var c = cljs.core.first(arglist__15726);
var ds = cljs.core.rest(arglist__15726);
return G__15724__delegate(a,b,c,ds);
});
G__15724.cljs$core$IFn$_invoke$arity$variadic = G__15724__delegate;
return G__15724;
})()
;
G__15723 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__15723__2.call(this,a,b);
case 3:
return G__15723__3.call(this,a,b,c);
default:
var G__15727 = null;
if (arguments.length > 3) {
var G__15728__i = 0, G__15728__a = new Array(arguments.length -  3);
while (G__15728__i < G__15728__a.length) {G__15728__a[G__15728__i] = arguments[G__15728__i + 3]; ++G__15728__i;}
G__15727 = new cljs.core.IndexedSeq(G__15728__a,0);
}
return G__15723__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__15727);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15723.cljs$lang$maxFixedArity = 3;
G__15723.cljs$lang$applyTo = G__15723__4.cljs$lang$applyTo;
G__15723.cljs$core$IFn$_invoke$arity$2 = G__15723__2;
G__15723.cljs$core$IFn$_invoke$arity$3 = G__15723__3;
G__15723.cljs$core$IFn$_invoke$arity$variadic = G__15723__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15723;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__12516__auto___15777 = size;
var i_15778 = (0);
while(true){
if((i_15778 < n__12516__auto___15777)){
cljs.core.chunk_append(b,(function (){var G__15773 = (idx + i_15778);
var G__15774 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15778);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15773,G__15774) : f.call(null,G__15773,G__15774));
})());

var G__15779 = (i_15778 + (1));
i_15778 = G__15779;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__15775 = idx;
var G__15776 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15775,G__15776) : f.call(null,G__15775,G__15776));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__15798 = null;
var G__15798__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15798__1 = (function (result){
var G__15792 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15792) : rf.call(null,G__15792));
});
var G__15798__2 = (function (result,input){
var v = (function (){var G__15793 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15793) : f.call(null,G__15793));
})();
if((v == null)){
return result;
} else {
var G__15794 = result;
var G__15795 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15794,G__15795) : rf.call(null,G__15794,G__15795));
}
});
G__15798 = function(result,input){
switch(arguments.length){
case 0:
return G__15798__0.call(this);
case 1:
return G__15798__1.call(this,result);
case 2:
return G__15798__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15798.cljs$core$IFn$_invoke$arity$0 = G__15798__0;
G__15798.cljs$core$IFn$_invoke$arity$1 = G__15798__1;
G__15798.cljs$core$IFn$_invoke$arity$2 = G__15798__2;
return G__15798;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__12516__auto___15799 = size;
var i_15800 = (0);
while(true){
if((i_15800 < n__12516__auto___15799)){
var x_15801 = (function (){var G__15796 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15800);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15796) : f.call(null,G__15796));
})();
if((x_15801 == null)){
} else {
cljs.core.chunk_append(b,x_15801);
}

var G__15802 = (i_15800 + (1));
i_15800 = G__15802;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__15797 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15797) : f.call(null,G__15797));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__15803 = this$__$1;
return goog.getUid(G__15803);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__15804 = cljs.core.seq(self__.watches);
var chunk__15805 = null;
var count__15806 = (0);
var i__15807 = (0);
while(true){
if((i__15807 < count__15806)){
var vec__15808 = chunk__15805.cljs$core$IIndexed$_nth$arity$2(null,i__15807);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15808,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15808,(1),null);
var G__15809_15818 = key;
var G__15810_15819 = this$__$1;
var G__15811_15820 = oldval;
var G__15812_15821 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15809_15818,G__15810_15819,G__15811_15820,G__15812_15821) : f.call(null,G__15809_15818,G__15810_15819,G__15811_15820,G__15812_15821));

var G__15822 = seq__15804;
var G__15823 = chunk__15805;
var G__15824 = count__15806;
var G__15825 = (i__15807 + (1));
seq__15804 = G__15822;
chunk__15805 = G__15823;
count__15806 = G__15824;
i__15807 = G__15825;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15804);
if(temp__4126__auto__){
var seq__15804__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15804__$1)){
var c__12416__auto__ = cljs.core.chunk_first(seq__15804__$1);
var G__15826 = cljs.core.chunk_rest(seq__15804__$1);
var G__15827 = c__12416__auto__;
var G__15828 = cljs.core.count(c__12416__auto__);
var G__15829 = (0);
seq__15804 = G__15826;
chunk__15805 = G__15827;
count__15806 = G__15828;
i__15807 = G__15829;
continue;
} else {
var vec__15813 = cljs.core.first(seq__15804__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15813,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15813,(1),null);
var G__15814_15830 = key;
var G__15815_15831 = this$__$1;
var G__15816_15832 = oldval;
var G__15817_15833 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15814_15830,G__15815_15831,G__15816_15832,G__15817_15833) : f.call(null,G__15814_15830,G__15815_15831,G__15816_15832,G__15817_15833));

var G__15834 = cljs.core.next(seq__15804__$1);
var G__15835 = null;
var G__15836 = (0);
var G__15837 = (0);
seq__15804 = G__15834;
chunk__15805 = G__15835;
count__15806 = G__15836;
i__15807 = G__15837;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__15841__delegate = function (x,p__15838){
var map__15840 = p__15838;
var map__15840__$1 = ((cljs.core.seq_QMARK_(map__15840))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15840):map__15840);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15840__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15840__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__15841 = function (x,var_args){
var p__15838 = null;
if (arguments.length > 1) {
var G__15842__i = 0, G__15842__a = new Array(arguments.length -  1);
while (G__15842__i < G__15842__a.length) {G__15842__a[G__15842__i] = arguments[G__15842__i + 1]; ++G__15842__i;}
  p__15838 = new cljs.core.IndexedSeq(G__15842__a,0);
} 
return G__15841__delegate.call(this,x,p__15838);};
G__15841.cljs$lang$maxFixedArity = 1;
G__15841.cljs$lang$applyTo = (function (arglist__15843){
var x = cljs.core.first(arglist__15843);
var p__15838 = cljs.core.rest(arglist__15843);
return G__15841__delegate(x,p__15838);
});
G__15841.cljs$core$IFn$_invoke$arity$variadic = G__15841__delegate;
return G__15841;
})()
;
atom = function(x,var_args){
var p__15838 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__15844 = null;
if (arguments.length > 1) {
var G__15845__i = 0, G__15845__a = new Array(arguments.length -  1);
while (G__15845__i < G__15845__a.length) {G__15845__a[G__15845__i] = arguments[G__15845__i + 1]; ++G__15845__i;}
G__15844 = new cljs.core.IndexedSeq(G__15845__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__15844);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__15848 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__15848) : validate.call(null,G__15848));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__15849 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__15849) : cljs.core.pr_str.call(null,G__15849));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15856 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15856) : f.call(null,G__15856));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15857 = a.state;
var G__15858 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15857,G__15858) : f.call(null,G__15857,G__15858));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15859 = a.state;
var G__15860 = x;
var G__15861 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15859,G__15860,G__15861) : f.call(null,G__15859,G__15860,G__15861));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__15862__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__15862 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__15863__i = 0, G__15863__a = new Array(arguments.length -  4);
while (G__15863__i < G__15863__a.length) {G__15863__a[G__15863__i] = arguments[G__15863__i + 4]; ++G__15863__i;}
  more = new cljs.core.IndexedSeq(G__15863__a,0);
} 
return G__15862__delegate.call(this,a,f,x,y,more);};
G__15862.cljs$lang$maxFixedArity = 4;
G__15862.cljs$lang$applyTo = (function (arglist__15864){
var a = cljs.core.first(arglist__15864);
arglist__15864 = cljs.core.next(arglist__15864);
var f = cljs.core.first(arglist__15864);
arglist__15864 = cljs.core.next(arglist__15864);
var x = cljs.core.first(arglist__15864);
arglist__15864 = cljs.core.next(arglist__15864);
var y = cljs.core.first(arglist__15864);
var more = cljs.core.rest(arglist__15864);
return G__15862__delegate(a,f,x,y,more);
});
G__15862.cljs$core$IFn$_invoke$arity$variadic = G__15862__delegate;
return G__15862;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__15865 = null;
if (arguments.length > 4) {
var G__15866__i = 0, G__15866__a = new Array(arguments.length -  4);
while (G__15866__i < G__15866__a.length) {G__15866__a[G__15866__i] = arguments[G__15866__i + 4]; ++G__15866__i;}
G__15865 = new cljs.core.IndexedSeq(G__15866__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__15865);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__15933 = null;
var G__15933__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15933__1 = (function (result){
var G__15900 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15900) : rf.call(null,G__15900));
});
var G__15933__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__15901 = i;
var G__15902 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15901,G__15902) : f.call(null,G__15901,G__15902));
})();
if((v == null)){
return result;
} else {
var G__15903 = result;
var G__15904 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15903,G__15904) : rf.call(null,G__15903,G__15904));
}
});
G__15933 = function(result,input){
switch(arguments.length){
case 0:
return G__15933__0.call(this);
case 1:
return G__15933__1.call(this,result);
case 2:
return G__15933__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15933.cljs$core$IFn$_invoke$arity$0 = G__15933__0;
G__15933.cljs$core$IFn$_invoke$arity$1 = G__15933__1;
G__15933.cljs$core$IFn$_invoke$arity$2 = G__15933__2;
return G__15933;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__12516__auto___15934 = size;
var i_15935 = (0);
while(true){
if((i_15935 < n__12516__auto___15934)){
var x_15936 = (function (){var G__15929 = (idx + i_15935);
var G__15930 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15935);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15929,G__15930) : f.call(null,G__15929,G__15930));
})();
if((x_15936 == null)){
} else {
cljs.core.chunk_append(b,x_15936);
}

var G__15937 = (i_15935 + (1));
i_15935 = G__15937;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__15931 = idx;
var G__15932 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15931,G__15932) : f.call(null,G__15931,G__15932));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__16151 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16151) : p.call(null,G__16151));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__11617__auto__ = (function (){var G__16153 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16153) : p.call(null,G__16153));
})();
if(cljs.core.truth_(and__11617__auto__)){
var G__16154 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16154) : p.call(null,G__16154));
} else {
return and__11617__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__11617__auto__ = (function (){var G__16156 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16156) : p.call(null,G__16156));
})();
if(cljs.core.truth_(and__11617__auto__)){
var and__11617__auto____$1 = (function (){var G__16158 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16158) : p.call(null,G__16158));
})();
if(cljs.core.truth_(and__11617__auto____$1)){
var G__16159 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16159) : p.call(null,G__16159));
} else {
return and__11617__auto____$1;
}
} else {
return and__11617__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__16328__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__16328 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16329__i = 0, G__16329__a = new Array(arguments.length -  3);
while (G__16329__i < G__16329__a.length) {G__16329__a[G__16329__i] = arguments[G__16329__i + 3]; ++G__16329__i;}
  args = new cljs.core.IndexedSeq(G__16329__a,0);
} 
return G__16328__delegate.call(this,x,y,z,args);};
G__16328.cljs$lang$maxFixedArity = 3;
G__16328.cljs$lang$applyTo = (function (arglist__16330){
var x = cljs.core.first(arglist__16330);
arglist__16330 = cljs.core.next(arglist__16330);
var y = cljs.core.first(arglist__16330);
arglist__16330 = cljs.core.next(arglist__16330);
var z = cljs.core.first(arglist__16330);
var args = cljs.core.rest(arglist__16330);
return G__16328__delegate(x,y,z,args);
});
G__16328.cljs$core$IFn$_invoke$arity$variadic = G__16328__delegate;
return G__16328;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__16331 = null;
if (arguments.length > 3) {
var G__16332__i = 0, G__16332__a = new Array(arguments.length -  3);
while (G__16332__i < G__16332__a.length) {G__16332__a[G__16332__i] = arguments[G__16332__i + 3]; ++G__16332__i;}
G__16331 = new cljs.core.IndexedSeq(G__16332__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16331);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__11617__auto__ = (function (){var G__16191 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16191) : p1.call(null,G__16191));
})();
if(cljs.core.truth_(and__11617__auto__)){
var G__16192 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16192) : p2.call(null,G__16192));
} else {
return and__11617__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__11617__auto__ = (function (){var G__16194 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16194) : p1.call(null,G__16194));
})();
if(cljs.core.truth_(and__11617__auto__)){
var and__11617__auto____$1 = (function (){var G__16196 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16196) : p1.call(null,G__16196));
})();
if(cljs.core.truth_(and__11617__auto____$1)){
var and__11617__auto____$2 = (function (){var G__16198 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16198) : p2.call(null,G__16198));
})();
if(cljs.core.truth_(and__11617__auto____$2)){
var G__16199 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16199) : p2.call(null,G__16199));
} else {
return and__11617__auto____$2;
}
} else {
return and__11617__auto____$1;
}
} else {
return and__11617__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__11617__auto__ = (function (){var G__16201 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16201) : p1.call(null,G__16201));
})();
if(cljs.core.truth_(and__11617__auto__)){
var and__11617__auto____$1 = (function (){var G__16203 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16203) : p1.call(null,G__16203));
})();
if(cljs.core.truth_(and__11617__auto____$1)){
var and__11617__auto____$2 = (function (){var G__16205 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16205) : p1.call(null,G__16205));
})();
if(cljs.core.truth_(and__11617__auto____$2)){
var and__11617__auto____$3 = (function (){var G__16207 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16207) : p2.call(null,G__16207));
})();
if(cljs.core.truth_(and__11617__auto____$3)){
var and__11617__auto____$4 = (function (){var G__16209 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16209) : p2.call(null,G__16209));
})();
if(cljs.core.truth_(and__11617__auto____$4)){
var G__16210 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16210) : p2.call(null,G__16210));
} else {
return and__11617__auto____$4;
}
} else {
return and__11617__auto____$3;
}
} else {
return and__11617__auto____$2;
}
} else {
return and__11617__auto____$1;
}
} else {
return and__11617__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__16333__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__15938_SHARP_){
var and__11617__auto__ = (function (){var G__16215 = p1__15938_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16215) : p1.call(null,G__16215));
})();
if(cljs.core.truth_(and__11617__auto__)){
var G__16216 = p1__15938_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16216) : p2.call(null,G__16216));
} else {
return and__11617__auto__;
}
}),args)));
};
var G__16333 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16334__i = 0, G__16334__a = new Array(arguments.length -  3);
while (G__16334__i < G__16334__a.length) {G__16334__a[G__16334__i] = arguments[G__16334__i + 3]; ++G__16334__i;}
  args = new cljs.core.IndexedSeq(G__16334__a,0);
} 
return G__16333__delegate.call(this,x,y,z,args);};
G__16333.cljs$lang$maxFixedArity = 3;
G__16333.cljs$lang$applyTo = (function (arglist__16335){
var x = cljs.core.first(arglist__16335);
arglist__16335 = cljs.core.next(arglist__16335);
var y = cljs.core.first(arglist__16335);
arglist__16335 = cljs.core.next(arglist__16335);
var z = cljs.core.first(arglist__16335);
var args = cljs.core.rest(arglist__16335);
return G__16333__delegate(x,y,z,args);
});
G__16333.cljs$core$IFn$_invoke$arity$variadic = G__16333__delegate;
return G__16333;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__16336 = null;
if (arguments.length > 3) {
var G__16337__i = 0, G__16337__a = new Array(arguments.length -  3);
while (G__16337__i < G__16337__a.length) {G__16337__a[G__16337__i] = arguments[G__16337__i + 3]; ++G__16337__i;}
G__16336 = new cljs.core.IndexedSeq(G__16337__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16336);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__11617__auto__ = (function (){var G__16262 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16262) : p1.call(null,G__16262));
})();
if(cljs.core.truth_(and__11617__auto__)){
var and__11617__auto____$1 = (function (){var G__16264 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16264) : p2.call(null,G__16264));
})();
if(cljs.core.truth_(and__11617__auto____$1)){
var G__16265 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16265) : p3.call(null,G__16265));
} else {
return and__11617__auto____$1;
}
} else {
return and__11617__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__11617__auto__ = (function (){var G__16267 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16267) : p1.call(null,G__16267));
})();
if(cljs.core.truth_(and__11617__auto__)){
var and__11617__auto____$1 = (function (){var G__16269 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16269) : p2.call(null,G__16269));
})();
if(cljs.core.truth_(and__11617__auto____$1)){
var and__11617__auto____$2 = (function (){var G__16271 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16271) : p3.call(null,G__16271));
})();
if(cljs.core.truth_(and__11617__auto____$2)){
var and__11617__auto____$3 = (function (){var G__16273 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16273) : p1.call(null,G__16273));
})();
if(cljs.core.truth_(and__11617__auto____$3)){
var and__11617__auto____$4 = (function (){var G__16275 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16275) : p2.call(null,G__16275));
})();
if(cljs.core.truth_(and__11617__auto____$4)){
var G__16276 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16276) : p3.call(null,G__16276));
} else {
return and__11617__auto____$4;
}
} else {
return and__11617__auto____$3;
}
} else {
return and__11617__auto____$2;
}
} else {
return and__11617__auto____$1;
}
} else {
return and__11617__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__11617__auto__ = (function (){var G__16278 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16278) : p1.call(null,G__16278));
})();
if(cljs.core.truth_(and__11617__auto__)){
var and__11617__auto____$1 = (function (){var G__16280 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16280) : p2.call(null,G__16280));
})();
if(cljs.core.truth_(and__11617__auto____$1)){
var and__11617__auto____$2 = (function (){var G__16282 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16282) : p3.call(null,G__16282));
})();
if(cljs.core.truth_(and__11617__auto____$2)){
var and__11617__auto____$3 = (function (){var G__16284 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16284) : p1.call(null,G__16284));
})();
if(cljs.core.truth_(and__11617__auto____$3)){
var and__11617__auto____$4 = (function (){var G__16286 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16286) : p2.call(null,G__16286));
})();
if(cljs.core.truth_(and__11617__auto____$4)){
var and__11617__auto____$5 = (function (){var G__16288 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16288) : p3.call(null,G__16288));
})();
if(cljs.core.truth_(and__11617__auto____$5)){
var and__11617__auto____$6 = (function (){var G__16290 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16290) : p1.call(null,G__16290));
})();
if(cljs.core.truth_(and__11617__auto____$6)){
var and__11617__auto____$7 = (function (){var G__16292 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16292) : p2.call(null,G__16292));
})();
if(cljs.core.truth_(and__11617__auto____$7)){
var G__16293 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16293) : p3.call(null,G__16293));
} else {
return and__11617__auto____$7;
}
} else {
return and__11617__auto____$6;
}
} else {
return and__11617__auto____$5;
}
} else {
return and__11617__auto____$4;
}
} else {
return and__11617__auto____$3;
}
} else {
return and__11617__auto____$2;
}
} else {
return and__11617__auto____$1;
}
} else {
return and__11617__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__16338__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__15939_SHARP_){
var and__11617__auto__ = (function (){var G__16300 = p1__15939_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16300) : p1.call(null,G__16300));
})();
if(cljs.core.truth_(and__11617__auto__)){
var and__11617__auto____$1 = (function (){var G__16302 = p1__15939_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16302) : p2.call(null,G__16302));
})();
if(cljs.core.truth_(and__11617__auto____$1)){
var G__16303 = p1__15939_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16303) : p3.call(null,G__16303));
} else {
return and__11617__auto____$1;
}
} else {
return and__11617__auto__;
}
}),args)));
};
var G__16338 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16339__i = 0, G__16339__a = new Array(arguments.length -  3);
while (G__16339__i < G__16339__a.length) {G__16339__a[G__16339__i] = arguments[G__16339__i + 3]; ++G__16339__i;}
  args = new cljs.core.IndexedSeq(G__16339__a,0);
} 
return G__16338__delegate.call(this,x,y,z,args);};
G__16338.cljs$lang$maxFixedArity = 3;
G__16338.cljs$lang$applyTo = (function (arglist__16340){
var x = cljs.core.first(arglist__16340);
arglist__16340 = cljs.core.next(arglist__16340);
var y = cljs.core.first(arglist__16340);
arglist__16340 = cljs.core.next(arglist__16340);
var z = cljs.core.first(arglist__16340);
var args = cljs.core.rest(arglist__16340);
return G__16338__delegate(x,y,z,args);
});
G__16338.cljs$core$IFn$_invoke$arity$variadic = G__16338__delegate;
return G__16338;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__16341 = null;
if (arguments.length > 3) {
var G__16342__i = 0, G__16342__a = new Array(arguments.length -  3);
while (G__16342__i < G__16342__a.length) {G__16342__a[G__16342__i] = arguments[G__16342__i + 3]; ++G__16342__i;}
G__16341 = new cljs.core.IndexedSeq(G__16342__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16341);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__16343__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15940_SHARP_){
var G__16319 = x;
return (p1__15940_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15940_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16319) : p1__15940_SHARP_.call(null,G__16319));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15941_SHARP_){
var and__11617__auto__ = (function (){var G__16321 = x;
return (p1__15941_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15941_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16321) : p1__15941_SHARP_.call(null,G__16321));
})();
if(cljs.core.truth_(and__11617__auto__)){
var G__16322 = y;
return (p1__15941_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15941_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16322) : p1__15941_SHARP_.call(null,G__16322));
} else {
return and__11617__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15942_SHARP_){
var and__11617__auto__ = (function (){var G__16324 = x;
return (p1__15942_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15942_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16324) : p1__15942_SHARP_.call(null,G__16324));
})();
if(cljs.core.truth_(and__11617__auto__)){
var and__11617__auto____$1 = (function (){var G__16326 = y;
return (p1__15942_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15942_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16326) : p1__15942_SHARP_.call(null,G__16326));
})();
if(cljs.core.truth_(and__11617__auto____$1)){
var G__16327 = z;
return (p1__15942_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15942_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16327) : p1__15942_SHARP_.call(null,G__16327));
} else {
return and__11617__auto____$1;
}
} else {
return and__11617__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__16344__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15943_SHARP_){
return cljs.core.every_QMARK_(p1__15943_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__16344 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16345__i = 0, G__16345__a = new Array(arguments.length -  3);
while (G__16345__i < G__16345__a.length) {G__16345__a[G__16345__i] = arguments[G__16345__i + 3]; ++G__16345__i;}
  args = new cljs.core.IndexedSeq(G__16345__a,0);
} 
return G__16344__delegate.call(this,x,y,z,args);};
G__16344.cljs$lang$maxFixedArity = 3;
G__16344.cljs$lang$applyTo = (function (arglist__16346){
var x = cljs.core.first(arglist__16346);
arglist__16346 = cljs.core.next(arglist__16346);
var y = cljs.core.first(arglist__16346);
arglist__16346 = cljs.core.next(arglist__16346);
var z = cljs.core.first(arglist__16346);
var args = cljs.core.rest(arglist__16346);
return G__16344__delegate(x,y,z,args);
});
G__16344.cljs$core$IFn$_invoke$arity$variadic = G__16344__delegate;
return G__16344;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__16347 = null;
if (arguments.length > 3) {
var G__16348__i = 0, G__16348__a = new Array(arguments.length -  3);
while (G__16348__i < G__16348__a.length) {G__16348__a[G__16348__i] = arguments[G__16348__i + 3]; ++G__16348__i;}
G__16347 = new cljs.core.IndexedSeq(G__16348__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16347);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__16343 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__16349__i = 0, G__16349__a = new Array(arguments.length -  3);
while (G__16349__i < G__16349__a.length) {G__16349__a[G__16349__i] = arguments[G__16349__i + 3]; ++G__16349__i;}
  ps = new cljs.core.IndexedSeq(G__16349__a,0);
} 
return G__16343__delegate.call(this,p1,p2,p3,ps);};
G__16343.cljs$lang$maxFixedArity = 3;
G__16343.cljs$lang$applyTo = (function (arglist__16350){
var p1 = cljs.core.first(arglist__16350);
arglist__16350 = cljs.core.next(arglist__16350);
var p2 = cljs.core.first(arglist__16350);
arglist__16350 = cljs.core.next(arglist__16350);
var p3 = cljs.core.first(arglist__16350);
var ps = cljs.core.rest(arglist__16350);
return G__16343__delegate(p1,p2,p3,ps);
});
G__16343.cljs$core$IFn$_invoke$arity$variadic = G__16343__delegate;
return G__16343;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__16351 = null;
if (arguments.length > 3) {
var G__16352__i = 0, G__16352__a = new Array(arguments.length -  3);
while (G__16352__i < G__16352__a.length) {G__16352__a[G__16352__i] = arguments[G__16352__i + 3]; ++G__16352__i;}
G__16351 = new cljs.core.IndexedSeq(G__16352__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__16351);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__16558 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16558) : p.call(null,G__16558));
});
var sp1__2 = (function (x,y){
var or__11629__auto__ = (function (){var G__16560 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16560) : p.call(null,G__16560));
})();
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
var G__16561 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16561) : p.call(null,G__16561));
}
});
var sp1__3 = (function (x,y,z){
var or__11629__auto__ = (function (){var G__16563 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16563) : p.call(null,G__16563));
})();
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (function (){var G__16565 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16565) : p.call(null,G__16565));
})();
if(cljs.core.truth_(or__11629__auto____$1)){
return or__11629__auto____$1;
} else {
var G__16566 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16566) : p.call(null,G__16566));
}
}
});
var sp1__4 = (function() { 
var G__16727__delegate = function (x,y,z,args){
var or__11629__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__16727 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16728__i = 0, G__16728__a = new Array(arguments.length -  3);
while (G__16728__i < G__16728__a.length) {G__16728__a[G__16728__i] = arguments[G__16728__i + 3]; ++G__16728__i;}
  args = new cljs.core.IndexedSeq(G__16728__a,0);
} 
return G__16727__delegate.call(this,x,y,z,args);};
G__16727.cljs$lang$maxFixedArity = 3;
G__16727.cljs$lang$applyTo = (function (arglist__16729){
var x = cljs.core.first(arglist__16729);
arglist__16729 = cljs.core.next(arglist__16729);
var y = cljs.core.first(arglist__16729);
arglist__16729 = cljs.core.next(arglist__16729);
var z = cljs.core.first(arglist__16729);
var args = cljs.core.rest(arglist__16729);
return G__16727__delegate(x,y,z,args);
});
G__16727.cljs$core$IFn$_invoke$arity$variadic = G__16727__delegate;
return G__16727;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__16730 = null;
if (arguments.length > 3) {
var G__16731__i = 0, G__16731__a = new Array(arguments.length -  3);
while (G__16731__i < G__16731__a.length) {G__16731__a[G__16731__i] = arguments[G__16731__i + 3]; ++G__16731__i;}
G__16730 = new cljs.core.IndexedSeq(G__16731__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__11629__auto__ = (function (){var G__16598 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16598) : p1.call(null,G__16598));
})();
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
var G__16599 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16599) : p2.call(null,G__16599));
}
});
var sp2__2 = (function (x,y){
var or__11629__auto__ = (function (){var G__16601 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16601) : p1.call(null,G__16601));
})();
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (function (){var G__16603 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16603) : p1.call(null,G__16603));
})();
if(cljs.core.truth_(or__11629__auto____$1)){
return or__11629__auto____$1;
} else {
var or__11629__auto____$2 = (function (){var G__16605 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16605) : p2.call(null,G__16605));
})();
if(cljs.core.truth_(or__11629__auto____$2)){
return or__11629__auto____$2;
} else {
var G__16606 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16606) : p2.call(null,G__16606));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__11629__auto__ = (function (){var G__16608 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16608) : p1.call(null,G__16608));
})();
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (function (){var G__16610 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16610) : p1.call(null,G__16610));
})();
if(cljs.core.truth_(or__11629__auto____$1)){
return or__11629__auto____$1;
} else {
var or__11629__auto____$2 = (function (){var G__16612 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16612) : p1.call(null,G__16612));
})();
if(cljs.core.truth_(or__11629__auto____$2)){
return or__11629__auto____$2;
} else {
var or__11629__auto____$3 = (function (){var G__16614 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16614) : p2.call(null,G__16614));
})();
if(cljs.core.truth_(or__11629__auto____$3)){
return or__11629__auto____$3;
} else {
var or__11629__auto____$4 = (function (){var G__16616 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16616) : p2.call(null,G__16616));
})();
if(cljs.core.truth_(or__11629__auto____$4)){
return or__11629__auto____$4;
} else {
var G__16617 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16617) : p2.call(null,G__16617));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__16732__delegate = function (x,y,z,args){
var or__11629__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return cljs.core.some(((function (or__11629__auto__){
return (function (p1__16353_SHARP_){
var or__11629__auto____$1 = (function (){var G__16619 = p1__16353_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16619) : p1.call(null,G__16619));
})();
if(cljs.core.truth_(or__11629__auto____$1)){
return or__11629__auto____$1;
} else {
var G__16620 = p1__16353_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16620) : p2.call(null,G__16620));
}
});})(or__11629__auto__))
,args);
}
};
var G__16732 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16733__i = 0, G__16733__a = new Array(arguments.length -  3);
while (G__16733__i < G__16733__a.length) {G__16733__a[G__16733__i] = arguments[G__16733__i + 3]; ++G__16733__i;}
  args = new cljs.core.IndexedSeq(G__16733__a,0);
} 
return G__16732__delegate.call(this,x,y,z,args);};
G__16732.cljs$lang$maxFixedArity = 3;
G__16732.cljs$lang$applyTo = (function (arglist__16734){
var x = cljs.core.first(arglist__16734);
arglist__16734 = cljs.core.next(arglist__16734);
var y = cljs.core.first(arglist__16734);
arglist__16734 = cljs.core.next(arglist__16734);
var z = cljs.core.first(arglist__16734);
var args = cljs.core.rest(arglist__16734);
return G__16732__delegate(x,y,z,args);
});
G__16732.cljs$core$IFn$_invoke$arity$variadic = G__16732__delegate;
return G__16732;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__16735 = null;
if (arguments.length > 3) {
var G__16736__i = 0, G__16736__a = new Array(arguments.length -  3);
while (G__16736__i < G__16736__a.length) {G__16736__a[G__16736__i] = arguments[G__16736__i + 3]; ++G__16736__i;}
G__16735 = new cljs.core.IndexedSeq(G__16736__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16735);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__11629__auto__ = (function (){var G__16666 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16666) : p1.call(null,G__16666));
})();
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (function (){var G__16668 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16668) : p2.call(null,G__16668));
})();
if(cljs.core.truth_(or__11629__auto____$1)){
return or__11629__auto____$1;
} else {
var G__16669 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16669) : p3.call(null,G__16669));
}
}
});
var sp3__2 = (function (x,y){
var or__11629__auto__ = (function (){var G__16671 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16671) : p1.call(null,G__16671));
})();
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (function (){var G__16673 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16673) : p2.call(null,G__16673));
})();
if(cljs.core.truth_(or__11629__auto____$1)){
return or__11629__auto____$1;
} else {
var or__11629__auto____$2 = (function (){var G__16675 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16675) : p3.call(null,G__16675));
})();
if(cljs.core.truth_(or__11629__auto____$2)){
return or__11629__auto____$2;
} else {
var or__11629__auto____$3 = (function (){var G__16677 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16677) : p1.call(null,G__16677));
})();
if(cljs.core.truth_(or__11629__auto____$3)){
return or__11629__auto____$3;
} else {
var or__11629__auto____$4 = (function (){var G__16679 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16679) : p2.call(null,G__16679));
})();
if(cljs.core.truth_(or__11629__auto____$4)){
return or__11629__auto____$4;
} else {
var G__16680 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16680) : p3.call(null,G__16680));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__11629__auto__ = (function (){var G__16682 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16682) : p1.call(null,G__16682));
})();
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (function (){var G__16684 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16684) : p2.call(null,G__16684));
})();
if(cljs.core.truth_(or__11629__auto____$1)){
return or__11629__auto____$1;
} else {
var or__11629__auto____$2 = (function (){var G__16686 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16686) : p3.call(null,G__16686));
})();
if(cljs.core.truth_(or__11629__auto____$2)){
return or__11629__auto____$2;
} else {
var or__11629__auto____$3 = (function (){var G__16688 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16688) : p1.call(null,G__16688));
})();
if(cljs.core.truth_(or__11629__auto____$3)){
return or__11629__auto____$3;
} else {
var or__11629__auto____$4 = (function (){var G__16690 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16690) : p2.call(null,G__16690));
})();
if(cljs.core.truth_(or__11629__auto____$4)){
return or__11629__auto____$4;
} else {
var or__11629__auto____$5 = (function (){var G__16692 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16692) : p3.call(null,G__16692));
})();
if(cljs.core.truth_(or__11629__auto____$5)){
return or__11629__auto____$5;
} else {
var or__11629__auto____$6 = (function (){var G__16694 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16694) : p1.call(null,G__16694));
})();
if(cljs.core.truth_(or__11629__auto____$6)){
return or__11629__auto____$6;
} else {
var or__11629__auto____$7 = (function (){var G__16696 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16696) : p2.call(null,G__16696));
})();
if(cljs.core.truth_(or__11629__auto____$7)){
return or__11629__auto____$7;
} else {
var G__16697 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16697) : p3.call(null,G__16697));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__16737__delegate = function (x,y,z,args){
var or__11629__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return cljs.core.some(((function (or__11629__auto__){
return (function (p1__16354_SHARP_){
var or__11629__auto____$1 = (function (){var G__16699 = p1__16354_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16699) : p1.call(null,G__16699));
})();
if(cljs.core.truth_(or__11629__auto____$1)){
return or__11629__auto____$1;
} else {
var or__11629__auto____$2 = (function (){var G__16701 = p1__16354_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16701) : p2.call(null,G__16701));
})();
if(cljs.core.truth_(or__11629__auto____$2)){
return or__11629__auto____$2;
} else {
var G__16702 = p1__16354_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16702) : p3.call(null,G__16702));
}
}
});})(or__11629__auto__))
,args);
}
};
var G__16737 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16738__i = 0, G__16738__a = new Array(arguments.length -  3);
while (G__16738__i < G__16738__a.length) {G__16738__a[G__16738__i] = arguments[G__16738__i + 3]; ++G__16738__i;}
  args = new cljs.core.IndexedSeq(G__16738__a,0);
} 
return G__16737__delegate.call(this,x,y,z,args);};
G__16737.cljs$lang$maxFixedArity = 3;
G__16737.cljs$lang$applyTo = (function (arglist__16739){
var x = cljs.core.first(arglist__16739);
arglist__16739 = cljs.core.next(arglist__16739);
var y = cljs.core.first(arglist__16739);
arglist__16739 = cljs.core.next(arglist__16739);
var z = cljs.core.first(arglist__16739);
var args = cljs.core.rest(arglist__16739);
return G__16737__delegate(x,y,z,args);
});
G__16737.cljs$core$IFn$_invoke$arity$variadic = G__16737__delegate;
return G__16737;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__16740 = null;
if (arguments.length > 3) {
var G__16741__i = 0, G__16741__a = new Array(arguments.length -  3);
while (G__16741__i < G__16741__a.length) {G__16741__a[G__16741__i] = arguments[G__16741__i + 3]; ++G__16741__i;}
G__16740 = new cljs.core.IndexedSeq(G__16741__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16740);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__16742__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__16355_SHARP_){
var G__16718 = x;
return (p1__16355_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16355_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16718) : p1__16355_SHARP_.call(null,G__16718));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__16356_SHARP_){
var or__11629__auto__ = (function (){var G__16720 = x;
return (p1__16356_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16356_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16720) : p1__16356_SHARP_.call(null,G__16720));
})();
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
var G__16721 = y;
return (p1__16356_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16356_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16721) : p1__16356_SHARP_.call(null,G__16721));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__16357_SHARP_){
var or__11629__auto__ = (function (){var G__16723 = x;
return (p1__16357_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16357_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16723) : p1__16357_SHARP_.call(null,G__16723));
})();
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (function (){var G__16725 = y;
return (p1__16357_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16357_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16725) : p1__16357_SHARP_.call(null,G__16725));
})();
if(cljs.core.truth_(or__11629__auto____$1)){
return or__11629__auto____$1;
} else {
var G__16726 = z;
return (p1__16357_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16357_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16726) : p1__16357_SHARP_.call(null,G__16726));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__16743__delegate = function (x,y,z,args){
var or__11629__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return cljs.core.some(((function (or__11629__auto__,ps__$1){
return (function (p1__16358_SHARP_){
return cljs.core.some(p1__16358_SHARP_,args);
});})(or__11629__auto__,ps__$1))
,ps__$1);
}
};
var G__16743 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16744__i = 0, G__16744__a = new Array(arguments.length -  3);
while (G__16744__i < G__16744__a.length) {G__16744__a[G__16744__i] = arguments[G__16744__i + 3]; ++G__16744__i;}
  args = new cljs.core.IndexedSeq(G__16744__a,0);
} 
return G__16743__delegate.call(this,x,y,z,args);};
G__16743.cljs$lang$maxFixedArity = 3;
G__16743.cljs$lang$applyTo = (function (arglist__16745){
var x = cljs.core.first(arglist__16745);
arglist__16745 = cljs.core.next(arglist__16745);
var y = cljs.core.first(arglist__16745);
arglist__16745 = cljs.core.next(arglist__16745);
var z = cljs.core.first(arglist__16745);
var args = cljs.core.rest(arglist__16745);
return G__16743__delegate(x,y,z,args);
});
G__16743.cljs$core$IFn$_invoke$arity$variadic = G__16743__delegate;
return G__16743;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__16746 = null;
if (arguments.length > 3) {
var G__16747__i = 0, G__16747__a = new Array(arguments.length -  3);
while (G__16747__i < G__16747__a.length) {G__16747__a[G__16747__i] = arguments[G__16747__i + 3]; ++G__16747__i;}
G__16746 = new cljs.core.IndexedSeq(G__16747__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16746);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__16742 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__16748__i = 0, G__16748__a = new Array(arguments.length -  3);
while (G__16748__i < G__16748__a.length) {G__16748__a[G__16748__i] = arguments[G__16748__i + 3]; ++G__16748__i;}
  ps = new cljs.core.IndexedSeq(G__16748__a,0);
} 
return G__16742__delegate.call(this,p1,p2,p3,ps);};
G__16742.cljs$lang$maxFixedArity = 3;
G__16742.cljs$lang$applyTo = (function (arglist__16749){
var p1 = cljs.core.first(arglist__16749);
arglist__16749 = cljs.core.next(arglist__16749);
var p2 = cljs.core.first(arglist__16749);
arglist__16749 = cljs.core.next(arglist__16749);
var p3 = cljs.core.first(arglist__16749);
var ps = cljs.core.rest(arglist__16749);
return G__16742__delegate(p1,p2,p3,ps);
});
G__16742.cljs$core$IFn$_invoke$arity$variadic = G__16742__delegate;
return G__16742;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__16750 = null;
if (arguments.length > 3) {
var G__16751__i = 0, G__16751__a = new Array(arguments.length -  3);
while (G__16751__i < G__16751__a.length) {G__16751__a[G__16751__i] = arguments[G__16751__i + 3]; ++G__16751__i;}
G__16750 = new cljs.core.IndexedSeq(G__16751__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__16750);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__16806 = null;
var G__16806__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16806__1 = (function (result){
var G__16792 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16792) : rf.call(null,G__16792));
});
var G__16806__2 = (function (result,input){
var G__16793 = result;
var G__16794 = (function (){var G__16795 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16795) : f.call(null,G__16795));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16793,G__16794) : rf.call(null,G__16793,G__16794));
});
var G__16806__3 = (function() { 
var G__16807__delegate = function (result,input,inputs){
var G__16796 = result;
var G__16797 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16796,G__16797) : rf.call(null,G__16796,G__16797));
};
var G__16807 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__16808__i = 0, G__16808__a = new Array(arguments.length -  2);
while (G__16808__i < G__16808__a.length) {G__16808__a[G__16808__i] = arguments[G__16808__i + 2]; ++G__16808__i;}
  inputs = new cljs.core.IndexedSeq(G__16808__a,0);
} 
return G__16807__delegate.call(this,result,input,inputs);};
G__16807.cljs$lang$maxFixedArity = 2;
G__16807.cljs$lang$applyTo = (function (arglist__16809){
var result = cljs.core.first(arglist__16809);
arglist__16809 = cljs.core.next(arglist__16809);
var input = cljs.core.first(arglist__16809);
var inputs = cljs.core.rest(arglist__16809);
return G__16807__delegate(result,input,inputs);
});
G__16807.cljs$core$IFn$_invoke$arity$variadic = G__16807__delegate;
return G__16807;
})()
;
G__16806 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__16806__0.call(this);
case 1:
return G__16806__1.call(this,result);
case 2:
return G__16806__2.call(this,result,input);
default:
var G__16810 = null;
if (arguments.length > 2) {
var G__16811__i = 0, G__16811__a = new Array(arguments.length -  2);
while (G__16811__i < G__16811__a.length) {G__16811__a[G__16811__i] = arguments[G__16811__i + 2]; ++G__16811__i;}
G__16810 = new cljs.core.IndexedSeq(G__16811__a,0);
}
return G__16806__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__16810);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16806.cljs$lang$maxFixedArity = 2;
G__16806.cljs$lang$applyTo = G__16806__3.cljs$lang$applyTo;
G__16806.cljs$core$IFn$_invoke$arity$0 = G__16806__0;
G__16806.cljs$core$IFn$_invoke$arity$1 = G__16806__1;
G__16806.cljs$core$IFn$_invoke$arity$2 = G__16806__2;
G__16806.cljs$core$IFn$_invoke$arity$variadic = G__16806__3.cljs$core$IFn$_invoke$arity$variadic;
return G__16806;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__12516__auto___16812 = size;
var i_16813 = (0);
while(true){
if((i_16813 < n__12516__auto___16812)){
cljs.core.chunk_append(b,(function (){var G__16798 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_16813);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16798) : f.call(null,G__16798));
})());

var G__16814 = (i_16813 + (1));
i_16813 = G__16814;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__16799 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16799) : f.call(null,G__16799));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__16800 = cljs.core.first(s1);
var G__16801 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16800,G__16801) : f.call(null,G__16800,G__16801));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__16802 = cljs.core.first(s1);
var G__16803 = cljs.core.first(s2);
var G__16804 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16802,G__16803,G__16804) : f.call(null,G__16802,G__16803,G__16804));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__16815__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__16752_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__16752_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__16815 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__16816__i = 0, G__16816__a = new Array(arguments.length -  4);
while (G__16816__i < G__16816__a.length) {G__16816__a[G__16816__i] = arguments[G__16816__i + 4]; ++G__16816__i;}
  colls = new cljs.core.IndexedSeq(G__16816__a,0);
} 
return G__16815__delegate.call(this,f,c1,c2,c3,colls);};
G__16815.cljs$lang$maxFixedArity = 4;
G__16815.cljs$lang$applyTo = (function (arglist__16817){
var f = cljs.core.first(arglist__16817);
arglist__16817 = cljs.core.next(arglist__16817);
var c1 = cljs.core.first(arglist__16817);
arglist__16817 = cljs.core.next(arglist__16817);
var c2 = cljs.core.first(arglist__16817);
arglist__16817 = cljs.core.next(arglist__16817);
var c3 = cljs.core.first(arglist__16817);
var colls = cljs.core.rest(arglist__16817);
return G__16815__delegate(f,c1,c2,c3,colls);
});
G__16815.cljs$core$IFn$_invoke$arity$variadic = G__16815__delegate;
return G__16815;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__16818 = null;
if (arguments.length > 4) {
var G__16819__i = 0, G__16819__a = new Array(arguments.length -  4);
while (G__16819__i < G__16819__a.length) {G__16819__a[G__16819__i] = arguments[G__16819__i + 4]; ++G__16819__i;}
G__16818 = new cljs.core.IndexedSeq(G__16819__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__16818);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__16828 = null;
var G__16828__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16828__1 = (function (result){
var G__16825 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16825) : rf.call(null,G__16825));
});
var G__16828__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__16826 = result;
var G__16827 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16826,G__16827) : rf.call(null,G__16826,G__16827));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__16828 = function(result,input){
switch(arguments.length){
case 0:
return G__16828__0.call(this);
case 1:
return G__16828__1.call(this,result);
case 2:
return G__16828__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16828.cljs$core$IFn$_invoke$arity$0 = G__16828__0;
G__16828.cljs$core$IFn$_invoke$arity$1 = G__16828__1;
G__16828.cljs$core$IFn$_invoke$arity$2 = G__16828__2;
return G__16828;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__16835 = null;
var G__16835__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16835__1 = (function (result){
var G__16832 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16832) : rf.call(null,G__16832));
});
var G__16835__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__16833 = result;
var G__16834 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16833,G__16834) : rf.call(null,G__16833,G__16834));
}
});
G__16835 = function(result,input){
switch(arguments.length){
case 0:
return G__16835__0.call(this);
case 1:
return G__16835__1.call(this,result);
case 2:
return G__16835__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16835.cljs$core$IFn$_invoke$arity$0 = G__16835__0;
G__16835.cljs$core$IFn$_invoke$arity$1 = G__16835__1;
G__16835.cljs$core$IFn$_invoke$arity$2 = G__16835__2;
return G__16835;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__16836 = (n__$1 - (1));
var G__16837 = cljs.core.rest(s);
n__$1 = G__16836;
coll__$1 = G__16837;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__16840 = cljs.core.next(s);
var G__16841 = cljs.core.next(lead);
s = G__16840;
lead = G__16841;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__16854 = null;
var G__16854__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16854__1 = (function (result){
var G__16848 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16848) : rf.call(null,G__16848));
});
var G__16854__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__11617__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__11617__auto__)){
var G__16849 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16849) : pred.call(null,G__16849));
} else {
return and__11617__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__16850 = result;
var G__16851 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16850,G__16851) : rf.call(null,G__16850,G__16851));
}
});
G__16854 = function(result,input){
switch(arguments.length){
case 0:
return G__16854__0.call(this);
case 1:
return G__16854__1.call(this,result);
case 2:
return G__16854__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16854.cljs$core$IFn$_invoke$arity$0 = G__16854__0;
G__16854.cljs$core$IFn$_invoke$arity$1 = G__16854__1;
G__16854.cljs$core$IFn$_invoke$arity$2 = G__16854__2;
return G__16854;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__11617__auto__ = s;
if(and__11617__auto__){
var G__16853 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__16853) : pred__$1.call(null,G__16853));
} else {
return and__11617__auto__;
}
})())){
var G__16855 = pred__$1;
var G__16856 = cljs.core.rest(s);
pred__$1 = G__16855;
coll__$1 = G__16856;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__16865 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16865) : f.call(null,G__16865));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__16868__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__16868 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__16869__i = 0, G__16869__a = new Array(arguments.length -  2);
while (G__16869__i < G__16869__a.length) {G__16869__a[G__16869__i] = arguments[G__16869__i + 2]; ++G__16869__i;}
  colls = new cljs.core.IndexedSeq(G__16869__a,0);
} 
return G__16868__delegate.call(this,c1,c2,colls);};
G__16868.cljs$lang$maxFixedArity = 2;
G__16868.cljs$lang$applyTo = (function (arglist__16870){
var c1 = cljs.core.first(arglist__16870);
arglist__16870 = cljs.core.next(arglist__16870);
var c2 = cljs.core.first(arglist__16870);
var colls = cljs.core.rest(arglist__16870);
return G__16868__delegate(c1,c2,colls);
});
G__16868.cljs$core$IFn$_invoke$arity$variadic = G__16868__delegate;
return G__16868;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__16871 = null;
if (arguments.length > 2) {
var G__16872__i = 0, G__16872__a = new Array(arguments.length -  2);
while (G__16872__i < G__16872__a.length) {G__16872__a[G__16872__i] = arguments[G__16872__i + 2]; ++G__16872__i;}
G__16871 = new cljs.core.IndexedSeq(G__16872__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__16871);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__16881__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__16881 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__16882__i = 0, G__16882__a = new Array(arguments.length -  1);
while (G__16882__i < G__16882__a.length) {G__16882__a[G__16882__i] = arguments[G__16882__i + 1]; ++G__16882__i;}
  colls = new cljs.core.IndexedSeq(G__16882__a,0);
} 
return G__16881__delegate.call(this,f,colls);};
G__16881.cljs$lang$maxFixedArity = 1;
G__16881.cljs$lang$applyTo = (function (arglist__16883){
var f = cljs.core.first(arglist__16883);
var colls = cljs.core.rest(arglist__16883);
return G__16881__delegate(f,colls);
});
G__16881.cljs$core$IFn$_invoke$arity$variadic = G__16881__delegate;
return G__16881;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__16884 = null;
if (arguments.length > 1) {
var G__16885__i = 0, G__16885__a = new Array(arguments.length -  1);
while (G__16885__i < G__16885__a.length) {G__16885__a[G__16885__i] = arguments[G__16885__i + 1]; ++G__16885__i;}
G__16884 = new cljs.core.IndexedSeq(G__16885__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16884);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__16904 = null;
var G__16904__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16904__1 = (function (result){
var G__16898 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16898) : rf.call(null,G__16898));
});
var G__16904__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__16899 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16899) : pred.call(null,G__16899));
})())){
var G__16900 = result;
var G__16901 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16900,G__16901) : rf.call(null,G__16900,G__16901));
} else {
return result;
}
});
G__16904 = function(result,input){
switch(arguments.length){
case 0:
return G__16904__0.call(this);
case 1:
return G__16904__1.call(this,result);
case 2:
return G__16904__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16904.cljs$core$IFn$_invoke$arity$0 = G__16904__0;
G__16904.cljs$core$IFn$_invoke$arity$1 = G__16904__1;
G__16904.cljs$core$IFn$_invoke$arity$2 = G__16904__2;
return G__16904;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__12516__auto___16905 = size;
var i_16906 = (0);
while(true){
if((i_16906 < n__12516__auto___16905)){
if(cljs.core.truth_((function (){var G__16902 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_16906);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16902) : pred.call(null,G__16902));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_16906));
} else {
}

var G__16907 = (i_16906 + (1));
i_16906 = G__16907;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__16903 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16903) : pred.call(null,G__16903));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__16914 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__16914) : branch_QMARK_.call(null,G__16914));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__16915 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__16915) : children.call(null,G__16915));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__16916_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__16916_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__16919 = to;
if(G__16919){
var bit__12303__auto__ = (G__16919.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__12303__auto__) || (G__16919.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__16920 = to;
if(G__16920){
var bit__12303__auto__ = (G__16920.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__12303__auto__) || (G__16920.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__16922 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16922) : f.call(null,G__16922));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__16923__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__16923 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__16924__i = 0, G__16924__a = new Array(arguments.length -  4);
while (G__16924__i < G__16924__a.length) {G__16924__a[G__16924__i] = arguments[G__16924__i + 4]; ++G__16924__i;}
  colls = new cljs.core.IndexedSeq(G__16924__a,0);
} 
return G__16923__delegate.call(this,f,c1,c2,c3,colls);};
G__16923.cljs$lang$maxFixedArity = 4;
G__16923.cljs$lang$applyTo = (function (arglist__16925){
var f = cljs.core.first(arglist__16925);
arglist__16925 = cljs.core.next(arglist__16925);
var c1 = cljs.core.first(arglist__16925);
arglist__16925 = cljs.core.next(arglist__16925);
var c2 = cljs.core.first(arglist__16925);
arglist__16925 = cljs.core.next(arglist__16925);
var c3 = cljs.core.first(arglist__16925);
var colls = cljs.core.rest(arglist__16925);
return G__16923__delegate(f,c1,c2,c3,colls);
});
G__16923.cljs$core$IFn$_invoke$arity$variadic = G__16923__delegate;
return G__16923;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__16926 = null;
if (arguments.length > 4) {
var G__16927__i = 0, G__16927__a = new Array(arguments.length -  4);
while (G__16927__i < G__16927__a.length) {G__16927__a[G__16927__i] = arguments[G__16927__i + 4]; ++G__16927__i;}
G__16926 = new cljs.core.IndexedSeq(G__16927__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__16926);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__16929 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16929) : pred.call(null,G__16929));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__16944 = m__$1;
if(G__16944){
var bit__12310__auto__ = (G__16944.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__12310__auto__) || (G__16944.cljs$core$ILookup$)){
return true;
} else {
if((!G__16944.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__16944);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__16944);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__16945 = sentinel;
var G__16946 = m__$2;
var G__16947 = cljs.core.next(ks__$1);
sentinel = G__16945;
m__$1 = G__16946;
ks__$1 = G__16947;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__16948,v){
var vec__16953 = p__16948;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16953,(0),null);
var ks = cljs.core.nthnext(vec__16953,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__16954,f){
var vec__16992 = p__16954;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16992,(0),null);
var ks = cljs.core.nthnext(vec__16992,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16993 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16993) : f.call(null,G__16993));
})());
}
});
var update_in__4 = (function (m,p__16955,f,a){
var vec__16994 = p__16955;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16994,(0),null);
var ks = cljs.core.nthnext(vec__16994,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16995 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16996 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16995,G__16996) : f.call(null,G__16995,G__16996));
})());
}
});
var update_in__5 = (function (m,p__16956,f,a,b){
var vec__16997 = p__16956;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16997,(0),null);
var ks = cljs.core.nthnext(vec__16997,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16998 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16999 = a;
var G__17000 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16998,G__16999,G__17000) : f.call(null,G__16998,G__16999,G__17000));
})());
}
});
var update_in__6 = (function (m,p__16957,f,a,b,c){
var vec__17001 = p__16957;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17001,(0),null);
var ks = cljs.core.nthnext(vec__17001,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__17002 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__17003 = a;
var G__17004 = b;
var G__17005 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17002,G__17003,G__17004,G__17005) : f.call(null,G__17002,G__17003,G__17004,G__17005));
})());
}
});
var update_in__7 = (function() { 
var G__17007__delegate = function (m,p__16958,f,a,b,c,args){
var vec__17006 = p__16958;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17006,(0),null);
var ks = cljs.core.nthnext(vec__17006,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__17007 = function (m,p__16958,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__17008__i = 0, G__17008__a = new Array(arguments.length -  6);
while (G__17008__i < G__17008__a.length) {G__17008__a[G__17008__i] = arguments[G__17008__i + 6]; ++G__17008__i;}
  args = new cljs.core.IndexedSeq(G__17008__a,0);
} 
return G__17007__delegate.call(this,m,p__16958,f,a,b,c,args);};
G__17007.cljs$lang$maxFixedArity = 6;
G__17007.cljs$lang$applyTo = (function (arglist__17009){
var m = cljs.core.first(arglist__17009);
arglist__17009 = cljs.core.next(arglist__17009);
var p__16958 = cljs.core.first(arglist__17009);
arglist__17009 = cljs.core.next(arglist__17009);
var f = cljs.core.first(arglist__17009);
arglist__17009 = cljs.core.next(arglist__17009);
var a = cljs.core.first(arglist__17009);
arglist__17009 = cljs.core.next(arglist__17009);
var b = cljs.core.first(arglist__17009);
arglist__17009 = cljs.core.next(arglist__17009);
var c = cljs.core.first(arglist__17009);
var args = cljs.core.rest(arglist__17009);
return G__17007__delegate(m,p__16958,f,a,b,c,args);
});
G__17007.cljs$core$IFn$_invoke$arity$variadic = G__17007__delegate;
return G__17007;
})()
;
update_in = function(m,p__16958,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__16958,f);
case 4:
return update_in__4.call(this,m,p__16958,f,a);
case 5:
return update_in__5.call(this,m,p__16958,f,a,b);
case 6:
return update_in__6.call(this,m,p__16958,f,a,b,c);
default:
var G__17010 = null;
if (arguments.length > 6) {
var G__17011__i = 0, G__17011__a = new Array(arguments.length -  6);
while (G__17011__i < G__17011__a.length) {G__17011__a[G__17011__i] = arguments[G__17011__i + 6]; ++G__17011__i;}
G__17010 = new cljs.core.IndexedSeq(G__17011__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__16958,f,a,b,c, G__17010);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__17022 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17022) : f.call(null,G__17022));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__17023 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__17024 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17023,G__17024) : f.call(null,G__17023,G__17024));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__17025 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__17026 = x;
var G__17027 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17025,G__17026,G__17027) : f.call(null,G__17025,G__17026,G__17027));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__17028 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__17029 = x;
var G__17030 = y;
var G__17031 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17028,G__17029,G__17030,G__17031) : f.call(null,G__17028,G__17029,G__17030,G__17031));
})());
});
var update__7 = (function() { 
var G__17032__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__17032 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__17033__i = 0, G__17033__a = new Array(arguments.length -  6);
while (G__17033__i < G__17033__a.length) {G__17033__a[G__17033__i] = arguments[G__17033__i + 6]; ++G__17033__i;}
  more = new cljs.core.IndexedSeq(G__17033__a,0);
} 
return G__17032__delegate.call(this,m,k,f,x,y,z,more);};
G__17032.cljs$lang$maxFixedArity = 6;
G__17032.cljs$lang$applyTo = (function (arglist__17034){
var m = cljs.core.first(arglist__17034);
arglist__17034 = cljs.core.next(arglist__17034);
var k = cljs.core.first(arglist__17034);
arglist__17034 = cljs.core.next(arglist__17034);
var f = cljs.core.first(arglist__17034);
arglist__17034 = cljs.core.next(arglist__17034);
var x = cljs.core.first(arglist__17034);
arglist__17034 = cljs.core.next(arglist__17034);
var y = cljs.core.first(arglist__17034);
arglist__17034 = cljs.core.next(arglist__17034);
var z = cljs.core.first(arglist__17034);
var more = cljs.core.rest(arglist__17034);
return G__17032__delegate(m,k,f,x,y,z,more);
});
G__17032.cljs$core$IFn$_invoke$arity$variadic = G__17032__delegate;
return G__17032;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__17035 = null;
if (arguments.length > 6) {
var G__17036__i = 0, G__17036__a = new Array(arguments.length -  6);
while (G__17036__i < G__17036__a.length) {G__17036__a[G__17036__i] = arguments[G__17036__i + 6]; ++G__17036__i;}
G__17035 = new cljs.core.IndexedSeq(G__17036__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__17035);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__17037 = (ll - (5));
var G__17038 = r;
ll = G__17037;
ret = G__17038;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__17043 = cljs.core.pv_aget(node,(0));
var G__17044 = (level - (5));
node = G__17043;
level = G__17044;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__17045 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__17046 = (level - (5));
node = G__17045;
level = G__17046;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__17056 = init__$2;
var G__17057 = (j + i);
var G__17058 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17056,G__17057,G__17058) : f.call(null,G__17056,G__17057,G__17058));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__17069 = (j + (1));
var G__17070 = init__$3;
j = G__17069;
init__$2 = G__17070;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17059 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17059) : cljs.core.deref.call(null,G__17059));
} else {
var G__17071 = (i + len);
var G__17072 = init__$2;
i = G__17071;
init__$1 = G__17072;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__17060 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__17060) : cljs.core.tv_editable_root.call(null,G__17060));
})(),(function (){var G__17061 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__17061) : cljs.core.tv_editable_tail.call(null,G__17061));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__17062 = init__$2;
var G__17063 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17062,G__17063) : f.call(null,G__17062,G__17063));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__17073 = (j + (1));
var G__17074 = init__$3;
j = G__17073;
init__$2 = G__17074;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17064 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17064) : cljs.core.deref.call(null,G__17064));
} else {
var G__17075 = (i + len);
var G__17076 = init__$2;
i = G__17075;
init__$1 = G__17076;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__17065 = coll__$1;
var G__17066 = cljs.core.first_array_for_longvec(coll__$1);
var G__17067 = (0);
var G__17068 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__17065,G__17066,G__17067,G__17068) : cljs.core.chunked_seq.call(null,G__17065,G__17066,G__17067,G__17068));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__12516__auto___17077 = len;
var i_17078 = (0);
while(true){
if((i_17078 < n__12516__auto___17077)){
(new_tail[i_17078] = (self__.tail[i_17078]));

var G__17079 = (i_17078 + (1));
i_17078 = G__17079;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__17080 = null;
var G__17080__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__17080__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__17080 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17080__2.call(this,self__,k);
case 3:
return G__17080__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17080.cljs$core$IFn$_invoke$arity$2 = G__17080__2;
G__17080.cljs$core$IFn$_invoke$arity$3 = G__17080__3;
return G__17080;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args17055){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17055)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__17081 = (i + (1));
var G__17082 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__17081;
out = G__17082;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__17083__i = 0, G__17083__a = new Array(arguments.length -  0);
while (G__17083__i < G__17083__a.length) {G__17083__a[G__17083__i] = arguments[G__17083__i + 0]; ++G__17083__i;}
  args = new cljs.core.IndexedSeq(G__17083__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__17084){
var args = cljs.core.seq(arglist__17084);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__17085 = self__.vec;
var G__17086 = self__.node;
var G__17087 = self__.i;
var G__17088 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__17085,G__17086,G__17087,G__17088) : cljs.core.chunked_seq.call(null,G__17085,G__17086,G__17087,G__17088));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__17089 = self__.vec;
var G__17090 = (self__.i + self__.off);
var G__17091 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__17089,G__17090,G__17091) : cljs.core.subvec.call(null,G__17089,G__17090,G__17091));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__17092 = self__.vec;
var G__17093 = (self__.i + self__.off);
var G__17094 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__17092,G__17093,G__17094) : cljs.core.subvec.call(null,G__17092,G__17093,G__17094));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__17095 = self__.vec;
var G__17096 = self__.node;
var G__17097 = self__.i;
var G__17098 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__17095,G__17096,G__17097,G__17098) : cljs.core.chunked_seq.call(null,G__17095,G__17096,G__17097,G__17098));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__17099 = self__.vec;
var G__17100 = cljs.core.unchecked_array_for(self__.vec,end);
var G__17101 = end;
var G__17102 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__17099,G__17100,G__17101,G__17102) : cljs.core.chunked_seq.call(null,G__17099,G__17100,G__17101,G__17102));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__17103 = self__.vec;
var G__17104 = self__.node;
var G__17105 = self__.i;
var G__17106 = self__.off;
var G__17107 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__17103,G__17104,G__17105,G__17106,G__17107) : cljs.core.chunked_seq.call(null,G__17103,G__17104,G__17105,G__17106,G__17107));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__17108 = self__.vec;
var G__17109 = cljs.core.unchecked_array_for(self__.vec,end);
var G__17110 = end;
var G__17111 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__17108,G__17109,G__17110,G__17111) : cljs.core.chunked_seq.call(null,G__17108,G__17109,G__17110,G__17111));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__17113 = self__.meta;
var G__17114 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__17115 = self__.start;
var G__17116 = (function (){var x__11946__auto__ = self__.end;
var y__11947__auto__ = (v_pos + (1));
return ((x__11946__auto__ > y__11947__auto__) ? x__11946__auto__ : y__11947__auto__);
})();
var G__17117 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__17113,G__17114,G__17115,G__17116,G__17117) : cljs.core.build_subvec.call(null,G__17113,G__17114,G__17115,G__17116,G__17117));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__17118 = self__.meta;
var G__17119 = self__.v;
var G__17120 = self__.start;
var G__17121 = (self__.end - (1));
var G__17122 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__17118,G__17119,G__17120,G__17121,G__17122) : cljs.core.build_subvec.call(null,G__17118,G__17119,G__17120,G__17121,G__17122));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__17124 = meta__$1;
var G__17125 = self__.v;
var G__17126 = self__.start;
var G__17127 = self__.end;
var G__17128 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__17124,G__17125,G__17126,G__17127,G__17128) : cljs.core.build_subvec.call(null,G__17124,G__17125,G__17126,G__17127,G__17128));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__17129 = self__.meta;
var G__17130 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__17131 = self__.start;
var G__17132 = (self__.end + (1));
var G__17133 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__17129,G__17130,G__17131,G__17132,G__17133) : cljs.core.build_subvec.call(null,G__17129,G__17130,G__17131,G__17132,G__17133));
});

cljs.core.Subvec.prototype.call = (function() {
var G__17134 = null;
var G__17134__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__17134__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__17134 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17134__2.call(this,self__,k);
case 3:
return G__17134__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17134.cljs$core$IFn$_invoke$arity$2 = G__17134__2;
G__17134.cljs$core$IFn$_invoke$arity$3 = G__17134__3;
return G__17134;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args17112){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17112)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__17135 = meta;
var G__17136 = v.v;
var G__17137 = (v.start + start);
var G__17138 = (v.start + end);
var G__17139 = __hash;
meta = G__17135;
v = G__17136;
start = G__17137;
end = G__17138;
__hash = G__17139;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj17146 = {};
return obj17146;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__17154 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__17155 = (level - (5));
node = G__17154;
level = G__17155;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__17159 = null;
var G__17159__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17159__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17159 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17159__2.call(this,self__,k);
case 3:
return G__17159__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17159.cljs$core$IFn$_invoke$arity$2 = G__17159__2;
G__17159.cljs$core$IFn$_invoke$arity$3 = G__17159__3;
return G__17159;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args17156){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17156)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__11629__auto__ = self__.front;
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__11629__auto__ = self__.rear;
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__17160 = (i + incr);
i = G__17160;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__17161 = (i + (1));
var G__17162 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__17161;
out = G__17162;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj17166 = {};
return obj17166;
})();
var l = ks.length;
var i_17167 = (0);
while(true){
if((i_17167 < l)){
var k_17168 = (ks[i_17167]);
(new_obj[k_17168] = (obj[k_17168]));

var G__17169 = (i_17167 + (1));
i_17167 = G__17169;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__11617__auto__ = (function (){var G__17173 = k;
return goog.isString(G__17173);
})();
if(cljs.core.truth_(and__11617__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__11617__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__17174 = init__$1;
var G__17175 = k;
var G__17176 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17174,G__17175,G__17176) : f.call(null,G__17174,G__17175,G__17176));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17177 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17177) : cljs.core.deref.call(null,G__17177));
} else {
var G__17183 = cljs.core.rest(keys__$1);
var G__17184 = init__$2;
keys__$1 = G__17183;
init__$1 = G__17184;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__11617__auto__ = (function (){var G__17179 = k;
return goog.isString(G__17179);
})();
if(cljs.core.truth_(and__11617__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__11617__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__17180 = k;
return goog.isString(G__17180);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__11617__auto__ = (function (){var G__17182 = k;
return goog.isString(G__17182);
})();
if(cljs.core.truth_(and__11617__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__11617__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__17170_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__17170_SHARP_,(self__.strobj[p1__17170_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__17185 = null;
var G__17185__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17185__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17185 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17185__2.call(this,self__,k);
case 3:
return G__17185__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17185.cljs$core$IFn$_invoke$arity$2 = G__17185__2;
G__17185.cljs$core$IFn$_invoke$arity$3 = G__17185__3;
return G__17185;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args17171){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17171)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj17187 = {};
return obj17187;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__17188 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17188,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17188,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__17189 = (i + (2));
i = G__17189;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__17190 = (i + (2));
i = G__17190;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__17191 = (i + (2));
i = G__17191;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__17192 = (i + (2));
i = G__17192;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__17193 = (i + (2));
i = G__17193;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__11629__auto__ = (function (){var G__17197 = k;
return goog.isString(G__17197);
})();
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_17198 = (0);
while(true){
if((i_17198 < l)){
(narr[i_17198] = (arr[i_17198]));

var G__17199 = (i_17198 + (1));
i_17198 = G__17199;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17201 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__17201) : cljs.core.keys.call(null,G__17201));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17202 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__17202) : cljs.core.vals.call(null,G__17202));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17203 = cljs.core.seq(coll);
var chunk__17204 = null;
var count__17205 = (0);
var i__17206 = (0);
while(true){
if((i__17206 < count__17205)){
var vec__17207 = chunk__17204.cljs$core$IIndexed$_nth$arity$2(null,i__17206);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17207,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17207,(1),null);
var G__17208_17221 = v;
var G__17209_17222 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17208_17221,G__17209_17222) : f.call(null,G__17208_17221,G__17209_17222));

var G__17223 = seq__17203;
var G__17224 = chunk__17204;
var G__17225 = count__17205;
var G__17226 = (i__17206 + (1));
seq__17203 = G__17223;
chunk__17204 = G__17224;
count__17205 = G__17225;
i__17206 = G__17226;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17203);
if(temp__4126__auto__){
var seq__17203__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17203__$1)){
var c__12416__auto__ = cljs.core.chunk_first(seq__17203__$1);
var G__17227 = cljs.core.chunk_rest(seq__17203__$1);
var G__17228 = c__12416__auto__;
var G__17229 = cljs.core.count(c__12416__auto__);
var G__17230 = (0);
seq__17203 = G__17227;
chunk__17204 = G__17228;
count__17205 = G__17229;
i__17206 = G__17230;
continue;
} else {
var vec__17210 = cljs.core.first(seq__17203__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17210,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17210,(1),null);
var G__17211_17231 = v;
var G__17212_17232 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17211_17231,G__17212_17232) : f.call(null,G__17211_17231,G__17212_17232));

var G__17233 = cljs.core.next(seq__17203__$1);
var G__17234 = null;
var G__17235 = (0);
var G__17236 = (0);
seq__17203 = G__17233;
chunk__17204 = G__17234;
count__17205 = G__17235;
i__17206 = G__17236;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__17213 = init__$1;
var G__17214 = (self__.arr[i]);
var G__17215 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17213,G__17214,G__17215) : f.call(null,G__17213,G__17214,G__17215));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17216 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17216) : cljs.core.deref.call(null,G__17216));
} else {
var G__17237 = (i + (2));
var G__17238 = init__$2;
i = G__17237;
init__$1 = G__17238;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__17217 = other;
if(G__17217){
var bit__12303__auto__ = (G__17217.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__12303__auto__) || (G__17217.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__17239 = (i + (2));
i = G__17239;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj17219 = {};
return obj17219;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__17240 = (s + (2));
var G__17241 = d;
s = G__17240;
d = G__17241;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__17242 = (s + (2));
var G__17243 = (d + (2));
s = G__17242;
d = G__17243;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__17220 = cljs.core.aclone(self__.arr);
(G__17220[(idx + (1))] = v);

return G__17220;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__17244 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__17245 = cljs.core.next(es);
ret = G__17244;
es = G__17245;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__17246 = null;
var G__17246__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17246__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17246 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17246__2.call(this,self__,k);
case 3:
return G__17246__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17246.cljs$core$IFn$_invoke$arity$2 = G__17246__2;
G__17246.cljs$core$IFn$_invoke$arity$3 = G__17246__3;
return G__17246;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args17200){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17200)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__17247 = (i + (2));
var G__17248 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__17247;
ret = G__17248;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__17249_17257 = self__.arr;
G__17249_17257.pop();

G__17249_17257.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__17250 = self__.len;
var G__17251 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__17250,G__17251) : cljs.core.array__GT_transient_hash_map.call(null,G__17250,G__17251));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__17252 = o;
if(G__17252){
var bit__12310__auto__ = (G__17252.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__12310__auto__) || (G__17252.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__17252.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__17252);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__17252);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__17253 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17253) : cljs.core.key.call(null,G__17253));
})(),(function (){var G__17254 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17254) : cljs.core.val.call(null,G__17254));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__17258 = cljs.core.next(es);
var G__17259 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__17255 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17255) : cljs.core.key.call(null,G__17255));
})(),(function (){var G__17256 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17256) : cljs.core.val.call(null,G__17256));
})());
es = G__17258;
tcoll__$2 = G__17259;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__17260 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__17261 = (i + (2));
out = G__17260;
i = G__17261;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__17264 = cljs.core.aclone(arr);
(G__17264[i] = a);

return G__17264;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__17265 = cljs.core.aclone(arr);
(G__17265[i] = a);

(G__17265[j] = b);

return G__17265;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__17270 = init__$1;
var G__17271 = k;
var G__17272 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17270,G__17271,G__17272) : f.call(null,G__17270,G__17271,G__17272));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17273 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17273) : cljs.core.deref.call(null,G__17273));
} else {
var G__17274 = (i + (2));
var G__17275 = init__$2;
i = G__17274;
init__$1 = G__17275;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__17276 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__17276) : cljs.core.create_inode_seq.call(null,G__17276));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_17290 = (0);
var j_17291 = (0);
while(true){
if((i_17290 < (32))){
if((((self__.bitmap >>> i_17290) & (1)) === (0))){
var G__17292 = (i_17290 + (1));
var G__17293 = j_17291;
i_17290 = G__17292;
j_17291 = G__17293;
continue;
} else {
(nodes[i_17290] = ((!(((self__.arr[j_17291]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_17291])),(self__.arr[j_17291]),(self__.arr[(j_17291 + (1))]),added_leaf_QMARK_):(self__.arr[(j_17291 + (1))])));

var G__17294 = (i_17290 + (1));
var G__17295 = (j_17291 + (2));
i_17290 = G__17294;
j_17291 = G__17295;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__17277 = edit__$1;
var G__17278 = (shift + (5));
var G__17279 = key_or_nil;
var G__17280 = val_or_node;
var G__17281 = hash;
var G__17282 = key;
var G__17283 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__17277,G__17278,G__17279,G__17280,G__17281,G__17282,G__17283) : cljs.core.create_node.call(null,G__17277,G__17278,G__17279,G__17280,G__17281,G__17282,G__17283));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_17296 = (0);
var j_17297 = (0);
while(true){
if((i_17296 < (32))){
if((((self__.bitmap >>> i_17296) & (1)) === (0))){
var G__17298 = (i_17296 + (1));
var G__17299 = j_17297;
i_17296 = G__17298;
j_17297 = G__17299;
continue;
} else {
(nodes[i_17296] = ((!(((self__.arr[j_17297]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_17297])),(self__.arr[j_17297]),(self__.arr[(j_17297 + (1))]),added_leaf_QMARK_):(self__.arr[(j_17297 + (1))])));

var G__17300 = (i_17296 + (1));
var G__17301 = (j_17297 + (2));
i_17296 = G__17300;
j_17297 = G__17301;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__17284 = (shift + (5));
var G__17285 = key_or_nil;
var G__17286 = val_or_node;
var G__17287 = hash;
var G__17288 = key;
var G__17289 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__17284,G__17285,G__17286,G__17287,G__17288,G__17289) : cljs.core.create_node.call(null,G__17284,G__17285,G__17286,G__17287,G__17288,G__17289));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__17303 = (i + (1));
var G__17304 = (j + (2));
var G__17305 = (bitmap | ((1) << i));
i = G__17303;
j = G__17304;
bitmap = G__17305;
continue;
} else {
var G__17306 = (i + (1));
var G__17307 = j;
var G__17308 = bitmap;
i = G__17306;
j = G__17307;
bitmap = G__17308;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__17309 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__17309) : cljs.core.create_array_node_seq.call(null,G__17309));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17310 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17310) : cljs.core.deref.call(null,G__17310));
} else {
var G__17311 = (i + (1));
var G__17312 = init__$2;
i = G__17311;
init__$1 = G__17312;
continue;
}
} else {
var G__17313 = (i + (1));
var G__17314 = init__$1;
i = G__17313;
init__$1 = G__17314;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__17315 = (i + (2));
i = G__17315;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__17316 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__17316) : cljs.core.create_inode_seq.call(null,G__17316));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__17317 = self__.nodes;
var G__17318 = (self__.i + (2));
var G__17319 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__17317,G__17318,G__17319) : cljs.core.create_inode_seq.call(null,G__17317,G__17318,G__17319));
} else {
var G__17320 = self__.nodes;
var G__17321 = self__.i;
var G__17322 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__17320,G__17321,G__17322) : cljs.core.create_inode_seq.call(null,G__17320,G__17321,G__17322));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__17326 = (j + (2));
j = G__17326;
continue;
}
} else {
var G__17327 = (j + (2));
j = G__17327;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__17328 = null;
var G__17329 = self__.nodes;
var G__17330 = self__.i;
var G__17331 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__17328,G__17329,G__17330,G__17331) : cljs.core.create_array_node_seq.call(null,G__17328,G__17329,G__17330,G__17331));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__17336 = (j + (1));
j = G__17336;
continue;
}
} else {
var G__17337 = (j + (1));
j = G__17337;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17339 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__17339) : cljs.core.keys.call(null,G__17339));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17340 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__17340) : cljs.core.vals.call(null,G__17340));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17341 = cljs.core.seq(coll);
var chunk__17342 = null;
var count__17343 = (0);
var i__17344 = (0);
while(true){
if((i__17344 < count__17343)){
var vec__17345 = chunk__17342.cljs$core$IIndexed$_nth$arity$2(null,i__17344);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17345,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17345,(1),null);
var G__17346_17357 = v;
var G__17347_17358 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17346_17357,G__17347_17358) : f.call(null,G__17346_17357,G__17347_17358));

var G__17359 = seq__17341;
var G__17360 = chunk__17342;
var G__17361 = count__17343;
var G__17362 = (i__17344 + (1));
seq__17341 = G__17359;
chunk__17342 = G__17360;
count__17343 = G__17361;
i__17344 = G__17362;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17341);
if(temp__4126__auto__){
var seq__17341__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17341__$1)){
var c__12416__auto__ = cljs.core.chunk_first(seq__17341__$1);
var G__17363 = cljs.core.chunk_rest(seq__17341__$1);
var G__17364 = c__12416__auto__;
var G__17365 = cljs.core.count(c__12416__auto__);
var G__17366 = (0);
seq__17341 = G__17363;
chunk__17342 = G__17364;
count__17343 = G__17365;
i__17344 = G__17366;
continue;
} else {
var vec__17348 = cljs.core.first(seq__17341__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17348,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17348,(1),null);
var G__17349_17367 = v;
var G__17350_17368 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17349_17367,G__17350_17368) : f.call(null,G__17349_17367,G__17350_17368));

var G__17369 = cljs.core.next(seq__17341__$1);
var G__17370 = null;
var G__17371 = (0);
var G__17372 = (0);
seq__17341 = G__17369;
chunk__17342 = G__17370;
count__17343 = G__17371;
i__17344 = G__17372;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__17351 = init;
var G__17352 = null;
var G__17353 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17351,G__17352,G__17353) : f.call(null,G__17351,G__17352,G__17353));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__17354 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17354) : cljs.core.deref.call(null,G__17354));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj17356 = {};
return obj17356;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__17373 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__17374 = cljs.core.next(es);
ret = G__17373;
es = G__17374;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__17375 = null;
var G__17375__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17375__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17375 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17375__2.call(this,self__,k);
case 3:
return G__17375__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17375.cljs$core$IFn$_invoke$arity$2 = G__17375__2;
G__17375.cljs$core$IFn$_invoke$arity$3 = G__17375__3;
return G__17375;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args17338){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17338)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__17376 = (i + (1));
var G__17377 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__17376;
out = G__17377;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__17378 = o;
if(G__17378){
var bit__12310__auto__ = (G__17378.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__12310__auto__) || (G__17378.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__17378.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__17378);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__17378);
}
})()){
return tcoll.assoc_BANG_((function (){var G__17379 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17379) : cljs.core.key.call(null,G__17379));
})(),(function (){var G__17380 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17380) : cljs.core.val.call(null,G__17380));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__17383 = cljs.core.next(es);
var G__17384 = tcoll__$1.assoc_BANG_((function (){var G__17381 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17381) : cljs.core.key.call(null,G__17381));
})(),(function (){var G__17382 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17382) : cljs.core.val.call(null,G__17382));
})());
es = G__17383;
tcoll__$1 = G__17384;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__17385 = ((ascending_QMARK_)?t.left:t.right);
var G__17386 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__17385;
stack__$1 = G__17386;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__17399 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17399) : cljs.core.deref.call(null,G__17399));
} else {
var init__$2 = (function (){var G__17400 = init__$1;
var G__17401 = node.key;
var G__17402 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17400,G__17401,G__17402) : f.call(null,G__17400,G__17401,G__17402));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17403 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17403) : cljs.core.deref.call(null,G__17403));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__17404 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17404) : cljs.core.deref.call(null,G__17404));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__17406 = null;
var G__17406__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17406__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17406 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17406__2.call(this,self__,k);
case 3:
return G__17406__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17406.cljs$core$IFn$_invoke$arity$2 = G__17406__2;
G__17406.cljs$core$IFn$_invoke$arity$3 = G__17406__3;
return G__17406;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args17405){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17405)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__17408 = null;
var G__17408__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17408__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17408 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17408__2.call(this,self__,k);
case 3:
return G__17408__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17408.cljs$core$IFn$_invoke$arity$2 = G__17408__2;
G__17408.cljs$core$IFn$_invoke$arity$3 = G__17408__3;
return G__17408;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args17407){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17407)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__17421 = k;
var G__17422 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__17421,G__17422) : comp.call(null,G__17421,G__17422));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__17441 = k;
var G__17442 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__17441,G__17442) : comp.call(null,G__17441,G__17442));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__17453 = k;
var G__17454 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__17453,G__17454) : comp.call(null,G__17453,G__17454));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17456 = cljs.core.seq(coll);
var chunk__17457 = null;
var count__17458 = (0);
var i__17459 = (0);
while(true){
if((i__17459 < count__17458)){
var vec__17460 = chunk__17457.cljs$core$IIndexed$_nth$arity$2(null,i__17459);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17460,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17460,(1),null);
var G__17461_17473 = v;
var G__17462_17474 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17461_17473,G__17462_17474) : f.call(null,G__17461_17473,G__17462_17474));

var G__17475 = seq__17456;
var G__17476 = chunk__17457;
var G__17477 = count__17458;
var G__17478 = (i__17459 + (1));
seq__17456 = G__17475;
chunk__17457 = G__17476;
count__17458 = G__17477;
i__17459 = G__17478;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17456);
if(temp__4126__auto__){
var seq__17456__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17456__$1)){
var c__12416__auto__ = cljs.core.chunk_first(seq__17456__$1);
var G__17479 = cljs.core.chunk_rest(seq__17456__$1);
var G__17480 = c__12416__auto__;
var G__17481 = cljs.core.count(c__12416__auto__);
var G__17482 = (0);
seq__17456 = G__17479;
chunk__17457 = G__17480;
count__17458 = G__17481;
i__17459 = G__17482;
continue;
} else {
var vec__17463 = cljs.core.first(seq__17456__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17463,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17463,(1),null);
var G__17464_17483 = v;
var G__17465_17484 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17464_17483,G__17465_17484) : f.call(null,G__17464_17483,G__17465_17484));

var G__17485 = cljs.core.next(seq__17456__$1);
var G__17486 = null;
var G__17487 = (0);
var G__17488 = (0);
seq__17456 = G__17485;
chunk__17457 = G__17486;
count__17458 = G__17487;
i__17459 = G__17488;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17466 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__17466) : cljs.core.keys.call(null,G__17466));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17467 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__17467) : cljs.core.vals.call(null,G__17467));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__17468 = k;
var G__17469 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__17468,G__17469) : self__.comp.call(null,G__17468,G__17469));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__17489 = t.left;
t = G__17489;
continue;
} else {
var G__17490 = t.right;
t = G__17490;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__17491 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__17492 = cljs.core.next(es);
ret = G__17491;
es = G__17492;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__17493 = null;
var G__17493__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17493__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17493 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17493__2.call(this,self__,k);
case 3:
return G__17493__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17493.cljs$core$IFn$_invoke$arity$2 = G__17493__2;
G__17493.cljs$core$IFn$_invoke$arity$3 = G__17493__3;
return G__17493;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args17455){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17455)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__17470 = k;
var G__17471 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__17470,G__17471) : self__.comp.call(null,G__17470,G__17471));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__17494 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__17495 = t.left;
stack = G__17494;
t = G__17495;
continue;
} else {
var G__17496 = stack;
var G__17497 = t.right;
stack = G__17496;
t = G__17497;
continue;
}
} else {
if((c > (0))){
var G__17498 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__17499 = t.right;
stack = G__17498;
t = G__17499;
continue;
} else {
var G__17500 = stack;
var G__17501 = t.left;
stack = G__17500;
t = G__17501;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__17472 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17472) : cljs.core.key.call(null,G__17472));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__17502 = cljs.core.nnext(in$);
var G__17503 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__17502;
out = G__17503;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__17504__i = 0, G__17504__a = new Array(arguments.length -  0);
while (G__17504__i < G__17504__a.length) {G__17504__a[G__17504__i] = arguments[G__17504__i + 0]; ++G__17504__i;}
  keyvals = new cljs.core.IndexedSeq(G__17504__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__17505){
var keyvals = cljs.core.seq(arglist__17505);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__17506__i = 0, G__17506__a = new Array(arguments.length -  0);
while (G__17506__i < G__17506__a.length) {G__17506__a[G__17506__i] = arguments[G__17506__i + 0]; ++G__17506__i;}
  keyvals = new cljs.core.IndexedSeq(G__17506__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__17507){
var keyvals = cljs.core.seq(arglist__17507);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj17511 = {};
return obj17511;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__17512 = cljs.core.nnext(kvs);
kvs = G__17512;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__17513__i = 0, G__17513__a = new Array(arguments.length -  0);
while (G__17513__i < G__17513__a.length) {G__17513__a[G__17513__i] = arguments[G__17513__i + 0]; ++G__17513__i;}
  keyvals = new cljs.core.IndexedSeq(G__17513__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__17514){
var keyvals = cljs.core.seq(arglist__17514);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__17515 = cljs.core.nnext(in$);
var G__17516 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__17515;
out = G__17516;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__17517__i = 0, G__17517__a = new Array(arguments.length -  0);
while (G__17517__i < G__17517__a.length) {G__17517__a[G__17517__i] = arguments[G__17517__i + 0]; ++G__17517__i;}
  keyvals = new cljs.core.IndexedSeq(G__17517__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__17518){
var keyvals = cljs.core.seq(arglist__17518);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__17519 = cljs.core.nnext(in$);
var G__17520 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__17519;
out = G__17520;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__17521__i = 0, G__17521__a = new Array(arguments.length -  1);
while (G__17521__i < G__17521__a.length) {G__17521__a[G__17521__i] = arguments[G__17521__i + 1]; ++G__17521__i;}
  keyvals = new cljs.core.IndexedSeq(G__17521__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__17522){
var comparator = cljs.core.first(arglist__17522);
var keyvals = cljs.core.rest(arglist__17522);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__17523 = self__.mseq;
if(G__17523){
var bit__12310__auto__ = (G__17523.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12310__auto__) || (G__17523.cljs$core$INext$)){
return true;
} else {
if((!G__17523.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17523);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17523);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__17524 = self__.mseq;
if(G__17524){
var bit__12310__auto__ = (G__17524.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12310__auto__) || (G__17524.cljs$core$INext$)){
return true;
} else {
if((!G__17524.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17524);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17524);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__17525 = self__.mseq;
if(G__17525){
var bit__12310__auto__ = (G__17525.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12310__auto__) || (G__17525.cljs$core$INext$)){
return true;
} else {
if((!G__17525.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17525);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17525);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__17526 = self__.mseq;
if(G__17526){
var bit__12310__auto__ = (G__17526.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12310__auto__) || (G__17526.cljs$core$INext$)){
return true;
} else {
if((!G__17526.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17526);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17526);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__17527_SHARP_,p2__17528_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__11629__auto__ = p1__17527_SHARP_;
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__17528_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__17529__i = 0, G__17529__a = new Array(arguments.length -  0);
while (G__17529__i < G__17529__a.length) {G__17529__a[G__17529__i] = arguments[G__17529__i + 0]; ++G__17529__i;}
  maps = new cljs.core.IndexedSeq(G__17529__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__17530){
var maps = cljs.core.seq(arglist__17530);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__17533 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__17534 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17533,G__17534) : f.call(null,G__17533,G__17534));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__11629__auto__ = m1;
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__17535__i = 0, G__17535__a = new Array(arguments.length -  1);
while (G__17535__i < G__17535__a.length) {G__17535__a[G__17535__i] = arguments[G__17535__i + 1]; ++G__17535__i;}
  maps = new cljs.core.IndexedSeq(G__17535__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__17536){
var f = cljs.core.first(arglist__17536);
var maps = cljs.core.rest(arglist__17536);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__17537 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__17538 = cljs.core.next(keys);
ret = G__17537;
keys = G__17538;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17541 = cljs.core.seq(coll);
var chunk__17542 = null;
var count__17543 = (0);
var i__17544 = (0);
while(true){
if((i__17544 < count__17543)){
var vec__17545 = chunk__17542.cljs$core$IIndexed$_nth$arity$2(null,i__17544);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17545,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17545,(1),null);
var G__17546_17551 = v;
var G__17547_17552 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17546_17551,G__17547_17552) : f.call(null,G__17546_17551,G__17547_17552));

var G__17553 = seq__17541;
var G__17554 = chunk__17542;
var G__17555 = count__17543;
var G__17556 = (i__17544 + (1));
seq__17541 = G__17553;
chunk__17542 = G__17554;
count__17543 = G__17555;
i__17544 = G__17556;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17541);
if(temp__4126__auto__){
var seq__17541__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17541__$1)){
var c__12416__auto__ = cljs.core.chunk_first(seq__17541__$1);
var G__17557 = cljs.core.chunk_rest(seq__17541__$1);
var G__17558 = c__12416__auto__;
var G__17559 = cljs.core.count(c__12416__auto__);
var G__17560 = (0);
seq__17541 = G__17557;
chunk__17542 = G__17558;
count__17543 = G__17559;
i__17544 = G__17560;
continue;
} else {
var vec__17548 = cljs.core.first(seq__17541__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17548,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17548,(1),null);
var G__17549_17561 = v;
var G__17550_17562 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17549_17561,G__17550_17562) : f.call(null,G__17549_17561,G__17550_17562));

var G__17563 = cljs.core.next(seq__17541__$1);
var G__17564 = null;
var G__17565 = (0);
var G__17566 = (0);
seq__17541 = G__17563;
chunk__17542 = G__17564;
count__17543 = G__17565;
i__17544 = G__17566;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__17539_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__17539_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__17567 = null;
var G__17567__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17567__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17567 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17567__2.call(this,self__,k);
case 3:
return G__17567__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17567.cljs$core$IFn$_invoke$arity$2 = G__17567__2;
G__17567.cljs$core$IFn$_invoke$arity$3 = G__17567__3;
return G__17567;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args17540){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17540)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__17568 = (i + (1));
var G__17569 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__17568;
out = G__17569;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__17570 = (i + (1));
var G__17571 = cljs.core._conj_BANG_(out,(items[i]));
i = G__17570;
out = G__17571;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__17573 = null;
var G__17573__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__17573__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__17573 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17573__2.call(this,self__,k);
case 3:
return G__17573__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17573.cljs$core$IFn$_invoke$arity$2 = G__17573__2;
G__17573.cljs$core$IFn$_invoke$arity$3 = G__17573__3;
return G__17573;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args17572){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17572)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17576 = cljs.core.seq(coll);
var chunk__17577 = null;
var count__17578 = (0);
var i__17579 = (0);
while(true){
if((i__17579 < count__17578)){
var vec__17580 = chunk__17577.cljs$core$IIndexed$_nth$arity$2(null,i__17579);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17580,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17580,(1),null);
var G__17581_17586 = v;
var G__17582_17587 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17581_17586,G__17582_17587) : f.call(null,G__17581_17586,G__17582_17587));

var G__17588 = seq__17576;
var G__17589 = chunk__17577;
var G__17590 = count__17578;
var G__17591 = (i__17579 + (1));
seq__17576 = G__17588;
chunk__17577 = G__17589;
count__17578 = G__17590;
i__17579 = G__17591;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17576);
if(temp__4126__auto__){
var seq__17576__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17576__$1)){
var c__12416__auto__ = cljs.core.chunk_first(seq__17576__$1);
var G__17592 = cljs.core.chunk_rest(seq__17576__$1);
var G__17593 = c__12416__auto__;
var G__17594 = cljs.core.count(c__12416__auto__);
var G__17595 = (0);
seq__17576 = G__17592;
chunk__17577 = G__17593;
count__17578 = G__17594;
i__17579 = G__17595;
continue;
} else {
var vec__17583 = cljs.core.first(seq__17576__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17583,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17583,(1),null);
var G__17584_17596 = v;
var G__17585_17597 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17584_17596,G__17585_17597) : f.call(null,G__17584_17596,G__17585_17597));

var G__17598 = cljs.core.next(seq__17576__$1);
var G__17599 = null;
var G__17600 = (0);
var G__17601 = (0);
seq__17576 = G__17598;
chunk__17577 = G__17599;
count__17578 = G__17600;
i__17579 = G__17601;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__17574_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__17574_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__17602 = null;
var G__17602__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17602__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17602 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17602__2.call(this,self__,k);
case 3:
return G__17602__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17602.cljs$core$IFn$_invoke$arity$2 = G__17602__2;
G__17602.cljs$core$IFn$_invoke$arity$3 = G__17602__3;
return G__17602;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args17575){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17575)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__12510__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__12510__auto__.length)){
var G__17603 = (i + (1));
var G__17604 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__17603;
res = G__17604;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__17605 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__17606 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__17605;
out = G__17606;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__17607__delegate = function (keys){
return cljs.core.set(keys);
};
var G__17607 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__17608__i = 0, G__17608__a = new Array(arguments.length -  0);
while (G__17608__i < G__17608__a.length) {G__17608__a[G__17608__i] = arguments[G__17608__i + 0]; ++G__17608__i;}
  keys = new cljs.core.IndexedSeq(G__17608__a,0);
} 
return G__17607__delegate.call(this,keys);};
G__17607.cljs$lang$maxFixedArity = 0;
G__17607.cljs$lang$applyTo = (function (arglist__17609){
var keys = cljs.core.seq(arglist__17609);
return G__17607__delegate(keys);
});
G__17607.cljs$core$IFn$_invoke$arity$variadic = G__17607__delegate;
return G__17607;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__17610 = null;
if (arguments.length > 0) {
var G__17611__i = 0, G__17611__a = new Array(arguments.length -  0);
while (G__17611__i < G__17611__a.length) {G__17611__a[G__17611__i] = arguments[G__17611__i + 0]; ++G__17611__i;}
G__17610 = new cljs.core.IndexedSeq(G__17611__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__17610);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__17612__i = 0, G__17612__a = new Array(arguments.length -  0);
while (G__17612__i < G__17612__a.length) {G__17612__a[G__17612__i] = arguments[G__17612__i + 0]; ++G__17612__i;}
  keys = new cljs.core.IndexedSeq(G__17612__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__17613){
var keys = cljs.core.seq(arglist__17613);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__17614__i = 0, G__17614__a = new Array(arguments.length -  1);
while (G__17614__i < G__17614__a.length) {G__17614__a[G__17614__i] = arguments[G__17614__i + 1]; ++G__17614__i;}
  keys = new cljs.core.IndexedSeq(G__17614__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__17615){
var comparator = cljs.core.first(arglist__17615);
var keys = cljs.core.rest(arglist__17615);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__17616_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__17616_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__17616_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__17617_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__17617_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__17617_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__17628,seen__$1){
while(true){
var vec__17629 = p__17628;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17629,(0),null);
var xs__$1 = vec__17629;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__17630 = cljs.core.rest(s);
var G__17631 = seen__$1;
p__17628 = G__17630;
seen__$1 = G__17631;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__17632 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__17633 = cljs.core.next(s__$1);
ret = G__17632;
s__$1 = G__17633;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__17635 = x;
if(G__17635){
var bit__12303__auto__ = (G__17635.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__12303__auto__) || (G__17635.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__17636 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__17637 = cljs.core.next(ks);
var G__17638 = cljs.core.next(vs);
map = G__17636;
ks = G__17637;
vs = G__17638;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__17649 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17649) : k.call(null,G__17649));
})() > (function (){var G__17650 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17650) : k.call(null,G__17650));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__17651__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__17639_SHARP_,p2__17640_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__17639_SHARP_,p2__17640_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__17651 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__17652__i = 0, G__17652__a = new Array(arguments.length -  3);
while (G__17652__i < G__17652__a.length) {G__17652__a[G__17652__i] = arguments[G__17652__i + 3]; ++G__17652__i;}
  more = new cljs.core.IndexedSeq(G__17652__a,0);
} 
return G__17651__delegate.call(this,k,x,y,more);};
G__17651.cljs$lang$maxFixedArity = 3;
G__17651.cljs$lang$applyTo = (function (arglist__17653){
var k = cljs.core.first(arglist__17653);
arglist__17653 = cljs.core.next(arglist__17653);
var x = cljs.core.first(arglist__17653);
arglist__17653 = cljs.core.next(arglist__17653);
var y = cljs.core.first(arglist__17653);
var more = cljs.core.rest(arglist__17653);
return G__17651__delegate(k,x,y,more);
});
G__17651.cljs$core$IFn$_invoke$arity$variadic = G__17651__delegate;
return G__17651;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__17654 = null;
if (arguments.length > 3) {
var G__17655__i = 0, G__17655__a = new Array(arguments.length -  3);
while (G__17655__i < G__17655__a.length) {G__17655__a[G__17655__i] = arguments[G__17655__i + 3]; ++G__17655__i;}
G__17654 = new cljs.core.IndexedSeq(G__17655__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__17654);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__17666 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17666) : k.call(null,G__17666));
})() < (function (){var G__17667 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17667) : k.call(null,G__17667));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__17668__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__17656_SHARP_,p2__17657_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__17656_SHARP_,p2__17657_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__17668 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__17669__i = 0, G__17669__a = new Array(arguments.length -  3);
while (G__17669__i < G__17669__a.length) {G__17669__a[G__17669__i] = arguments[G__17669__i + 3]; ++G__17669__i;}
  more = new cljs.core.IndexedSeq(G__17669__a,0);
} 
return G__17668__delegate.call(this,k,x,y,more);};
G__17668.cljs$lang$maxFixedArity = 3;
G__17668.cljs$lang$applyTo = (function (arglist__17670){
var k = cljs.core.first(arglist__17670);
arglist__17670 = cljs.core.next(arglist__17670);
var x = cljs.core.first(arglist__17670);
arglist__17670 = cljs.core.next(arglist__17670);
var y = cljs.core.first(arglist__17670);
var more = cljs.core.rest(arglist__17670);
return G__17668__delegate(k,x,y,more);
});
G__17668.cljs$core$IFn$_invoke$arity$variadic = G__17668__delegate;
return G__17668;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__17671 = null;
if (arguments.length > 3) {
var G__17672__i = 0, G__17672__a = new Array(arguments.length -  3);
while (G__17672__i < G__17672__a.length) {G__17672__a[G__17672__i] = arguments[G__17672__i + 3]; ++G__17672__i;}
G__17671 = new cljs.core.IndexedSeq(G__17672__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__17671);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__17689 = null;
var G__17689__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17689__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__17684 = result;
var G__17685 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17684,G__17685) : rf.call(null,G__17684,G__17685));
})());
})());
var G__17686 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17686) : rf.call(null,G__17686));
});
var G__17689__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__17687 = result;
var G__17688 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17687,G__17688) : rf.call(null,G__17687,G__17688));
} else {
return result;
}
});
G__17689 = function(result,input){
switch(arguments.length){
case 0:
return G__17689__0.call(this);
case 1:
return G__17689__1.call(this,result);
case 2:
return G__17689__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17689.cljs$core$IFn$_invoke$arity$0 = G__17689__0;
G__17689.cljs$core$IFn$_invoke$arity$1 = G__17689__1;
G__17689.cljs$core$IFn$_invoke$arity$2 = G__17689__2;
return G__17689;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__17702 = null;
var G__17702__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17702__1 = (function (result){
var G__17697 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17697) : rf.call(null,G__17697));
});
var G__17702__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__17698 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__17698) : pred.call(null,G__17698));
})())){
var G__17699 = result;
var G__17700 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17699,G__17700) : rf.call(null,G__17699,G__17700));
} else {
return cljs.core.reduced(result);
}
});
G__17702 = function(result,input){
switch(arguments.length){
case 0:
return G__17702__0.call(this);
case 1:
return G__17702__1.call(this,result);
case 2:
return G__17702__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17702.cljs$core$IFn$_invoke$arity$0 = G__17702__0;
G__17702.cljs$core$IFn$_invoke$arity$1 = G__17702__1;
G__17702.cljs$core$IFn$_invoke$arity$2 = G__17702__2;
return G__17702;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__17701 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__17701) : pred.call(null,G__17701));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__17707 = (function (){var G__17709 = cljs.core._entry_key(sc,e);
var G__17710 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__17709,G__17710) : comp.call(null,G__17709,G__17710));
})();
var G__17708 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__17707,G__17708) : test.call(null,G__17707,G__17708));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__17714 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17714,(0),null);
var s = vec__17714;
if(cljs.core.truth_((function (){var G__17715 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__17715) : include.call(null,G__17715));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__17716 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17716,(0),null);
var s = vec__17716;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__17720 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17720,(0),null);
var s = vec__17720;
if(cljs.core.truth_((function (){var G__17721 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__17721) : include.call(null,G__17721));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__17722 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17722,(0),null);
var s = vec__17722;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__17723 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__17723) : Math.ceil.call(null,G__17723));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__12050__auto__ = self__.__hash;
if(!((h__12050__auto__ == null))){
return h__12050__auto__;
} else {
var h__12050__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__12050__auto____$1;

return h__12050__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__17724 = ret;
var G__17725 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17724,G__17725) : f.call(null,G__17724,G__17725));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__17726 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17726) : cljs.core.deref.call(null,G__17726));
} else {
var G__17727 = (i + self__.step);
var G__17728 = ret__$1;
i = G__17727;
ret = G__17728;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__17746 = null;
var G__17746__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17746__1 = (function (result){
var G__17743 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17743) : rf.call(null,G__17743));
});
var G__17746__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__17744 = result;
var G__17745 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17744,G__17745) : rf.call(null,G__17744,G__17745));
} else {
return result;
}
});
G__17746 = function(result,input){
switch(arguments.length){
case 0:
return G__17746__0.call(this);
case 1:
return G__17746__1.call(this,result);
case 2:
return G__17746__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17746.cljs$core$IFn$_invoke$arity$0 = G__17746__0;
G__17746.cljs$core$IFn$_invoke$arity$1 = G__17746__1;
G__17746.cljs$core$IFn$_invoke$arity$2 = G__17746__2;
return G__17746;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__17768 = null;
var G__17768__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17768__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__17759 = result;
var G__17760 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17759,G__17760) : rf.call(null,G__17759,G__17760));
})());
})());
var G__17761 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17761) : rf.call(null,G__17761));
});
var G__17768__2 = (function (result,input){
var pval = (function (){var G__17762 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17762) : cljs.core.deref.call(null,G__17762));
})();
var val = (function (){var G__17763 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17763) : f.call(null,G__17763));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__17764 = result;
var G__17765 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17764,G__17765) : rf.call(null,G__17764,G__17765));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__17768 = function(result,input){
switch(arguments.length){
case 0:
return G__17768__0.call(this);
case 1:
return G__17768__1.call(this,result);
case 2:
return G__17768__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17768.cljs$core$IFn$_invoke$arity$0 = G__17768__0;
G__17768.cljs$core$IFn$_invoke$arity$1 = G__17768__1;
G__17768.cljs$core$IFn$_invoke$arity$2 = G__17768__2;
return G__17768;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__17766 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17766) : f.call(null,G__17766));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__17747_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__17767 = p1__17747_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17767) : f.call(null,G__17767));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__17777 = init;
var G__17778 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17777,G__17778) : f.call(null,G__17777,G__17778));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__17873 = null;
var G__17873__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__17873__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17831 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17831) : f.call(null,G__17831));
})()],null));
});
var G__17873__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17832 = x;
var G__17833 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17832,G__17833) : f.call(null,G__17832,G__17833));
})()],null));
});
var G__17873__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17834 = x;
var G__17835 = y;
var G__17836 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17834,G__17835,G__17836) : f.call(null,G__17834,G__17835,G__17836));
})()],null));
});
var G__17873__4 = (function() { 
var G__17874__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__17874 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17875__i = 0, G__17875__a = new Array(arguments.length -  3);
while (G__17875__i < G__17875__a.length) {G__17875__a[G__17875__i] = arguments[G__17875__i + 3]; ++G__17875__i;}
  args = new cljs.core.IndexedSeq(G__17875__a,0);
} 
return G__17874__delegate.call(this,x,y,z,args);};
G__17874.cljs$lang$maxFixedArity = 3;
G__17874.cljs$lang$applyTo = (function (arglist__17876){
var x = cljs.core.first(arglist__17876);
arglist__17876 = cljs.core.next(arglist__17876);
var y = cljs.core.first(arglist__17876);
arglist__17876 = cljs.core.next(arglist__17876);
var z = cljs.core.first(arglist__17876);
var args = cljs.core.rest(arglist__17876);
return G__17874__delegate(x,y,z,args);
});
G__17874.cljs$core$IFn$_invoke$arity$variadic = G__17874__delegate;
return G__17874;
})()
;
G__17873 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17873__0.call(this);
case 1:
return G__17873__1.call(this,x);
case 2:
return G__17873__2.call(this,x,y);
case 3:
return G__17873__3.call(this,x,y,z);
default:
var G__17877 = null;
if (arguments.length > 3) {
var G__17878__i = 0, G__17878__a = new Array(arguments.length -  3);
while (G__17878__i < G__17878__a.length) {G__17878__a[G__17878__i] = arguments[G__17878__i + 3]; ++G__17878__i;}
G__17877 = new cljs.core.IndexedSeq(G__17878__a,0);
}
return G__17873__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17877);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17873.cljs$lang$maxFixedArity = 3;
G__17873.cljs$lang$applyTo = G__17873__4.cljs$lang$applyTo;
G__17873.cljs$core$IFn$_invoke$arity$0 = G__17873__0;
G__17873.cljs$core$IFn$_invoke$arity$1 = G__17873__1;
G__17873.cljs$core$IFn$_invoke$arity$2 = G__17873__2;
G__17873.cljs$core$IFn$_invoke$arity$3 = G__17873__3;
G__17873.cljs$core$IFn$_invoke$arity$variadic = G__17873__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17873;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__17879 = null;
var G__17879__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__17879__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17837 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17837) : f.call(null,G__17837));
})(),(function (){var G__17838 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17838) : g.call(null,G__17838));
})()],null));
});
var G__17879__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17839 = x;
var G__17840 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17839,G__17840) : f.call(null,G__17839,G__17840));
})(),(function (){var G__17841 = x;
var G__17842 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__17841,G__17842) : g.call(null,G__17841,G__17842));
})()],null));
});
var G__17879__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17843 = x;
var G__17844 = y;
var G__17845 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17843,G__17844,G__17845) : f.call(null,G__17843,G__17844,G__17845));
})(),(function (){var G__17846 = x;
var G__17847 = y;
var G__17848 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__17846,G__17847,G__17848) : g.call(null,G__17846,G__17847,G__17848));
})()],null));
});
var G__17879__4 = (function() { 
var G__17880__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__17880 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17881__i = 0, G__17881__a = new Array(arguments.length -  3);
while (G__17881__i < G__17881__a.length) {G__17881__a[G__17881__i] = arguments[G__17881__i + 3]; ++G__17881__i;}
  args = new cljs.core.IndexedSeq(G__17881__a,0);
} 
return G__17880__delegate.call(this,x,y,z,args);};
G__17880.cljs$lang$maxFixedArity = 3;
G__17880.cljs$lang$applyTo = (function (arglist__17882){
var x = cljs.core.first(arglist__17882);
arglist__17882 = cljs.core.next(arglist__17882);
var y = cljs.core.first(arglist__17882);
arglist__17882 = cljs.core.next(arglist__17882);
var z = cljs.core.first(arglist__17882);
var args = cljs.core.rest(arglist__17882);
return G__17880__delegate(x,y,z,args);
});
G__17880.cljs$core$IFn$_invoke$arity$variadic = G__17880__delegate;
return G__17880;
})()
;
G__17879 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17879__0.call(this);
case 1:
return G__17879__1.call(this,x);
case 2:
return G__17879__2.call(this,x,y);
case 3:
return G__17879__3.call(this,x,y,z);
default:
var G__17883 = null;
if (arguments.length > 3) {
var G__17884__i = 0, G__17884__a = new Array(arguments.length -  3);
while (G__17884__i < G__17884__a.length) {G__17884__a[G__17884__i] = arguments[G__17884__i + 3]; ++G__17884__i;}
G__17883 = new cljs.core.IndexedSeq(G__17884__a,0);
}
return G__17879__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17883);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17879.cljs$lang$maxFixedArity = 3;
G__17879.cljs$lang$applyTo = G__17879__4.cljs$lang$applyTo;
G__17879.cljs$core$IFn$_invoke$arity$0 = G__17879__0;
G__17879.cljs$core$IFn$_invoke$arity$1 = G__17879__1;
G__17879.cljs$core$IFn$_invoke$arity$2 = G__17879__2;
G__17879.cljs$core$IFn$_invoke$arity$3 = G__17879__3;
G__17879.cljs$core$IFn$_invoke$arity$variadic = G__17879__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17879;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__17885 = null;
var G__17885__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__17885__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17849 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17849) : f.call(null,G__17849));
})(),(function (){var G__17850 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17850) : g.call(null,G__17850));
})(),(function (){var G__17851 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__17851) : h.call(null,G__17851));
})()],null));
});
var G__17885__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17852 = x;
var G__17853 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17852,G__17853) : f.call(null,G__17852,G__17853));
})(),(function (){var G__17854 = x;
var G__17855 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__17854,G__17855) : g.call(null,G__17854,G__17855));
})(),(function (){var G__17856 = x;
var G__17857 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__17856,G__17857) : h.call(null,G__17856,G__17857));
})()],null));
});
var G__17885__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17858 = x;
var G__17859 = y;
var G__17860 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17858,G__17859,G__17860) : f.call(null,G__17858,G__17859,G__17860));
})(),(function (){var G__17861 = x;
var G__17862 = y;
var G__17863 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__17861,G__17862,G__17863) : g.call(null,G__17861,G__17862,G__17863));
})(),(function (){var G__17864 = x;
var G__17865 = y;
var G__17866 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__17864,G__17865,G__17866) : h.call(null,G__17864,G__17865,G__17866));
})()],null));
});
var G__17885__4 = (function() { 
var G__17886__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__17886 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17887__i = 0, G__17887__a = new Array(arguments.length -  3);
while (G__17887__i < G__17887__a.length) {G__17887__a[G__17887__i] = arguments[G__17887__i + 3]; ++G__17887__i;}
  args = new cljs.core.IndexedSeq(G__17887__a,0);
} 
return G__17886__delegate.call(this,x,y,z,args);};
G__17886.cljs$lang$maxFixedArity = 3;
G__17886.cljs$lang$applyTo = (function (arglist__17888){
var x = cljs.core.first(arglist__17888);
arglist__17888 = cljs.core.next(arglist__17888);
var y = cljs.core.first(arglist__17888);
arglist__17888 = cljs.core.next(arglist__17888);
var z = cljs.core.first(arglist__17888);
var args = cljs.core.rest(arglist__17888);
return G__17886__delegate(x,y,z,args);
});
G__17886.cljs$core$IFn$_invoke$arity$variadic = G__17886__delegate;
return G__17886;
})()
;
G__17885 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17885__0.call(this);
case 1:
return G__17885__1.call(this,x);
case 2:
return G__17885__2.call(this,x,y);
case 3:
return G__17885__3.call(this,x,y,z);
default:
var G__17889 = null;
if (arguments.length > 3) {
var G__17890__i = 0, G__17890__a = new Array(arguments.length -  3);
while (G__17890__i < G__17890__a.length) {G__17890__a[G__17890__i] = arguments[G__17890__i + 3]; ++G__17890__i;}
G__17889 = new cljs.core.IndexedSeq(G__17890__a,0);
}
return G__17885__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17889);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17885.cljs$lang$maxFixedArity = 3;
G__17885.cljs$lang$applyTo = G__17885__4.cljs$lang$applyTo;
G__17885.cljs$core$IFn$_invoke$arity$0 = G__17885__0;
G__17885.cljs$core$IFn$_invoke$arity$1 = G__17885__1;
G__17885.cljs$core$IFn$_invoke$arity$2 = G__17885__2;
G__17885.cljs$core$IFn$_invoke$arity$3 = G__17885__3;
G__17885.cljs$core$IFn$_invoke$arity$variadic = G__17885__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17885;
})()
});
var juxt__4 = (function() { 
var G__17891__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__17892 = null;
var G__17892__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17779_SHARP_,p2__17780_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17779_SHARP_,(function (){return (p2__17780_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__17780_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__17780_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17892__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17781_SHARP_,p2__17782_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17781_SHARP_,(function (){var G__17867 = x;
return (p2__17782_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__17782_SHARP_.cljs$core$IFn$_invoke$arity$1(G__17867) : p2__17782_SHARP_.call(null,G__17867));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17892__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17783_SHARP_,p2__17784_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17783_SHARP_,(function (){var G__17868 = x;
var G__17869 = y;
return (p2__17784_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__17784_SHARP_.cljs$core$IFn$_invoke$arity$2(G__17868,G__17869) : p2__17784_SHARP_.call(null,G__17868,G__17869));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17892__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17785_SHARP_,p2__17786_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17785_SHARP_,(function (){var G__17870 = x;
var G__17871 = y;
var G__17872 = z;
return (p2__17786_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__17786_SHARP_.cljs$core$IFn$_invoke$arity$3(G__17870,G__17871,G__17872) : p2__17786_SHARP_.call(null,G__17870,G__17871,G__17872));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17892__4 = (function() { 
var G__17893__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17787_SHARP_,p2__17788_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17787_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__17788_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__17893 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17894__i = 0, G__17894__a = new Array(arguments.length -  3);
while (G__17894__i < G__17894__a.length) {G__17894__a[G__17894__i] = arguments[G__17894__i + 3]; ++G__17894__i;}
  args = new cljs.core.IndexedSeq(G__17894__a,0);
} 
return G__17893__delegate.call(this,x,y,z,args);};
G__17893.cljs$lang$maxFixedArity = 3;
G__17893.cljs$lang$applyTo = (function (arglist__17895){
var x = cljs.core.first(arglist__17895);
arglist__17895 = cljs.core.next(arglist__17895);
var y = cljs.core.first(arglist__17895);
arglist__17895 = cljs.core.next(arglist__17895);
var z = cljs.core.first(arglist__17895);
var args = cljs.core.rest(arglist__17895);
return G__17893__delegate(x,y,z,args);
});
G__17893.cljs$core$IFn$_invoke$arity$variadic = G__17893__delegate;
return G__17893;
})()
;
G__17892 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17892__0.call(this);
case 1:
return G__17892__1.call(this,x);
case 2:
return G__17892__2.call(this,x,y);
case 3:
return G__17892__3.call(this,x,y,z);
default:
var G__17896 = null;
if (arguments.length > 3) {
var G__17897__i = 0, G__17897__a = new Array(arguments.length -  3);
while (G__17897__i < G__17897__a.length) {G__17897__a[G__17897__i] = arguments[G__17897__i + 3]; ++G__17897__i;}
G__17896 = new cljs.core.IndexedSeq(G__17897__a,0);
}
return G__17892__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17896);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17892.cljs$lang$maxFixedArity = 3;
G__17892.cljs$lang$applyTo = G__17892__4.cljs$lang$applyTo;
G__17892.cljs$core$IFn$_invoke$arity$0 = G__17892__0;
G__17892.cljs$core$IFn$_invoke$arity$1 = G__17892__1;
G__17892.cljs$core$IFn$_invoke$arity$2 = G__17892__2;
G__17892.cljs$core$IFn$_invoke$arity$3 = G__17892__3;
G__17892.cljs$core$IFn$_invoke$arity$variadic = G__17892__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17892;
})()
;})(fs__$1))
};
var G__17891 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__17898__i = 0, G__17898__a = new Array(arguments.length -  3);
while (G__17898__i < G__17898__a.length) {G__17898__a[G__17898__i] = arguments[G__17898__i + 3]; ++G__17898__i;}
  fs = new cljs.core.IndexedSeq(G__17898__a,0);
} 
return G__17891__delegate.call(this,f,g,h,fs);};
G__17891.cljs$lang$maxFixedArity = 3;
G__17891.cljs$lang$applyTo = (function (arglist__17899){
var f = cljs.core.first(arglist__17899);
arglist__17899 = cljs.core.next(arglist__17899);
var g = cljs.core.first(arglist__17899);
arglist__17899 = cljs.core.next(arglist__17899);
var h = cljs.core.first(arglist__17899);
var fs = cljs.core.rest(arglist__17899);
return G__17891__delegate(f,g,h,fs);
});
G__17891.cljs$core$IFn$_invoke$arity$variadic = G__17891__delegate;
return G__17891;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__17900 = null;
if (arguments.length > 3) {
var G__17901__i = 0, G__17901__a = new Array(arguments.length -  3);
while (G__17901__i < G__17901__a.length) {G__17901__a[G__17901__i] = arguments[G__17901__i + 3]; ++G__17901__i;}
G__17900 = new cljs.core.IndexedSeq(G__17901__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__17900);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__17902 = cljs.core.next(coll);
coll = G__17902;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__17903 = (n - (1));
var G__17904 = cljs.core.next(coll);
n = G__17903;
coll = G__17904;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__17908 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17908,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17908,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17908,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_17916 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__17917_17923 = cljs.core.first(coll);
var G__17918_17924 = writer;
var G__17919_17925 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17917_17923,G__17918_17924,G__17919_17925) : print_one.call(null,G__17917_17923,G__17918_17924,G__17919_17925));
} else {
}

var coll_17926__$1 = cljs.core.next(coll);
var n_17927 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_17926__$1) && (((n_17927 == null)) || (!((n_17927 === (0)))))){
cljs.core._write(writer,sep);

var G__17920_17928 = cljs.core.first(coll_17926__$1);
var G__17921_17929 = writer;
var G__17922_17930 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17920_17928,G__17921_17929,G__17922_17930) : print_one.call(null,G__17920_17928,G__17921_17929,G__17922_17930));

var G__17931 = cljs.core.next(coll_17926__$1);
var G__17932 = (n_17927 - (1));
coll_17926__$1 = G__17931;
n_17927 = G__17932;
continue;
} else {
if((cljs.core.seq(coll_17926__$1)) && ((n_17927 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_17916;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__17937 = cljs.core.seq(ss);
var chunk__17938 = null;
var count__17939 = (0);
var i__17940 = (0);
while(true){
if((i__17940 < count__17939)){
var s = chunk__17938.cljs$core$IIndexed$_nth$arity$2(null,i__17940);
cljs.core._write(writer,s);

var G__17941 = seq__17937;
var G__17942 = chunk__17938;
var G__17943 = count__17939;
var G__17944 = (i__17940 + (1));
seq__17937 = G__17941;
chunk__17938 = G__17942;
count__17939 = G__17943;
i__17940 = G__17944;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17937);
if(temp__4126__auto__){
var seq__17937__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17937__$1)){
var c__12416__auto__ = cljs.core.chunk_first(seq__17937__$1);
var G__17945 = cljs.core.chunk_rest(seq__17937__$1);
var G__17946 = c__12416__auto__;
var G__17947 = cljs.core.count(c__12416__auto__);
var G__17948 = (0);
seq__17937 = G__17945;
chunk__17938 = G__17946;
count__17939 = G__17947;
i__17940 = G__17948;
continue;
} else {
var s = cljs.core.first(seq__17937__$1);
cljs.core._write(writer,s);

var G__17949 = cljs.core.next(seq__17937__$1);
var G__17950 = null;
var G__17951 = (0);
var G__17952 = (0);
seq__17937 = G__17949;
chunk__17938 = G__17950;
count__17939 = G__17951;
i__17940 = G__17952;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__17953__i = 0, G__17953__a = new Array(arguments.length -  1);
while (G__17953__i < G__17953__a.length) {G__17953__a[G__17953__i] = arguments[G__17953__i + 1]; ++G__17953__i;}
  ss = new cljs.core.IndexedSeq(G__17953__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__17954){
var writer = cljs.core.first(arglist__17954);
var ss = cljs.core.rest(arglist__17954);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj17956 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj17956;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__17959 = "[\\\\\"\b\f\n\r\t]";
var G__17960 = "g";
return RegExp(G__17959,G__17960);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__11617__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__11617__auto__)){
var and__11617__auto____$1 = (function (){var G__17974 = obj;
if(G__17974){
var bit__12310__auto__ = (G__17974.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__12310__auto__) || (G__17974.cljs$core$IMeta$)){
return true;
} else {
if((!G__17974.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__17974);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__17974);
}
})();
if(and__11617__auto____$1){
return cljs.core.meta(obj);
} else {
return and__11617__auto____$1;
}
} else {
return and__11617__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__17975 = obj;
if(G__17975){
var bit__12303__auto__ = (G__17975.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__12303__auto__) || (G__17975.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__17976 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__17977 = pr_writer;
var G__17978 = writer;
var G__17979 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__17976,G__17977,G__17978,G__17979) : cljs.core.print_map.call(null,G__17976,G__17977,G__17978,G__17979));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__17980 = obj;
return goog.isString(G__17980);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__17982 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__17982;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__17981 = obj;
if(G__17981){
var bit__12310__auto__ = (G__17981.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__12310__auto__) || (G__17981.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__17981.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__17981);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__17981);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__17987 = cljs.core.seq(cljs.core.next(objs));
var chunk__17988 = null;
var count__17989 = (0);
var i__17990 = (0);
while(true){
if((i__17990 < count__17989)){
var obj = chunk__17988.cljs$core$IIndexed$_nth$arity$2(null,i__17990);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__17991 = seq__17987;
var G__17992 = chunk__17988;
var G__17993 = count__17989;
var G__17994 = (i__17990 + (1));
seq__17987 = G__17991;
chunk__17988 = G__17992;
count__17989 = G__17993;
i__17990 = G__17994;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17987);
if(temp__4126__auto__){
var seq__17987__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17987__$1)){
var c__12416__auto__ = cljs.core.chunk_first(seq__17987__$1);
var G__17995 = cljs.core.chunk_rest(seq__17987__$1);
var G__17996 = c__12416__auto__;
var G__17997 = cljs.core.count(c__12416__auto__);
var G__17998 = (0);
seq__17987 = G__17995;
chunk__17988 = G__17996;
count__17989 = G__17997;
i__17990 = G__17998;
continue;
} else {
var obj = cljs.core.first(seq__17987__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__17999 = cljs.core.next(seq__17987__$1);
var G__18000 = null;
var G__18001 = (0);
var G__18002 = (0);
seq__17987 = G__17999;
chunk__17988 = G__18000;
count__17989 = G__18001;
i__17990 = G__18002;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__18003__i = 0, G__18003__a = new Array(arguments.length -  0);
while (G__18003__i < G__18003__a.length) {G__18003__a[G__18003__i] = arguments[G__18003__i + 0]; ++G__18003__i;}
  objs = new cljs.core.IndexedSeq(G__18003__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__18004){
var objs = cljs.core.seq(arglist__18004);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__18005__i = 0, G__18005__a = new Array(arguments.length -  0);
while (G__18005__i < G__18005__a.length) {G__18005__a[G__18005__i] = arguments[G__18005__i + 0]; ++G__18005__i;}
  objs = new cljs.core.IndexedSeq(G__18005__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__18006){
var objs = cljs.core.seq(arglist__18006);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__18007__i = 0, G__18007__a = new Array(arguments.length -  0);
while (G__18007__i < G__18007__a.length) {G__18007__a[G__18007__i] = arguments[G__18007__i + 0]; ++G__18007__i;}
  objs = new cljs.core.IndexedSeq(G__18007__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__18008){
var objs = cljs.core.seq(arglist__18008);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__18009__i = 0, G__18009__a = new Array(arguments.length -  0);
while (G__18009__i < G__18009__a.length) {G__18009__a[G__18009__i] = arguments[G__18009__i + 0]; ++G__18009__i;}
  objs = new cljs.core.IndexedSeq(G__18009__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__18010){
var objs = cljs.core.seq(arglist__18010);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__18011__i = 0, G__18011__a = new Array(arguments.length -  0);
while (G__18011__i < G__18011__a.length) {G__18011__a[G__18011__i] = arguments[G__18011__i + 0]; ++G__18011__i;}
  objs = new cljs.core.IndexedSeq(G__18011__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__18012){
var objs = cljs.core.seq(arglist__18012);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__18013__i = 0, G__18013__a = new Array(arguments.length -  0);
while (G__18013__i < G__18013__a.length) {G__18013__a[G__18013__i] = arguments[G__18013__i + 0]; ++G__18013__i;}
  objs = new cljs.core.IndexedSeq(G__18013__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__18014){
var objs = cljs.core.seq(arglist__18014);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__18015__i = 0, G__18015__a = new Array(arguments.length -  0);
while (G__18015__i < G__18015__a.length) {G__18015__a[G__18015__i] = arguments[G__18015__i + 0]; ++G__18015__i;}
  objs = new cljs.core.IndexedSeq(G__18015__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__18016){
var objs = cljs.core.seq(arglist__18016);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__18017__i = 0, G__18017__a = new Array(arguments.length -  0);
while (G__18017__i < G__18017__a.length) {G__18017__a[G__18017__i] = arguments[G__18017__i + 0]; ++G__18017__i;}
  objs = new cljs.core.IndexedSeq(G__18017__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__18018){
var objs = cljs.core.seq(arglist__18018);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__18025_18031 = cljs.core.key(e);
var G__18026_18032 = w;
var G__18027_18033 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__18025_18031,G__18026_18032,G__18027_18033) : print_one.call(null,G__18025_18031,G__18026_18032,G__18027_18033));

cljs.core._write(w," ");

var G__18028 = cljs.core.val(e);
var G__18029 = w;
var G__18030 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__18028,G__18029,G__18030) : print_one.call(null,G__18028,G__18029,G__18030));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__18034__i = 0, G__18034__a = new Array(arguments.length -  2);
while (G__18034__i < G__18034__a.length) {G__18034__a[G__18034__i] = arguments[G__18034__i + 2]; ++G__18034__i;}
  args = new cljs.core.IndexedSeq(G__18034__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__18035){
var iref = cljs.core.first(arglist__18035);
arglist__18035 = cljs.core.next(arglist__18035);
var f = cljs.core.first(arglist__18035);
var args = cljs.core.rest(arglist__18035);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__18038 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__18038) : cljs.core.atom.call(null,G__18038));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__18040 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18040) : cljs.core.deref.call(null,G__18040));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__18041_SHARP_,p2__18042_SHARP_){
var ret = (function (){var G__18045 = p1__18041_SHARP_;
var G__18046 = p2__18042_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18045,G__18046) : rf.call(null,G__18045,G__18046));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__18049 = null;
var G__18049__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__18049__1 = (function (result){
var G__18048 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18048) : rf.call(null,G__18048));
});
var G__18049__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__18049 = function(result,input){
switch(arguments.length){
case 0:
return G__18049__0.call(this);
case 1:
return G__18049__1.call(this,result);
case 2:
return G__18049__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18049.cljs$core$IFn$_invoke$arity$0 = G__18049__0;
G__18049.cljs$core$IFn$_invoke$arity$1 = G__18049__1;
G__18049.cljs$core$IFn$_invoke$arity$2 = G__18049__2;
return G__18049;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__18058 = null;
var G__18058__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__18058__1 = (function (result){
var G__18054 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18054) : rf.call(null,G__18054));
});
var G__18058__2 = (function (result,input){
var prior = (function (){var G__18055 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18055) : cljs.core.deref.call(null,G__18055));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__18056 = result;
var G__18057 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18056,G__18057) : rf.call(null,G__18056,G__18057));
}
});
G__18058 = function(result,input){
switch(arguments.length){
case 0:
return G__18058__0.call(this);
case 1:
return G__18058__1.call(this,result);
case 2:
return G__18058__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18058.cljs$core$IFn$_invoke$arity$0 = G__18058__0;
G__18058.cljs$core$IFn$_invoke$arity$1 = G__18058__1;
G__18058.cljs$core$IFn$_invoke$arity$2 = G__18058__2;
return G__18058;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12607__auto__ = this;
return cljs.core.es6_iterator(this__12607__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__18060_SHARP_,p2__18059_SHARP_){
var G__18062 = p2__18059_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__18062) : proc.call(null,G__18062));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj18064 = {};
return obj18064;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__11617__auto__ = x;
if(and__11617__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__11617__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__12273__auto__ = (((x == null))?null:x);
return (function (){var or__11629__auto__ = (cljs.core._clj__GT_js[(function (){var G__18068 = x__12273__auto__;
return goog.typeOf(G__18068);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__11617__auto__ = x;
if(and__11617__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__11617__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__12273__auto__ = (((x == null))?null:x);
return (function (){var or__11629__auto__ = (cljs.core._key__GT_js[(function (){var G__18072 = x__12273__auto__;
return goog.typeOf(G__18072);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__18075 = k;
if(G__18075){
var bit__12310__auto__ = null;
if(cljs.core.truth_((function (){var or__11629__auto__ = bit__12310__auto__;
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return G__18075.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__18075.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__18075);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__18075);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__18076 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__18076) : cljs.core.clj__GT_js.call(null,G__18076));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__18092 = x;
if(G__18092){
var bit__12310__auto__ = null;
if(cljs.core.truth_((function (){var or__11629__auto__ = bit__12310__auto__;
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return G__18092.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__18092.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__18092);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__18092);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj18094 = {};
return obj18094;
})();
var seq__18095_18105 = cljs.core.seq(x);
var chunk__18096_18106 = null;
var count__18097_18107 = (0);
var i__18098_18108 = (0);
while(true){
if((i__18098_18108 < count__18097_18107)){
var vec__18099_18109 = chunk__18096_18106.cljs$core$IIndexed$_nth$arity$2(null,i__18098_18108);
var k_18110 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18099_18109,(0),null);
var v_18111 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18099_18109,(1),null);
(m[cljs.core.key__GT_js(k_18110)] = clj__GT_js(v_18111));

var G__18112 = seq__18095_18105;
var G__18113 = chunk__18096_18106;
var G__18114 = count__18097_18107;
var G__18115 = (i__18098_18108 + (1));
seq__18095_18105 = G__18112;
chunk__18096_18106 = G__18113;
count__18097_18107 = G__18114;
i__18098_18108 = G__18115;
continue;
} else {
var temp__4126__auto___18116 = cljs.core.seq(seq__18095_18105);
if(temp__4126__auto___18116){
var seq__18095_18117__$1 = temp__4126__auto___18116;
if(cljs.core.chunked_seq_QMARK_(seq__18095_18117__$1)){
var c__12416__auto___18118 = cljs.core.chunk_first(seq__18095_18117__$1);
var G__18119 = cljs.core.chunk_rest(seq__18095_18117__$1);
var G__18120 = c__12416__auto___18118;
var G__18121 = cljs.core.count(c__12416__auto___18118);
var G__18122 = (0);
seq__18095_18105 = G__18119;
chunk__18096_18106 = G__18120;
count__18097_18107 = G__18121;
i__18098_18108 = G__18122;
continue;
} else {
var vec__18100_18123 = cljs.core.first(seq__18095_18117__$1);
var k_18124 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18100_18123,(0),null);
var v_18125 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18100_18123,(1),null);
(m[cljs.core.key__GT_js(k_18124)] = clj__GT_js(v_18125));

var G__18126 = cljs.core.next(seq__18095_18117__$1);
var G__18127 = null;
var G__18128 = (0);
var G__18129 = (0);
seq__18095_18105 = G__18126;
chunk__18096_18106 = G__18127;
count__18097_18107 = G__18128;
i__18098_18108 = G__18129;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__18101_18130 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__18102_18131 = null;
var count__18103_18132 = (0);
var i__18104_18133 = (0);
while(true){
if((i__18104_18133 < count__18103_18132)){
var x_18134__$1 = chunk__18102_18131.cljs$core$IIndexed$_nth$arity$2(null,i__18104_18133);
arr.push(x_18134__$1);

var G__18135 = seq__18101_18130;
var G__18136 = chunk__18102_18131;
var G__18137 = count__18103_18132;
var G__18138 = (i__18104_18133 + (1));
seq__18101_18130 = G__18135;
chunk__18102_18131 = G__18136;
count__18103_18132 = G__18137;
i__18104_18133 = G__18138;
continue;
} else {
var temp__4126__auto___18139 = cljs.core.seq(seq__18101_18130);
if(temp__4126__auto___18139){
var seq__18101_18140__$1 = temp__4126__auto___18139;
if(cljs.core.chunked_seq_QMARK_(seq__18101_18140__$1)){
var c__12416__auto___18141 = cljs.core.chunk_first(seq__18101_18140__$1);
var G__18142 = cljs.core.chunk_rest(seq__18101_18140__$1);
var G__18143 = c__12416__auto___18141;
var G__18144 = cljs.core.count(c__12416__auto___18141);
var G__18145 = (0);
seq__18101_18130 = G__18142;
chunk__18102_18131 = G__18143;
count__18103_18132 = G__18144;
i__18104_18133 = G__18145;
continue;
} else {
var x_18146__$1 = cljs.core.first(seq__18101_18140__$1);
arr.push(x_18146__$1);

var G__18147 = cljs.core.next(seq__18101_18140__$1);
var G__18148 = null;
var G__18149 = (0);
var G__18150 = (0);
seq__18101_18130 = G__18147;
chunk__18102_18131 = G__18148;
count__18103_18132 = G__18149;
i__18104_18133 = G__18150;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj18152 = {};
return obj18152;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__11617__auto__ = x;
if(and__11617__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__11617__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__12273__auto__ = (((x == null))?null:x);
return (function (){var or__11629__auto__ = (cljs.core._js__GT_clj[(function (){var G__18156 = x__12273__auto__;
return goog.typeOf(G__18156);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__18213__delegate = function (x,opts){
var map__18186 = opts;
var map__18186__$1 = ((cljs.core.seq_QMARK_(map__18186))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__18186):map__18186);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__18186__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__18186,map__18186__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__18202 = x__$1;
if(G__18202){
var bit__12310__auto__ = null;
if(cljs.core.truth_((function (){var or__11629__auto__ = bit__12310__auto__;
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return G__18202.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__18202.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__18202);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__18202);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__12385__auto__ = ((function (map__18186,map__18186__$1,keywordize_keys,keyfn){
return (function iter__18203(s__18204){
return (new cljs.core.LazySeq(null,((function (map__18186,map__18186__$1,keywordize_keys,keyfn){
return (function (){
var s__18204__$1 = s__18204;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__18204__$1);
if(temp__4126__auto__){
var s__18204__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__18204__$2)){
var c__12383__auto__ = cljs.core.chunk_first(s__18204__$2);
var size__12384__auto__ = cljs.core.count(c__12383__auto__);
var b__18206 = cljs.core.chunk_buffer(size__12384__auto__);
if((function (){var i__18205 = (0);
while(true){
if((i__18205 < size__12384__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__12383__auto__,i__18205);
cljs.core.chunk_append(b__18206,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__18211 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18211) : keyfn.call(null,G__18211));
})(),thisfn((x__$1[k]))], null));

var G__18214 = (i__18205 + (1));
i__18205 = G__18214;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__18206),iter__18203(cljs.core.chunk_rest(s__18204__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__18206),null);
}
} else {
var k = cljs.core.first(s__18204__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__18212 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18212) : keyfn.call(null,G__18212));
})(),thisfn((x__$1[k]))], null),iter__18203(cljs.core.rest(s__18204__$2)));
}
} else {
return null;
}
break;
}
});})(map__18186,map__18186__$1,keywordize_keys,keyfn))
,null,null));
});})(map__18186,map__18186__$1,keywordize_keys,keyfn))
;
return iter__12385__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__18186,map__18186__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__18213 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__18215__i = 0, G__18215__a = new Array(arguments.length -  1);
while (G__18215__i < G__18215__a.length) {G__18215__a[G__18215__i] = arguments[G__18215__i + 1]; ++G__18215__i;}
  opts = new cljs.core.IndexedSeq(G__18215__a,0);
} 
return G__18213__delegate.call(this,x,opts);};
G__18213.cljs$lang$maxFixedArity = 1;
G__18213.cljs$lang$applyTo = (function (arglist__18216){
var x = cljs.core.first(arglist__18216);
var opts = cljs.core.rest(arglist__18216);
return G__18213__delegate(x,opts);
});
G__18213.cljs$core$IFn$_invoke$arity$variadic = G__18213__delegate;
return G__18213;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__18217 = null;
if (arguments.length > 1) {
var G__18218__i = 0, G__18218__a = new Array(arguments.length -  1);
while (G__18218__i < G__18218__a.length) {G__18218__a[G__18218__i] = arguments[G__18218__i + 1]; ++G__18218__i;}
G__18217 = new cljs.core.IndexedSeq(G__18218__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__18217);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__18221 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__18221) : cljs.core.atom.call(null,G__18221));
})();
return ((function (mem){
return (function() { 
var G__18223__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__18222 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18222) : cljs.core.deref.call(null,G__18222));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__18223 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__18224__i = 0, G__18224__a = new Array(arguments.length -  0);
while (G__18224__i < G__18224__a.length) {G__18224__a[G__18224__i] = arguments[G__18224__i + 0]; ++G__18224__i;}
  args = new cljs.core.IndexedSeq(G__18224__a,0);
} 
return G__18223__delegate.call(this,args);};
G__18223.cljs$lang$maxFixedArity = 0;
G__18223.cljs$lang$applyTo = (function (arglist__18225){
var args = cljs.core.seq(arglist__18225);
return G__18223__delegate(args);
});
G__18223.cljs$core$IFn$_invoke$arity$variadic = G__18223__delegate;
return G__18223;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__18227 = ret;
f = G__18227;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__18228__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__18228 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__18229__i = 0, G__18229__a = new Array(arguments.length -  1);
while (G__18229__i < G__18229__a.length) {G__18229__a[G__18229__i] = arguments[G__18229__i + 1]; ++G__18229__i;}
  args = new cljs.core.IndexedSeq(G__18229__a,0);
} 
return G__18228__delegate.call(this,f,args);};
G__18228.cljs$lang$maxFixedArity = 1;
G__18228.cljs$lang$applyTo = (function (arglist__18230){
var f = cljs.core.first(arglist__18230);
var args = cljs.core.rest(arglist__18230);
return G__18228__delegate(f,args);
});
G__18228.cljs$core$IFn$_invoke$arity$variadic = G__18228__delegate;
return G__18228;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__18231 = null;
if (arguments.length > 1) {
var G__18232__i = 0, G__18232__a = new Array(arguments.length -  1);
while (G__18232__i < G__18232__a.length) {G__18232__a[G__18232__i] = arguments[G__18232__i + 1]; ++G__18232__i;}
G__18231 = new cljs.core.IndexedSeq(G__18232__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__18231);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__18235 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__18235) : Math.floor.call(null,G__18235));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__18237 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18237) : f.call(null,G__18237));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__18239 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__18239) : cljs.core.atom.call(null,G__18239));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__18240__i = 0, G__18240__a = new Array(arguments.length -  1);
while (G__18240__i < G__18240__a.length) {G__18240__a[G__18240__i] = arguments[G__18240__i + 1]; ++G__18240__i;}
  args = new cljs.core.IndexedSeq(G__18240__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__18241){
var f = cljs.core.first(arglist__18241);
var args = cljs.core.rest(arglist__18241);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__18306 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18306) : cljs.core.deref.call(null,G__18306));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__11629__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
var and__11617__auto__ = cljs.core.vector_QMARK_(parent);
if(and__11617__auto__){
var and__11617__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__11617__auto____$1){
var and__11617__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__11617__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__18331 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__18329 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__18329) : child.call(null,G__18329));
})(),(function (){var G__18330 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__18330) : parent.call(null,G__18330));
})());
var G__18332 = (i + (1));
ret = G__18331;
i = G__18332;
continue;
}
break;
}
} else {
return and__11617__auto____$2;
}
} else {
return and__11617__auto____$1;
}
} else {
return and__11617__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__18336 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18336) : cljs.core.deref.call(null,G__18336));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__18340 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18340) : cljs.core.deref.call(null,G__18340));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__18344 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18344) : cljs.core.deref.call(null,G__18344));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__18353 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__18353) : targets.call(null,G__18353));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__18354 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__18354) : sources.call(null,G__18354));
})()));
});})(tp,td,ta))
;
var or__11629__auto__ = ((cljs.core.contains_QMARK_((function (){var G__18358 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__18358) : tp.call(null,G__18358));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__18359 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__18359) : ta.call(null,G__18359));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__18360 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__18360) : ta.call(null,G__18360));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__18367 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__18367) : parentMap.call(null,G__18367));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__18368 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__18368) : parentMap.call(null,G__18368));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__18361_SHARP_){
return cljs.core.cons(cljs.core.first(p1__18361_SHARP_),cljs.core.interpose(cljs.core.first(p1__18361_SHARP_),cljs.core.second(p1__18361_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__18369 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__18369) : parentMap.call(null,G__18369));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__18362_SHARP_,p2__18363_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__18362_SHARP_,p2__18363_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__18372 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18372) : cljs.core.deref.call(null,G__18372));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__18373 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18373) : cljs.core.deref.call(null,G__18373));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__18389 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18389) : cljs.core.deref.call(null,G__18389));
})().call(null,x);
var or__11629__auto__ = (cljs.core.truth_((function (){var and__11617__auto__ = xprefs;
if(cljs.core.truth_(and__11617__auto__)){
var G__18391 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__18391) : xprefs.call(null,G__18391));
} else {
return and__11617__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__18392 = cljs.core.rest(ps);
ps = G__18392;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__11629__auto____$1)){
return or__11629__auto____$1;
} else {
var or__11629__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__18393 = cljs.core.rest(ps);
ps = G__18393;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__11629__auto____$2)){
return or__11629__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__11629__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__11629__auto__)){
return or__11629__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__18407){
var vec__18408 = p__18407;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18408,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18408,(1),null);
var e = vec__18408;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__18409 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18409) : cljs.core.deref.call(null,G__18409));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__11629__auto__ = (be == null);
if(or__11629__auto__){
return or__11629__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__18410 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18410) : cljs.core.deref.call(null,G__18410));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__18411 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18411) : cljs.core.deref.call(null,G__18411));
})(),(function (){var G__18412 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18412) : cljs.core.deref.call(null,G__18412));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj18414 = {};
return obj18414;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__11617__auto__ = mf;
if(and__11617__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__11617__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__12273__auto__ = (((mf == null))?null:mf);
return (function (){var or__11629__auto__ = (cljs.core._reset[(function (){var G__18418 = x__12273__auto__;
return goog.typeOf(G__18418);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._reset["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__11617__auto__ = mf;
if(and__11617__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__11617__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__12273__auto__ = (((mf == null))?null:mf);
return (function (){var or__11629__auto__ = (cljs.core._add_method[(function (){var G__18422 = x__12273__auto__;
return goog.typeOf(G__18422);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._add_method["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__11617__auto__ = mf;
if(and__11617__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__11617__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__12273__auto__ = (((mf == null))?null:mf);
return (function (){var or__11629__auto__ = (cljs.core._remove_method[(function (){var G__18426 = x__12273__auto__;
return goog.typeOf(G__18426);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._remove_method["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__11617__auto__ = mf;
if(and__11617__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__11617__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__12273__auto__ = (((mf == null))?null:mf);
return (function (){var or__11629__auto__ = (cljs.core._prefer_method[(function (){var G__18430 = x__12273__auto__;
return goog.typeOf(G__18430);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__11617__auto__ = mf;
if(and__11617__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__11617__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__12273__auto__ = (((mf == null))?null:mf);
return (function (){var or__11629__auto__ = (cljs.core._get_method[(function (){var G__18434 = x__12273__auto__;
return goog.typeOf(G__18434);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._get_method["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__11617__auto__ = mf;
if(and__11617__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__11617__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__12273__auto__ = (((mf == null))?null:mf);
return (function (){var or__11629__auto__ = (cljs.core._methods[(function (){var G__18438 = x__12273__auto__;
return goog.typeOf(G__18438);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._methods["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__11617__auto__ = mf;
if(and__11617__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__11617__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__12273__auto__ = (((mf == null))?null:mf);
return (function (){var or__11629__auto__ = (cljs.core._prefers[(function (){var G__18442 = x__12273__auto__;
return goog.typeOf(G__18442);
})()]);
if(or__11629__auto__){
return or__11629__auto__;
} else {
var or__11629__auto____$1 = (cljs.core._prefers["_"]);
if(or__11629__auto____$1){
return or__11629__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__18444 = this$__$1;
return goog.getUid(G__18444);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__18445 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18445) : cljs.core.deref.call(null,G__18445));
})(),(function (){var G__18446 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18446) : cljs.core.deref.call(null,G__18446));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__18447 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18447) : cljs.core.deref.call(null,G__18447));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__18448 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18448) : cljs.core.deref.call(null,G__18448));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__18449 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18449) : cljs.core.deref.call(null,G__18449));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__18450 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18450) : cljs.core.deref.call(null,G__18450));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__19291 = null;
var G__19291__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__19291__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18451 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__18451) : self__.dispatch_fn.call(null,G__18451));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18452 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__18452) : target_fn.call(null,G__18452));
});
var G__19291__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18453 = a;
var G__18454 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__18453,G__18454) : self__.dispatch_fn.call(null,G__18453,G__18454));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18455 = a;
var G__18456 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__18455,G__18456) : target_fn.call(null,G__18455,G__18456));
});
var G__19291__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18457 = a;
var G__18458 = b;
var G__18459 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__18457,G__18458,G__18459) : self__.dispatch_fn.call(null,G__18457,G__18458,G__18459));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18460 = a;
var G__18461 = b;
var G__18462 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__18460,G__18461,G__18462) : target_fn.call(null,G__18460,G__18461,G__18462));
});
var G__19291__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18463 = a;
var G__18464 = b;
var G__18465 = c;
var G__18466 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__18463,G__18464,G__18465,G__18466) : self__.dispatch_fn.call(null,G__18463,G__18464,G__18465,G__18466));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18467 = a;
var G__18468 = b;
var G__18469 = c;
var G__18470 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__18467,G__18468,G__18469,G__18470) : target_fn.call(null,G__18467,G__18468,G__18469,G__18470));
});
var G__19291__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18471 = a;
var G__18472 = b;
var G__18473 = c;
var G__18474 = d;
var G__18475 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__18471,G__18472,G__18473,G__18474,G__18475) : self__.dispatch_fn.call(null,G__18471,G__18472,G__18473,G__18474,G__18475));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18476 = a;
var G__18477 = b;
var G__18478 = c;
var G__18479 = d;
var G__18480 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__18476,G__18477,G__18478,G__18479,G__18480) : target_fn.call(null,G__18476,G__18477,G__18478,G__18479,G__18480));
});
var G__19291__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18481 = a;
var G__18482 = b;
var G__18483 = c;
var G__18484 = d;
var G__18485 = e;
var G__18486 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__18481,G__18482,G__18483,G__18484,G__18485,G__18486) : self__.dispatch_fn.call(null,G__18481,G__18482,G__18483,G__18484,G__18485,G__18486));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18487 = a;
var G__18488 = b;
var G__18489 = c;
var G__18490 = d;
var G__18491 = e;
var G__18492 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__18487,G__18488,G__18489,G__18490,G__18491,G__18492) : target_fn.call(null,G__18487,G__18488,G__18489,G__18490,G__18491,G__18492));
});
var G__19291__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18493 = a;
var G__18494 = b;
var G__18495 = c;
var G__18496 = d;
var G__18497 = e;
var G__18498 = f;
var G__18499 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__18493,G__18494,G__18495,G__18496,G__18497,G__18498,G__18499) : self__.dispatch_fn.call(null,G__18493,G__18494,G__18495,G__18496,G__18497,G__18498,G__18499));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18500 = a;
var G__18501 = b;
var G__18502 = c;
var G__18503 = d;
var G__18504 = e;
var G__18505 = f;
var G__18506 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__18500,G__18501,G__18502,G__18503,G__18504,G__18505,G__18506) : target_fn.call(null,G__18500,G__18501,G__18502,G__18503,G__18504,G__18505,G__18506));
});
var G__19291__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18507 = a;
var G__18508 = b;
var G__18509 = c;
var G__18510 = d;
var G__18511 = e;
var G__18512 = f;
var G__18513 = g;
var G__18514 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__18507,G__18508,G__18509,G__18510,G__18511,G__18512,G__18513,G__18514) : self__.dispatch_fn.call(null,G__18507,G__18508,G__18509,G__18510,G__18511,G__18512,G__18513,G__18514));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18515 = a;
var G__18516 = b;
var G__18517 = c;
var G__18518 = d;
var G__18519 = e;
var G__18520 = f;
var G__18521 = g;
var G__18522 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__18515,G__18516,G__18517,G__18518,G__18519,G__18520,G__18521,G__18522) : target_fn.call(null,G__18515,G__18516,G__18517,G__18518,G__18519,G__18520,G__18521,G__18522));
});
var G__19291__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18523 = a;
var G__18524 = b;
var G__18525 = c;
var G__18526 = d;
var G__18527 = e;
var G__18528 = f;
var G__18529 = g;
var G__18530 = h;
var G__18531 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__18523,G__18524,G__18525,G__18526,G__18527,G__18528,G__18529,G__18530,G__18531) : self__.dispatch_fn.call(null,G__18523,G__18524,G__18525,G__18526,G__18527,G__18528,G__18529,G__18530,G__18531));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18532 = a;
var G__18533 = b;
var G__18534 = c;
var G__18535 = d;
var G__18536 = e;
var G__18537 = f;
var G__18538 = g;
var G__18539 = h;
var G__18540 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__18532,G__18533,G__18534,G__18535,G__18536,G__18537,G__18538,G__18539,G__18540) : target_fn.call(null,G__18532,G__18533,G__18534,G__18535,G__18536,G__18537,G__18538,G__18539,G__18540));
});
var G__19291__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18541 = a;
var G__18542 = b;
var G__18543 = c;
var G__18544 = d;
var G__18545 = e;
var G__18546 = f;
var G__18547 = g;
var G__18548 = h;
var G__18549 = i;
var G__18550 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__18541,G__18542,G__18543,G__18544,G__18545,G__18546,G__18547,G__18548,G__18549,G__18550) : self__.dispatch_fn.call(null,G__18541,G__18542,G__18543,G__18544,G__18545,G__18546,G__18547,G__18548,G__18549,G__18550));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18551 = a;
var G__18552 = b;
var G__18553 = c;
var G__18554 = d;
var G__18555 = e;
var G__18556 = f;
var G__18557 = g;
var G__18558 = h;
var G__18559 = i;
var G__18560 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__18551,G__18552,G__18553,G__18554,G__18555,G__18556,G__18557,G__18558,G__18559,G__18560) : target_fn.call(null,G__18551,G__18552,G__18553,G__18554,G__18555,G__18556,G__18557,G__18558,G__18559,G__18560));
});
var G__19291__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18561 = a;
var G__18562 = b;
var G__18563 = c;
var G__18564 = d;
var G__18565 = e;
var G__18566 = f;
var G__18567 = g;
var G__18568 = h;
var G__18569 = i;
var G__18570 = j;
var G__18571 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__18561,G__18562,G__18563,G__18564,G__18565,G__18566,G__18567,G__18568,G__18569,G__18570,G__18571) : self__.dispatch_fn.call(null,G__18561,G__18562,G__18563,G__18564,G__18565,G__18566,G__18567,G__18568,G__18569,G__18570,G__18571));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18572 = a;
var G__18573 = b;
var G__18574 = c;
var G__18575 = d;
var G__18576 = e;
var G__18577 = f;
var G__18578 = g;
var G__18579 = h;
var G__18580 = i;
var G__18581 = j;
var G__18582 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__18572,G__18573,G__18574,G__18575,G__18576,G__18577,G__18578,G__18579,G__18580,G__18581,G__18582) : target_fn.call(null,G__18572,G__18573,G__18574,G__18575,G__18576,G__18577,G__18578,G__18579,G__18580,G__18581,G__18582));
});
var G__19291__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18583 = a;
var G__18584 = b;
var G__18585 = c;
var G__18586 = d;
var G__18587 = e;
var G__18588 = f;
var G__18589 = g;
var G__18590 = h;
var G__18591 = i;
var G__18592 = j;
var G__18593 = k;
var G__18594 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__18583,G__18584,G__18585,G__18586,G__18587,G__18588,G__18589,G__18590,G__18591,G__18592,G__18593,G__18594) : self__.dispatch_fn.call(null,G__18583,G__18584,G__18585,G__18586,G__18587,G__18588,G__18589,G__18590,G__18591,G__18592,G__18593,G__18594));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18595 = a;
var G__18596 = b;
var G__18597 = c;
var G__18598 = d;
var G__18599 = e;
var G__18600 = f;
var G__18601 = g;
var G__18602 = h;
var G__18603 = i;
var G__18604 = j;
var G__18605 = k;
var G__18606 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__18595,G__18596,G__18597,G__18598,G__18599,G__18600,G__18601,G__18602,G__18603,G__18604,G__18605,G__18606) : target_fn.call(null,G__18595,G__18596,G__18597,G__18598,G__18599,G__18600,G__18601,G__18602,G__18603,G__18604,G__18605,G__18606));
});
var G__19291__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18607 = a;
var G__18608 = b;
var G__18609 = c;
var G__18610 = d;
var G__18611 = e;
var G__18612 = f;
var G__18613 = g;
var G__18614 = h;
var G__18615 = i;
var G__18616 = j;
var G__18617 = k;
var G__18618 = l;
var G__18619 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__18607,G__18608,G__18609,G__18610,G__18611,G__18612,G__18613,G__18614,G__18615,G__18616,G__18617,G__18618,G__18619) : self__.dispatch_fn.call(null,G__18607,G__18608,G__18609,G__18610,G__18611,G__18612,G__18613,G__18614,G__18615,G__18616,G__18617,G__18618,G__18619));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18620 = a;
var G__18621 = b;
var G__18622 = c;
var G__18623 = d;
var G__18624 = e;
var G__18625 = f;
var G__18626 = g;
var G__18627 = h;
var G__18628 = i;
var G__18629 = j;
var G__18630 = k;
var G__18631 = l;
var G__18632 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__18620,G__18621,G__18622,G__18623,G__18624,G__18625,G__18626,G__18627,G__18628,G__18629,G__18630,G__18631,G__18632) : target_fn.call(null,G__18620,G__18621,G__18622,G__18623,G__18624,G__18625,G__18626,G__18627,G__18628,G__18629,G__18630,G__18631,G__18632));
});
var G__19291__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18633 = a;
var G__18634 = b;
var G__18635 = c;
var G__18636 = d;
var G__18637 = e;
var G__18638 = f;
var G__18639 = g;
var G__18640 = h;
var G__18641 = i;
var G__18642 = j;
var G__18643 = k;
var G__18644 = l;
var G__18645 = m;
var G__18646 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__18633,G__18634,G__18635,G__18636,G__18637,G__18638,G__18639,G__18640,G__18641,G__18642,G__18643,G__18644,G__18645,G__18646) : self__.dispatch_fn.call(null,G__18633,G__18634,G__18635,G__18636,G__18637,G__18638,G__18639,G__18640,G__18641,G__18642,G__18643,G__18644,G__18645,G__18646));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18647 = a;
var G__18648 = b;
var G__18649 = c;
var G__18650 = d;
var G__18651 = e;
var G__18652 = f;
var G__18653 = g;
var G__18654 = h;
var G__18655 = i;
var G__18656 = j;
var G__18657 = k;
var G__18658 = l;
var G__18659 = m;
var G__18660 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__18647,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656,G__18657,G__18658,G__18659,G__18660) : target_fn.call(null,G__18647,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656,G__18657,G__18658,G__18659,G__18660));
});
var G__19291__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18661 = a;
var G__18662 = b;
var G__18663 = c;
var G__18664 = d;
var G__18665 = e;
var G__18666 = f;
var G__18667 = g;
var G__18668 = h;
var G__18669 = i;
var G__18670 = j;
var G__18671 = k;
var G__18672 = l;
var G__18673 = m;
var G__18674 = n;
var G__18675 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__18661,G__18662,G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671,G__18672,G__18673,G__18674,G__18675) : self__.dispatch_fn.call(null,G__18661,G__18662,G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671,G__18672,G__18673,G__18674,G__18675));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18676 = a;
var G__18677 = b;
var G__18678 = c;
var G__18679 = d;
var G__18680 = e;
var G__18681 = f;
var G__18682 = g;
var G__18683 = h;
var G__18684 = i;
var G__18685 = j;
var G__18686 = k;
var G__18687 = l;
var G__18688 = m;
var G__18689 = n;
var G__18690 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__18676,G__18677,G__18678,G__18679,G__18680,G__18681,G__18682,G__18683,G__18684,G__18685,G__18686,G__18687,G__18688,G__18689,G__18690) : target_fn.call(null,G__18676,G__18677,G__18678,G__18679,G__18680,G__18681,G__18682,G__18683,G__18684,G__18685,G__18686,G__18687,G__18688,G__18689,G__18690));
});
var G__19291__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18691 = a;
var G__18692 = b;
var G__18693 = c;
var G__18694 = d;
var G__18695 = e;
var G__18696 = f;
var G__18697 = g;
var G__18698 = h;
var G__18699 = i;
var G__18700 = j;
var G__18701 = k;
var G__18702 = l;
var G__18703 = m;
var G__18704 = n;
var G__18705 = o;
var G__18706 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__18691,G__18692,G__18693,G__18694,G__18695,G__18696,G__18697,G__18698,G__18699,G__18700,G__18701,G__18702,G__18703,G__18704,G__18705,G__18706) : self__.dispatch_fn.call(null,G__18691,G__18692,G__18693,G__18694,G__18695,G__18696,G__18697,G__18698,G__18699,G__18700,G__18701,G__18702,G__18703,G__18704,G__18705,G__18706));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18707 = a;
var G__18708 = b;
var G__18709 = c;
var G__18710 = d;
var G__18711 = e;
var G__18712 = f;
var G__18713 = g;
var G__18714 = h;
var G__18715 = i;
var G__18716 = j;
var G__18717 = k;
var G__18718 = l;
var G__18719 = m;
var G__18720 = n;
var G__18721 = o;
var G__18722 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__18707,G__18708,G__18709,G__18710,G__18711,G__18712,G__18713,G__18714,G__18715,G__18716,G__18717,G__18718,G__18719,G__18720,G__18721,G__18722) : target_fn.call(null,G__18707,G__18708,G__18709,G__18710,G__18711,G__18712,G__18713,G__18714,G__18715,G__18716,G__18717,G__18718,G__18719,G__18720,G__18721,G__18722));
});
var G__19291__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18723 = a;
var G__18724 = b;
var G__18725 = c;
var G__18726 = d;
var G__18727 = e;
var G__18728 = f;
var G__18729 = g;
var G__18730 = h;
var G__18731 = i;
var G__18732 = j;
var G__18733 = k;
var G__18734 = l;
var G__18735 = m;
var G__18736 = n;
var G__18737 = o;
var G__18738 = p;
var G__18739 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__18723,G__18724,G__18725,G__18726,G__18727,G__18728,G__18729,G__18730,G__18731,G__18732,G__18733,G__18734,G__18735,G__18736,G__18737,G__18738,G__18739) : self__.dispatch_fn.call(null,G__18723,G__18724,G__18725,G__18726,G__18727,G__18728,G__18729,G__18730,G__18731,G__18732,G__18733,G__18734,G__18735,G__18736,G__18737,G__18738,G__18739));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18740 = a;
var G__18741 = b;
var G__18742 = c;
var G__18743 = d;
var G__18744 = e;
var G__18745 = f;
var G__18746 = g;
var G__18747 = h;
var G__18748 = i;
var G__18749 = j;
var G__18750 = k;
var G__18751 = l;
var G__18752 = m;
var G__18753 = n;
var G__18754 = o;
var G__18755 = p;
var G__18756 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__18740,G__18741,G__18742,G__18743,G__18744,G__18745,G__18746,G__18747,G__18748,G__18749,G__18750,G__18751,G__18752,G__18753,G__18754,G__18755,G__18756) : target_fn.call(null,G__18740,G__18741,G__18742,G__18743,G__18744,G__18745,G__18746,G__18747,G__18748,G__18749,G__18750,G__18751,G__18752,G__18753,G__18754,G__18755,G__18756));
});
var G__19291__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18757 = a;
var G__18758 = b;
var G__18759 = c;
var G__18760 = d;
var G__18761 = e;
var G__18762 = f;
var G__18763 = g;
var G__18764 = h;
var G__18765 = i;
var G__18766 = j;
var G__18767 = k;
var G__18768 = l;
var G__18769 = m;
var G__18770 = n;
var G__18771 = o;
var G__18772 = p;
var G__18773 = q;
var G__18774 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__18757,G__18758,G__18759,G__18760,G__18761,G__18762,G__18763,G__18764,G__18765,G__18766,G__18767,G__18768,G__18769,G__18770,G__18771,G__18772,G__18773,G__18774) : self__.dispatch_fn.call(null,G__18757,G__18758,G__18759,G__18760,G__18761,G__18762,G__18763,G__18764,G__18765,G__18766,G__18767,G__18768,G__18769,G__18770,G__18771,G__18772,G__18773,G__18774));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18775 = a;
var G__18776 = b;
var G__18777 = c;
var G__18778 = d;
var G__18779 = e;
var G__18780 = f;
var G__18781 = g;
var G__18782 = h;
var G__18783 = i;
var G__18784 = j;
var G__18785 = k;
var G__18786 = l;
var G__18787 = m;
var G__18788 = n;
var G__18789 = o;
var G__18790 = p;
var G__18791 = q;
var G__18792 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__18775,G__18776,G__18777,G__18778,G__18779,G__18780,G__18781,G__18782,G__18783,G__18784,G__18785,G__18786,G__18787,G__18788,G__18789,G__18790,G__18791,G__18792) : target_fn.call(null,G__18775,G__18776,G__18777,G__18778,G__18779,G__18780,G__18781,G__18782,G__18783,G__18784,G__18785,G__18786,G__18787,G__18788,G__18789,G__18790,G__18791,G__18792));
});
var G__19291__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18793 = a;
var G__18794 = b;
var G__18795 = c;
var G__18796 = d;
var G__18797 = e;
var G__18798 = f;
var G__18799 = g;
var G__18800 = h;
var G__18801 = i;
var G__18802 = j;
var G__18803 = k;
var G__18804 = l;
var G__18805 = m;
var G__18806 = n;
var G__18807 = o;
var G__18808 = p;
var G__18809 = q;
var G__18810 = r;
var G__18811 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__18793,G__18794,G__18795,G__18796,G__18797,G__18798,G__18799,G__18800,G__18801,G__18802,G__18803,G__18804,G__18805,G__18806,G__18807,G__18808,G__18809,G__18810,G__18811) : self__.dispatch_fn.call(null,G__18793,G__18794,G__18795,G__18796,G__18797,G__18798,G__18799,G__18800,G__18801,G__18802,G__18803,G__18804,G__18805,G__18806,G__18807,G__18808,G__18809,G__18810,G__18811));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18812 = a;
var G__18813 = b;
var G__18814 = c;
var G__18815 = d;
var G__18816 = e;
var G__18817 = f;
var G__18818 = g;
var G__18819 = h;
var G__18820 = i;
var G__18821 = j;
var G__18822 = k;
var G__18823 = l;
var G__18824 = m;
var G__18825 = n;
var G__18826 = o;
var G__18827 = p;
var G__18828 = q;
var G__18829 = r;
var G__18830 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__18812,G__18813,G__18814,G__18815,G__18816,G__18817,G__18818,G__18819,G__18820,G__18821,G__18822,G__18823,G__18824,G__18825,G__18826,G__18827,G__18828,G__18829,G__18830) : target_fn.call(null,G__18812,G__18813,G__18814,G__18815,G__18816,G__18817,G__18818,G__18819,G__18820,G__18821,G__18822,G__18823,G__18824,G__18825,G__18826,G__18827,G__18828,G__18829,G__18830));
});
var G__19291__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18831 = a;
var G__18832 = b;
var G__18833 = c;
var G__18834 = d;
var G__18835 = e;
var G__18836 = f;
var G__18837 = g;
var G__18838 = h;
var G__18839 = i;
var G__18840 = j;
var G__18841 = k;
var G__18842 = l;
var G__18843 = m;
var G__18844 = n;
var G__18845 = o;
var G__18846 = p;
var G__18847 = q;
var G__18848 = r;
var G__18849 = s;
var G__18850 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__18831,G__18832,G__18833,G__18834,G__18835,G__18836,G__18837,G__18838,G__18839,G__18840,G__18841,G__18842,G__18843,G__18844,G__18845,G__18846,G__18847,G__18848,G__18849,G__18850) : self__.dispatch_fn.call(null,G__18831,G__18832,G__18833,G__18834,G__18835,G__18836,G__18837,G__18838,G__18839,G__18840,G__18841,G__18842,G__18843,G__18844,G__18845,G__18846,G__18847,G__18848,G__18849,G__18850));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18851 = a;
var G__18852 = b;
var G__18853 = c;
var G__18854 = d;
var G__18855 = e;
var G__18856 = f;
var G__18857 = g;
var G__18858 = h;
var G__18859 = i;
var G__18860 = j;
var G__18861 = k;
var G__18862 = l;
var G__18863 = m;
var G__18864 = n;
var G__18865 = o;
var G__18866 = p;
var G__18867 = q;
var G__18868 = r;
var G__18869 = s;
var G__18870 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__18851,G__18852,G__18853,G__18854,G__18855,G__18856,G__18857,G__18858,G__18859,G__18860,G__18861,G__18862,G__18863,G__18864,G__18865,G__18866,G__18867,G__18868,G__18869,G__18870) : target_fn.call(null,G__18851,G__18852,G__18853,G__18854,G__18855,G__18856,G__18857,G__18858,G__18859,G__18860,G__18861,G__18862,G__18863,G__18864,G__18865,G__18866,G__18867,G__18868,G__18869,G__18870));
});
var G__19291__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__19291 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__19291__1.call(this,self__);
case 2:
return G__19291__2.call(this,self__,a);
case 3:
return G__19291__3.call(this,self__,a,b);
case 4:
return G__19291__4.call(this,self__,a,b,c);
case 5:
return G__19291__5.call(this,self__,a,b,c,d);
case 6:
return G__19291__6.call(this,self__,a,b,c,d,e);
case 7:
return G__19291__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__19291__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__19291__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__19291__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__19291__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__19291__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__19291__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__19291__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__19291__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__19291__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__19291__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__19291__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__19291__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__19291__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__19291__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__19291__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19291.cljs$core$IFn$_invoke$arity$1 = G__19291__1;
G__19291.cljs$core$IFn$_invoke$arity$2 = G__19291__2;
G__19291.cljs$core$IFn$_invoke$arity$3 = G__19291__3;
G__19291.cljs$core$IFn$_invoke$arity$4 = G__19291__4;
G__19291.cljs$core$IFn$_invoke$arity$5 = G__19291__5;
G__19291.cljs$core$IFn$_invoke$arity$6 = G__19291__6;
G__19291.cljs$core$IFn$_invoke$arity$7 = G__19291__7;
G__19291.cljs$core$IFn$_invoke$arity$8 = G__19291__8;
G__19291.cljs$core$IFn$_invoke$arity$9 = G__19291__9;
G__19291.cljs$core$IFn$_invoke$arity$10 = G__19291__10;
G__19291.cljs$core$IFn$_invoke$arity$11 = G__19291__11;
G__19291.cljs$core$IFn$_invoke$arity$12 = G__19291__12;
G__19291.cljs$core$IFn$_invoke$arity$13 = G__19291__13;
G__19291.cljs$core$IFn$_invoke$arity$14 = G__19291__14;
G__19291.cljs$core$IFn$_invoke$arity$15 = G__19291__15;
G__19291.cljs$core$IFn$_invoke$arity$16 = G__19291__16;
G__19291.cljs$core$IFn$_invoke$arity$17 = G__19291__17;
G__19291.cljs$core$IFn$_invoke$arity$18 = G__19291__18;
G__19291.cljs$core$IFn$_invoke$arity$19 = G__19291__19;
G__19291.cljs$core$IFn$_invoke$arity$20 = G__19291__20;
G__19291.cljs$core$IFn$_invoke$arity$21 = G__19291__21;
G__19291.cljs$core$IFn$_invoke$arity$22 = G__19291__22;
return G__19291;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args18443){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18443)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18871 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__18871) : self__.dispatch_fn.call(null,G__18871));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18872 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__18872) : target_fn.call(null,G__18872));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18873 = a;
var G__18874 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__18873,G__18874) : self__.dispatch_fn.call(null,G__18873,G__18874));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18875 = a;
var G__18876 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__18875,G__18876) : target_fn.call(null,G__18875,G__18876));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18877 = a;
var G__18878 = b;
var G__18879 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__18877,G__18878,G__18879) : self__.dispatch_fn.call(null,G__18877,G__18878,G__18879));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18880 = a;
var G__18881 = b;
var G__18882 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__18880,G__18881,G__18882) : target_fn.call(null,G__18880,G__18881,G__18882));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18883 = a;
var G__18884 = b;
var G__18885 = c;
var G__18886 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__18883,G__18884,G__18885,G__18886) : self__.dispatch_fn.call(null,G__18883,G__18884,G__18885,G__18886));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18887 = a;
var G__18888 = b;
var G__18889 = c;
var G__18890 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__18887,G__18888,G__18889,G__18890) : target_fn.call(null,G__18887,G__18888,G__18889,G__18890));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18891 = a;
var G__18892 = b;
var G__18893 = c;
var G__18894 = d;
var G__18895 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__18891,G__18892,G__18893,G__18894,G__18895) : self__.dispatch_fn.call(null,G__18891,G__18892,G__18893,G__18894,G__18895));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18896 = a;
var G__18897 = b;
var G__18898 = c;
var G__18899 = d;
var G__18900 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__18896,G__18897,G__18898,G__18899,G__18900) : target_fn.call(null,G__18896,G__18897,G__18898,G__18899,G__18900));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18901 = a;
var G__18902 = b;
var G__18903 = c;
var G__18904 = d;
var G__18905 = e;
var G__18906 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__18901,G__18902,G__18903,G__18904,G__18905,G__18906) : self__.dispatch_fn.call(null,G__18901,G__18902,G__18903,G__18904,G__18905,G__18906));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18907 = a;
var G__18908 = b;
var G__18909 = c;
var G__18910 = d;
var G__18911 = e;
var G__18912 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__18907,G__18908,G__18909,G__18910,G__18911,G__18912) : target_fn.call(null,G__18907,G__18908,G__18909,G__18910,G__18911,G__18912));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18913 = a;
var G__18914 = b;
var G__18915 = c;
var G__18916 = d;
var G__18917 = e;
var G__18918 = f;
var G__18919 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__18913,G__18914,G__18915,G__18916,G__18917,G__18918,G__18919) : self__.dispatch_fn.call(null,G__18913,G__18914,G__18915,G__18916,G__18917,G__18918,G__18919));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18920 = a;
var G__18921 = b;
var G__18922 = c;
var G__18923 = d;
var G__18924 = e;
var G__18925 = f;
var G__18926 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__18920,G__18921,G__18922,G__18923,G__18924,G__18925,G__18926) : target_fn.call(null,G__18920,G__18921,G__18922,G__18923,G__18924,G__18925,G__18926));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18927 = a;
var G__18928 = b;
var G__18929 = c;
var G__18930 = d;
var G__18931 = e;
var G__18932 = f;
var G__18933 = g;
var G__18934 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__18927,G__18928,G__18929,G__18930,G__18931,G__18932,G__18933,G__18934) : self__.dispatch_fn.call(null,G__18927,G__18928,G__18929,G__18930,G__18931,G__18932,G__18933,G__18934));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18935 = a;
var G__18936 = b;
var G__18937 = c;
var G__18938 = d;
var G__18939 = e;
var G__18940 = f;
var G__18941 = g;
var G__18942 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__18935,G__18936,G__18937,G__18938,G__18939,G__18940,G__18941,G__18942) : target_fn.call(null,G__18935,G__18936,G__18937,G__18938,G__18939,G__18940,G__18941,G__18942));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18943 = a;
var G__18944 = b;
var G__18945 = c;
var G__18946 = d;
var G__18947 = e;
var G__18948 = f;
var G__18949 = g;
var G__18950 = h;
var G__18951 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__18943,G__18944,G__18945,G__18946,G__18947,G__18948,G__18949,G__18950,G__18951) : self__.dispatch_fn.call(null,G__18943,G__18944,G__18945,G__18946,G__18947,G__18948,G__18949,G__18950,G__18951));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18952 = a;
var G__18953 = b;
var G__18954 = c;
var G__18955 = d;
var G__18956 = e;
var G__18957 = f;
var G__18958 = g;
var G__18959 = h;
var G__18960 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__18952,G__18953,G__18954,G__18955,G__18956,G__18957,G__18958,G__18959,G__18960) : target_fn.call(null,G__18952,G__18953,G__18954,G__18955,G__18956,G__18957,G__18958,G__18959,G__18960));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18961 = a;
var G__18962 = b;
var G__18963 = c;
var G__18964 = d;
var G__18965 = e;
var G__18966 = f;
var G__18967 = g;
var G__18968 = h;
var G__18969 = i;
var G__18970 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__18961,G__18962,G__18963,G__18964,G__18965,G__18966,G__18967,G__18968,G__18969,G__18970) : self__.dispatch_fn.call(null,G__18961,G__18962,G__18963,G__18964,G__18965,G__18966,G__18967,G__18968,G__18969,G__18970));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18971 = a;
var G__18972 = b;
var G__18973 = c;
var G__18974 = d;
var G__18975 = e;
var G__18976 = f;
var G__18977 = g;
var G__18978 = h;
var G__18979 = i;
var G__18980 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__18971,G__18972,G__18973,G__18974,G__18975,G__18976,G__18977,G__18978,G__18979,G__18980) : target_fn.call(null,G__18971,G__18972,G__18973,G__18974,G__18975,G__18976,G__18977,G__18978,G__18979,G__18980));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18981 = a;
var G__18982 = b;
var G__18983 = c;
var G__18984 = d;
var G__18985 = e;
var G__18986 = f;
var G__18987 = g;
var G__18988 = h;
var G__18989 = i;
var G__18990 = j;
var G__18991 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__18981,G__18982,G__18983,G__18984,G__18985,G__18986,G__18987,G__18988,G__18989,G__18990,G__18991) : self__.dispatch_fn.call(null,G__18981,G__18982,G__18983,G__18984,G__18985,G__18986,G__18987,G__18988,G__18989,G__18990,G__18991));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18992 = a;
var G__18993 = b;
var G__18994 = c;
var G__18995 = d;
var G__18996 = e;
var G__18997 = f;
var G__18998 = g;
var G__18999 = h;
var G__19000 = i;
var G__19001 = j;
var G__19002 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__18992,G__18993,G__18994,G__18995,G__18996,G__18997,G__18998,G__18999,G__19000,G__19001,G__19002) : target_fn.call(null,G__18992,G__18993,G__18994,G__18995,G__18996,G__18997,G__18998,G__18999,G__19000,G__19001,G__19002));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19003 = a;
var G__19004 = b;
var G__19005 = c;
var G__19006 = d;
var G__19007 = e;
var G__19008 = f;
var G__19009 = g;
var G__19010 = h;
var G__19011 = i;
var G__19012 = j;
var G__19013 = k;
var G__19014 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__19003,G__19004,G__19005,G__19006,G__19007,G__19008,G__19009,G__19010,G__19011,G__19012,G__19013,G__19014) : self__.dispatch_fn.call(null,G__19003,G__19004,G__19005,G__19006,G__19007,G__19008,G__19009,G__19010,G__19011,G__19012,G__19013,G__19014));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19015 = a;
var G__19016 = b;
var G__19017 = c;
var G__19018 = d;
var G__19019 = e;
var G__19020 = f;
var G__19021 = g;
var G__19022 = h;
var G__19023 = i;
var G__19024 = j;
var G__19025 = k;
var G__19026 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__19015,G__19016,G__19017,G__19018,G__19019,G__19020,G__19021,G__19022,G__19023,G__19024,G__19025,G__19026) : target_fn.call(null,G__19015,G__19016,G__19017,G__19018,G__19019,G__19020,G__19021,G__19022,G__19023,G__19024,G__19025,G__19026));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19027 = a;
var G__19028 = b;
var G__19029 = c;
var G__19030 = d;
var G__19031 = e;
var G__19032 = f;
var G__19033 = g;
var G__19034 = h;
var G__19035 = i;
var G__19036 = j;
var G__19037 = k;
var G__19038 = l;
var G__19039 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__19027,G__19028,G__19029,G__19030,G__19031,G__19032,G__19033,G__19034,G__19035,G__19036,G__19037,G__19038,G__19039) : self__.dispatch_fn.call(null,G__19027,G__19028,G__19029,G__19030,G__19031,G__19032,G__19033,G__19034,G__19035,G__19036,G__19037,G__19038,G__19039));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19040 = a;
var G__19041 = b;
var G__19042 = c;
var G__19043 = d;
var G__19044 = e;
var G__19045 = f;
var G__19046 = g;
var G__19047 = h;
var G__19048 = i;
var G__19049 = j;
var G__19050 = k;
var G__19051 = l;
var G__19052 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__19040,G__19041,G__19042,G__19043,G__19044,G__19045,G__19046,G__19047,G__19048,G__19049,G__19050,G__19051,G__19052) : target_fn.call(null,G__19040,G__19041,G__19042,G__19043,G__19044,G__19045,G__19046,G__19047,G__19048,G__19049,G__19050,G__19051,G__19052));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19053 = a;
var G__19054 = b;
var G__19055 = c;
var G__19056 = d;
var G__19057 = e;
var G__19058 = f;
var G__19059 = g;
var G__19060 = h;
var G__19061 = i;
var G__19062 = j;
var G__19063 = k;
var G__19064 = l;
var G__19065 = m;
var G__19066 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__19053,G__19054,G__19055,G__19056,G__19057,G__19058,G__19059,G__19060,G__19061,G__19062,G__19063,G__19064,G__19065,G__19066) : self__.dispatch_fn.call(null,G__19053,G__19054,G__19055,G__19056,G__19057,G__19058,G__19059,G__19060,G__19061,G__19062,G__19063,G__19064,G__19065,G__19066));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19067 = a;
var G__19068 = b;
var G__19069 = c;
var G__19070 = d;
var G__19071 = e;
var G__19072 = f;
var G__19073 = g;
var G__19074 = h;
var G__19075 = i;
var G__19076 = j;
var G__19077 = k;
var G__19078 = l;
var G__19079 = m;
var G__19080 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__19067,G__19068,G__19069,G__19070,G__19071,G__19072,G__19073,G__19074,G__19075,G__19076,G__19077,G__19078,G__19079,G__19080) : target_fn.call(null,G__19067,G__19068,G__19069,G__19070,G__19071,G__19072,G__19073,G__19074,G__19075,G__19076,G__19077,G__19078,G__19079,G__19080));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19081 = a;
var G__19082 = b;
var G__19083 = c;
var G__19084 = d;
var G__19085 = e;
var G__19086 = f;
var G__19087 = g;
var G__19088 = h;
var G__19089 = i;
var G__19090 = j;
var G__19091 = k;
var G__19092 = l;
var G__19093 = m;
var G__19094 = n;
var G__19095 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__19081,G__19082,G__19083,G__19084,G__19085,G__19086,G__19087,G__19088,G__19089,G__19090,G__19091,G__19092,G__19093,G__19094,G__19095) : self__.dispatch_fn.call(null,G__19081,G__19082,G__19083,G__19084,G__19085,G__19086,G__19087,G__19088,G__19089,G__19090,G__19091,G__19092,G__19093,G__19094,G__19095));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19096 = a;
var G__19097 = b;
var G__19098 = c;
var G__19099 = d;
var G__19100 = e;
var G__19101 = f;
var G__19102 = g;
var G__19103 = h;
var G__19104 = i;
var G__19105 = j;
var G__19106 = k;
var G__19107 = l;
var G__19108 = m;
var G__19109 = n;
var G__19110 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__19096,G__19097,G__19098,G__19099,G__19100,G__19101,G__19102,G__19103,G__19104,G__19105,G__19106,G__19107,G__19108,G__19109,G__19110) : target_fn.call(null,G__19096,G__19097,G__19098,G__19099,G__19100,G__19101,G__19102,G__19103,G__19104,G__19105,G__19106,G__19107,G__19108,G__19109,G__19110));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19111 = a;
var G__19112 = b;
var G__19113 = c;
var G__19114 = d;
var G__19115 = e;
var G__19116 = f;
var G__19117 = g;
var G__19118 = h;
var G__19119 = i;
var G__19120 = j;
var G__19121 = k;
var G__19122 = l;
var G__19123 = m;
var G__19124 = n;
var G__19125 = o;
var G__19126 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__19111,G__19112,G__19113,G__19114,G__19115,G__19116,G__19117,G__19118,G__19119,G__19120,G__19121,G__19122,G__19123,G__19124,G__19125,G__19126) : self__.dispatch_fn.call(null,G__19111,G__19112,G__19113,G__19114,G__19115,G__19116,G__19117,G__19118,G__19119,G__19120,G__19121,G__19122,G__19123,G__19124,G__19125,G__19126));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19127 = a;
var G__19128 = b;
var G__19129 = c;
var G__19130 = d;
var G__19131 = e;
var G__19132 = f;
var G__19133 = g;
var G__19134 = h;
var G__19135 = i;
var G__19136 = j;
var G__19137 = k;
var G__19138 = l;
var G__19139 = m;
var G__19140 = n;
var G__19141 = o;
var G__19142 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__19127,G__19128,G__19129,G__19130,G__19131,G__19132,G__19133,G__19134,G__19135,G__19136,G__19137,G__19138,G__19139,G__19140,G__19141,G__19142) : target_fn.call(null,G__19127,G__19128,G__19129,G__19130,G__19131,G__19132,G__19133,G__19134,G__19135,G__19136,G__19137,G__19138,G__19139,G__19140,G__19141,G__19142));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19143 = a;
var G__19144 = b;
var G__19145 = c;
var G__19146 = d;
var G__19147 = e;
var G__19148 = f;
var G__19149 = g;
var G__19150 = h;
var G__19151 = i;
var G__19152 = j;
var G__19153 = k;
var G__19154 = l;
var G__19155 = m;
var G__19156 = n;
var G__19157 = o;
var G__19158 = p;
var G__19159 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__19143,G__19144,G__19145,G__19146,G__19147,G__19148,G__19149,G__19150,G__19151,G__19152,G__19153,G__19154,G__19155,G__19156,G__19157,G__19158,G__19159) : self__.dispatch_fn.call(null,G__19143,G__19144,G__19145,G__19146,G__19147,G__19148,G__19149,G__19150,G__19151,G__19152,G__19153,G__19154,G__19155,G__19156,G__19157,G__19158,G__19159));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19160 = a;
var G__19161 = b;
var G__19162 = c;
var G__19163 = d;
var G__19164 = e;
var G__19165 = f;
var G__19166 = g;
var G__19167 = h;
var G__19168 = i;
var G__19169 = j;
var G__19170 = k;
var G__19171 = l;
var G__19172 = m;
var G__19173 = n;
var G__19174 = o;
var G__19175 = p;
var G__19176 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__19160,G__19161,G__19162,G__19163,G__19164,G__19165,G__19166,G__19167,G__19168,G__19169,G__19170,G__19171,G__19172,G__19173,G__19174,G__19175,G__19176) : target_fn.call(null,G__19160,G__19161,G__19162,G__19163,G__19164,G__19165,G__19166,G__19167,G__19168,G__19169,G__19170,G__19171,G__19172,G__19173,G__19174,G__19175,G__19176));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19177 = a;
var G__19178 = b;
var G__19179 = c;
var G__19180 = d;
var G__19181 = e;
var G__19182 = f;
var G__19183 = g;
var G__19184 = h;
var G__19185 = i;
var G__19186 = j;
var G__19187 = k;
var G__19188 = l;
var G__19189 = m;
var G__19190 = n;
var G__19191 = o;
var G__19192 = p;
var G__19193 = q;
var G__19194 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__19177,G__19178,G__19179,G__19180,G__19181,G__19182,G__19183,G__19184,G__19185,G__19186,G__19187,G__19188,G__19189,G__19190,G__19191,G__19192,G__19193,G__19194) : self__.dispatch_fn.call(null,G__19177,G__19178,G__19179,G__19180,G__19181,G__19182,G__19183,G__19184,G__19185,G__19186,G__19187,G__19188,G__19189,G__19190,G__19191,G__19192,G__19193,G__19194));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19195 = a;
var G__19196 = b;
var G__19197 = c;
var G__19198 = d;
var G__19199 = e;
var G__19200 = f;
var G__19201 = g;
var G__19202 = h;
var G__19203 = i;
var G__19204 = j;
var G__19205 = k;
var G__19206 = l;
var G__19207 = m;
var G__19208 = n;
var G__19209 = o;
var G__19210 = p;
var G__19211 = q;
var G__19212 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__19195,G__19196,G__19197,G__19198,G__19199,G__19200,G__19201,G__19202,G__19203,G__19204,G__19205,G__19206,G__19207,G__19208,G__19209,G__19210,G__19211,G__19212) : target_fn.call(null,G__19195,G__19196,G__19197,G__19198,G__19199,G__19200,G__19201,G__19202,G__19203,G__19204,G__19205,G__19206,G__19207,G__19208,G__19209,G__19210,G__19211,G__19212));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19213 = a;
var G__19214 = b;
var G__19215 = c;
var G__19216 = d;
var G__19217 = e;
var G__19218 = f;
var G__19219 = g;
var G__19220 = h;
var G__19221 = i;
var G__19222 = j;
var G__19223 = k;
var G__19224 = l;
var G__19225 = m;
var G__19226 = n;
var G__19227 = o;
var G__19228 = p;
var G__19229 = q;
var G__19230 = r;
var G__19231 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__19213,G__19214,G__19215,G__19216,G__19217,G__19218,G__19219,G__19220,G__19221,G__19222,G__19223,G__19224,G__19225,G__19226,G__19227,G__19228,G__19229,G__19230,G__19231) : self__.dispatch_fn.call(null,G__19213,G__19214,G__19215,G__19216,G__19217,G__19218,G__19219,G__19220,G__19221,G__19222,G__19223,G__19224,G__19225,G__19226,G__19227,G__19228,G__19229,G__19230,G__19231));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19232 = a;
var G__19233 = b;
var G__19234 = c;
var G__19235 = d;
var G__19236 = e;
var G__19237 = f;
var G__19238 = g;
var G__19239 = h;
var G__19240 = i;
var G__19241 = j;
var G__19242 = k;
var G__19243 = l;
var G__19244 = m;
var G__19245 = n;
var G__19246 = o;
var G__19247 = p;
var G__19248 = q;
var G__19249 = r;
var G__19250 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__19232,G__19233,G__19234,G__19235,G__19236,G__19237,G__19238,G__19239,G__19240,G__19241,G__19242,G__19243,G__19244,G__19245,G__19246,G__19247,G__19248,G__19249,G__19250) : target_fn.call(null,G__19232,G__19233,G__19234,G__19235,G__19236,G__19237,G__19238,G__19239,G__19240,G__19241,G__19242,G__19243,G__19244,G__19245,G__19246,G__19247,G__19248,G__19249,G__19250));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19251 = a;
var G__19252 = b;
var G__19253 = c;
var G__19254 = d;
var G__19255 = e;
var G__19256 = f;
var G__19257 = g;
var G__19258 = h;
var G__19259 = i;
var G__19260 = j;
var G__19261 = k;
var G__19262 = l;
var G__19263 = m;
var G__19264 = n;
var G__19265 = o;
var G__19266 = p;
var G__19267 = q;
var G__19268 = r;
var G__19269 = s;
var G__19270 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__19251,G__19252,G__19253,G__19254,G__19255,G__19256,G__19257,G__19258,G__19259,G__19260,G__19261,G__19262,G__19263,G__19264,G__19265,G__19266,G__19267,G__19268,G__19269,G__19270) : self__.dispatch_fn.call(null,G__19251,G__19252,G__19253,G__19254,G__19255,G__19256,G__19257,G__19258,G__19259,G__19260,G__19261,G__19262,G__19263,G__19264,G__19265,G__19266,G__19267,G__19268,G__19269,G__19270));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19271 = a;
var G__19272 = b;
var G__19273 = c;
var G__19274 = d;
var G__19275 = e;
var G__19276 = f;
var G__19277 = g;
var G__19278 = h;
var G__19279 = i;
var G__19280 = j;
var G__19281 = k;
var G__19282 = l;
var G__19283 = m;
var G__19284 = n;
var G__19285 = o;
var G__19286 = p;
var G__19287 = q;
var G__19288 = r;
var G__19289 = s;
var G__19290 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__19271,G__19272,G__19273,G__19274,G__19275,G__19276,G__19277,G__19278,G__19279,G__19280,G__19281,G__19282,G__19283,G__19284,G__19285,G__19286,G__19287,G__19288,G__19289,G__19290) : target_fn.call(null,G__19271,G__19272,G__19273,G__19274,G__19275,G__19276,G__19277,G__19278,G__19279,G__19280,G__19281,G__19282,G__19283,G__19284,G__19285,G__19286,G__19287,G__19288,G__19289,G__19290));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__19292 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__19292);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__12216__auto__,writer__12217__auto__,opt__12218__auto__){
return cljs.core._write(writer__12217__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__19297 = x;
var G__19298 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__19297,G__19298) : pred.call(null,G__19297,G__19298));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__19299 = y;
var G__19300 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__19299,G__19300) : pred.call(null,G__19299,G__19300));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map